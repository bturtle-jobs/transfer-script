{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\src\\\\main\\\\content\\\\include\\\\C0202002_tab07_tab01_tab02.js\";\nimport React, { Component } from 'react';\nimport { OwpButton, OwpSearchDateField, OwpSearchSelectField, OwpSearchTextField, OwpTextField, OwpTreeGrid, OwpMessage } from 'owp/wrapper';\nimport Formsy from 'formsy-react';\nimport * as TGEvent from 'owp/TGEvent';\nimport moment from 'moment';\nimport { query } from 'owp/api';\nimport { setGridData, setRowAttribute, restoreGridSelect } from 'main/GridUtill';\nvar MAX_ROW = 6;\n\nvar Page = /*#__PURE__*/function (_Component) {\n  _inherits(Page, _Component);\n\n  var _super = _createSuper(Page);\n\n  function Page(props) {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _super.call(this, props);\n\n    _this.loadStdMainConfig = function () {};\n\n    _this.handleAddRow = function () {\n      var G = TGEvent.getGridByID('C0202011');\n\n      var _rows = Object.values(G['Rows']).filter(function (item) {\n        return item.Kind == 'Data';\n      });\n\n      var checkLength = _rows.length;\n\n      if (checkLength >= MAX_ROW) {\n        OwpMessage({\n          message: '6 미만',\n          variant: 'error'\n        });\n      } else {\n        G.ActionAcceptEdit();\n        TGEvent.OWPTGAddRow('C0202011', function (row) {//TODO:do something here\n          // const G = TGEvent.getGridByID('C0202011');\n          // console.log(G.GetFirst());\n          // console.log(row);\n        }); //CONFIG_TYPE - D021000\n      }\n    };\n\n    _this.handleUpdate = function () {\n      var G = TGEvent.getGridByID('C0202011');\n\n      _this.fillGridData(G);\n    };\n\n    _this.handleDeleteRow = function () {\n      var G = TGEvent.getGridByID('C0202011');\n\n      var _rows = Object.values(G['Rows']).filter(function (item) {\n        return item.Kind == 'Data';\n      });\n\n      var checkLength = _rows.length;\n      var arrData = [];\n\n      _rows.some(function (row) {\n        if (row['Selected'] === 1) {\n          return false;\n        } else {\n          arrData.push({\n            FACILITY: row['FACILITY'],\n            MATERIAL: row['MATERIAL'],\n            CONFIG_TYPE: row['CONFIG_TYPE'],\n            TOTAL_INPUT: row['TOTAL_INPUT'],\n            INPUT_SPEED: row['INPUT_SPEED'],\n            MESASURING_EQUIPMENT: row['MESASURING_EQUIPMENT']\n          });\n        }\n      });\n\n      setGridData('C0202011', arrData);\n    };\n\n    _this.fillGridData = function (G) {\n      if (G) {\n        var _rows = Object.values(G['Rows']).filter(function (item) {\n          return item.Kind == 'Data';\n        });\n\n        var arrData = [];\n\n        _rows.some(function (row) {\n          arrData.push({\n            FACILITY: row['FACILITY'],\n            MATERIAL: row['MATERIAL'],\n            CONFIG_TYPE: row['CONFIG_TYPE'],\n            TOTAL_INPUT: row['TOTAL_INPUT'],\n            INPUT_SPEED: row['INPUT_SPEED'],\n            MESASURING_EQUIPMENT: row['MESASURING_EQUIPMENT']\n          });\n        });\n\n        setGridData('C0202011', arrData);\n        restoreGridSelect('C0202011');\n        G.ReloadBody();\n      }\n    };\n\n    _this.state = {};\n    return _this;\n  }\n  /**\r\n   * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n   * @param {Event} event 발생한 이벤트 객체\r\n   * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n   */\n\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _showApprovalDialog = this.showApprovalDialog;\n      this.loadStdMainConfig();\n    } //날짜 디폴드값 설정 함수\n    //load master data and first rowData\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('tap 2');\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 b\",\n        style: {\n          padding: '13px 0 0 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, \"Std \\uB300\\uC2DC\\uBCF4\\uB4DC \\uC124\\uC815\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          textAlign: 'right',\n          paddingRight: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'contained',\n        onClick: function onClick() {\n          return _this2.handleAddRow();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, \"\\uCD94\\uAC00\"), /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'contained',\n        onClick: function onClick() {\n          return _this2.handleUpdate();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'outlined',\n        onClick: function onClick() {\n          return _this2.handleDeleteRow();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, \"\\uC0AD\\uC81C\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        style: {\n          padding: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(OwpTreeGrid, {\n        id: \"C0202011\",\n        LayoutUrl: \"assets/data/C0202011Def.xml\",\n        DataUrl: '/assets/data/C0202000Data.xml',\n        width: \"100%\" // height=\"17vh\"\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/src/main/content/include/C0202002_tab07_tab01_tab02.js"],"names":["React","Component","OwpButton","OwpSearchDateField","OwpSearchSelectField","OwpSearchTextField","OwpTextField","OwpTreeGrid","OwpMessage","Formsy","TGEvent","moment","query","setGridData","setRowAttribute","restoreGridSelect","MAX_ROW","Page","props","loadStdMainConfig","handleAddRow","G","getGridByID","_rows","Object","values","filter","item","Kind","checkLength","length","message","variant","ActionAcceptEdit","OWPTGAddRow","row","handleUpdate","fillGridData","handleDeleteRow","arrData","some","push","FACILITY","MATERIAL","CONFIG_TYPE","TOTAL_INPUT","INPUT_SPEED","MESASURING_EQUIPMENT","ReloadBody","state","_showApprovalDialog","showApprovalDialog","console","log","width","padding","textAlign","paddingRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    OwpButton,\r\n    OwpSearchDateField,\r\n    OwpSearchSelectField,\r\n    OwpSearchTextField,\r\n    OwpTextField,\r\n    OwpTreeGrid,\r\n    OwpMessage,\r\n} from 'owp/wrapper';\r\nimport Formsy from 'formsy-react';\r\nimport * as TGEvent from 'owp/TGEvent';\r\nimport moment from 'moment';\r\nimport { query } from 'owp/api';\r\nimport { setGridData, setRowAttribute, restoreGridSelect } from 'main/GridUtill';\r\n\r\nconst MAX_ROW = 6;\r\nclass Page extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    /**\r\n     * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n     * @param {Event} event 발생한 이벤트 객체\r\n     * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n     */\r\n    componentDidMount() {\r\n        const _showApprovalDialog = this.showApprovalDialog;\r\n        this.loadStdMainConfig();\r\n    }\r\n    //날짜 디폴드값 설정 함수\r\n    //load master data and first rowData\r\n    loadStdMainConfig = () => {};\r\n\r\n    handleAddRow = () => {\r\n        const G = TGEvent.getGridByID('C0202011');\r\n        const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n        const checkLength = _rows.length;\r\n        if (checkLength >= MAX_ROW) {\r\n            OwpMessage({\r\n                message: '6 미만',\r\n                variant: 'error',\r\n            });\r\n        } else {\r\n            G.ActionAcceptEdit();\r\n            TGEvent.OWPTGAddRow('C0202011', (row) => {\r\n                //TODO:do something here\r\n                // const G = TGEvent.getGridByID('C0202011');\r\n                // console.log(G.GetFirst());\r\n                // console.log(row);\r\n            });\r\n            //CONFIG_TYPE - D021000\r\n        }\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        const G = TGEvent.getGridByID('C0202011');\r\n        this.fillGridData(G);\r\n    };\r\n\r\n    handleDeleteRow = () => {\r\n        const G = TGEvent.getGridByID('C0202011');\r\n        const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n        const checkLength = _rows.length;\r\n        let arrData = [];\r\n        _rows.some((row) => {\r\n            if (row['Selected'] === 1) {\r\n                return false;\r\n            } else {\r\n                arrData.push({\r\n                    FACILITY: row['FACILITY'],\r\n                    MATERIAL: row['MATERIAL'],\r\n                    CONFIG_TYPE: row['CONFIG_TYPE'],\r\n                    TOTAL_INPUT: row['TOTAL_INPUT'],\r\n                    INPUT_SPEED: row['INPUT_SPEED'],\r\n                    MESASURING_EQUIPMENT: row['MESASURING_EQUIPMENT'],\r\n                });\r\n            }\r\n        });\r\n        setGridData('C0202011', arrData);\r\n    };\r\n\r\n    fillGridData = (G) => {\r\n        if (G) {\r\n            const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n            let arrData = [];\r\n            _rows.some((row) => {\r\n                arrData.push({\r\n                    FACILITY: row['FACILITY'],\r\n                    MATERIAL: row['MATERIAL'],\r\n                    CONFIG_TYPE: row['CONFIG_TYPE'],\r\n                    TOTAL_INPUT: row['TOTAL_INPUT'],\r\n                    INPUT_SPEED: row['INPUT_SPEED'],\r\n                    MESASURING_EQUIPMENT: row['MESASURING_EQUIPMENT'],\r\n                });\r\n            });\r\n            setGridData('C0202011', arrData);\r\n            restoreGridSelect('C0202011');\r\n            G.ReloadBody();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        console.log('tap 2');\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 b\" style={{ padding: '13px 0 0 0' }}>\r\n                            Std 대시보드 설정\r\n                        </div>\r\n                        <div className=\"col-md-6\" style={{ textAlign: 'right', paddingRight: '0' }}>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'contained'}\r\n                                onClick={() => this.handleAddRow()}\r\n                            >\r\n                                추가\r\n                            </OwpButton>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'contained'}\r\n                                onClick={() => this.handleUpdate()}\r\n                            >\r\n                                수정\r\n                            </OwpButton>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'outlined'}\r\n                                onClick={() => this.handleDeleteRow()}\r\n                            >\r\n                                삭제\r\n                            </OwpButton>\r\n                        </div>\r\n                        <div className=\"col-md-12\" style={{ padding: '0' }}>\r\n                            <OwpTreeGrid\r\n                                id=\"C0202011\"\r\n                                LayoutUrl=\"assets/data/C0202011Def.xml\"\r\n                                DataUrl={'/assets/data/C0202000Data.xml'}\r\n                                width=\"100%\"\r\n                                // height=\"17vh\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}