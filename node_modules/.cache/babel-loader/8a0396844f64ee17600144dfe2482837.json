{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\@fuse\\\\components\\\\formsy\\\\CheckboxFormsy.js\";\nimport { Checkbox, FormControl, FormControlLabel, FormHelperText } from '@material-ui/core';\nimport { withFormsy } from 'formsy-react';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\n\nvar CheckboxFormsy = /*#__PURE__*/function (_Component) {\n  _inherits(CheckboxFormsy, _Component);\n\n  var _super = _createSuper(CheckboxFormsy);\n\n  function CheckboxFormsy() {\n    var _this;\n\n    _classCallCheck(this, CheckboxFormsy);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.changeValue = function (event) {\n      _this.props.setValue(event.target.checked);\n\n      if (_this.props.onChange) {\n        _this.props.onChange(event);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckboxFormsy, [{\n    key: \"render\",\n    value: function render() {\n      var importedProps = _.pick(this.props, ['checkedIcon', 'classes', 'color', 'disabled', 'disableRipple', 'icon', 'id', 'indeterminate', 'indeterminateIcon', 'inputProps', 'inputRef', 'onChange', 'variant']); // An error message is returned only if the component is invalid\n\n\n      var errorMessage = this.props.getErrorMessage();\n      var value = this.props.getValue();\n      return /*#__PURE__*/React.createElement(FormControl, {\n        error: Boolean(errorMessage),\n        className: this.props.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, importedProps, {\n          type: \"checkbox\",\n          checked: value,\n          onChange: this.changeValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }\n        })),\n        label: this.props.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }), Boolean(errorMessage) && /*#__PURE__*/React.createElement(FormHelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 43\n        }\n      }, errorMessage));\n    }\n  }]);\n\n  return CheckboxFormsy;\n}(Component);\n\nexport default withFormsy(CheckboxFormsy);","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/@fuse/components/formsy/CheckboxFormsy.js"],"names":["Checkbox","FormControl","FormControlLabel","FormHelperText","withFormsy","_","React","Component","CheckboxFormsy","changeValue","event","props","setValue","target","checked","onChange","importedProps","pick","errorMessage","getErrorMessage","value","getValue","Boolean","className","label"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,gBAAhC,EAAkDC,cAAlD,QAAwE,mBAAxE;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,c;;;;;;;;;;;;;;;;UACFC,W,GAAc,UAACC,KAAD,EAAW;AACrB,YAAKC,KAAL,CAAWC,QAAX,CAAoBF,KAAK,CAACG,MAAN,CAAaC,OAAjC;;AACA,UAAI,MAAKH,KAAL,CAAWI,QAAf,EAAyB;AACrB,cAAKJ,KAAL,CAAWI,QAAX,CAAoBL,KAApB;AACH;AACJ,K;;;;;;;WAED,kBAAS;AACL,UAAMM,aAAa,GAAGX,CAAC,CAACY,IAAF,CAAO,KAAKN,KAAZ,EAAmB,CACrC,aADqC,EAErC,SAFqC,EAGrC,OAHqC,EAIrC,UAJqC,EAKrC,eALqC,EAMrC,MANqC,EAOrC,IAPqC,EAQrC,eARqC,EASrC,mBATqC,EAUrC,YAVqC,EAWrC,UAXqC,EAYrC,UAZqC,EAarC,SAbqC,CAAnB,CAAtB,CADK,CAiBL;;;AACA,UAAMO,YAAY,GAAG,KAAKP,KAAL,CAAWQ,eAAX,EAArB;AACA,UAAMC,KAAK,GAAG,KAAKT,KAAL,CAAWU,QAAX,EAAd;AACA,0BACI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAEC,OAAO,CAACJ,YAAD,CAA3B;AAA2C,QAAA,SAAS,EAAE,KAAKP,KAAL,CAAWY,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AACI,QAAA,OAAO,eACH,oBAAC,QAAD,oBACQP,aADR;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,OAAO,EAAEI,KAHb;AAII,UAAA,QAAQ,EAAE,KAAKX,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFR;AASI,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWa,KATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAYKF,OAAO,CAACJ,YAAD,CAAP,iBAAyB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBA,YAAjB,CAZ9B,CADJ;AAgBH;;;;EA5CwBX,S;;AA+C7B,eAAeH,UAAU,CAACI,cAAD,CAAzB","sourcesContent":["import { Checkbox, FormControl, FormControlLabel, FormHelperText } from '@material-ui/core';\r\nimport { withFormsy } from 'formsy-react';\r\nimport _ from 'lodash';\r\nimport React, { Component } from 'react';\r\n\r\nclass CheckboxFormsy extends Component {\r\n    changeValue = (event) => {\r\n        this.props.setValue(event.target.checked);\r\n        if (this.props.onChange) {\r\n            this.props.onChange(event);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const importedProps = _.pick(this.props, [\r\n            'checkedIcon',\r\n            'classes',\r\n            'color',\r\n            'disabled',\r\n            'disableRipple',\r\n            'icon',\r\n            'id',\r\n            'indeterminate',\r\n            'indeterminateIcon',\r\n            'inputProps',\r\n            'inputRef',\r\n            'onChange',\r\n            'variant',\r\n        ]);\r\n\r\n        // An error message is returned only if the component is invalid\r\n        const errorMessage = this.props.getErrorMessage();\r\n        const value = this.props.getValue();\r\n        return (\r\n            <FormControl error={Boolean(errorMessage)} className={this.props.className}>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            {...importedProps}\r\n                            type=\"checkbox\"\r\n                            checked={value}\r\n                            onChange={this.changeValue}\r\n                        />\r\n                    }\r\n                    label={this.props.label}\r\n                />\r\n                {Boolean(errorMessage) && <FormHelperText>{errorMessage}</FormHelperText>}\r\n            </FormControl>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFormsy(CheckboxFormsy);\r\n"]},"metadata":{},"sourceType":"module"}