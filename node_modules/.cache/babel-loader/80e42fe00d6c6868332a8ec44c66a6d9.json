{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\wrapper\\\\OwpTextField.js\";\n\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\n\nvar useStyles = function useStyles(width) {\n  return makeStyles({\n    withTable: {\n      backgroundColor: '#f3f3f3',\n      padding: '8px 3px 3px 6px',\n      height: '45px',\n      width: width\n    }\n  })();\n};\n\nvar OwpTextField = function OwpTextField(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      type = _ref.type,\n      width = _ref.width,\n      withTable = _ref.withTable,\n      value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      useReset = _ref.useReset,\n      isReset = _ref.isReset,\n      isSearch = _ref.isSearch,\n      InputProps = _ref.InputProps,\n      setValue = _ref.setValue,\n      _onChange = _ref.onChange,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"type\", \"width\", \"withTable\", \"value\", \"defaultValue\", \"useReset\", \"isReset\", \"isSearch\", \"InputProps\", \"setValue\", \"onChange\"]);\n\n  var classes = useStyles(width);\n  var initValueRef = useRef(defaultValue || value);\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  useEffect(function () {\n    if (useReset && isReset) {\n      setValue(initValueRef.current);\n      setInputValue(initValueRef.current);\n    }\n  }, [useReset, isReset]);\n  useEffect(function () {\n    if (!isReset) {\n      setValue(value);\n      setInputValue(value);\n    }\n  }, [isReset, value]);\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({}, omit(restProps, ['dispatch']), {\n    value: inputValue,\n    type: type,\n    autoComplete: \"off\",\n    InputProps: _objectSpread(_objectSpread({}, InputProps), {}, {\n      classes: {\n        root: classNames(className, InputProps.classes, withTable && classes.withTable, {\n          'mr-20': isSearch\n        })\n      }\n    }, withTable && {\n      disableUnderline: true\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: function onChange(evt) {\n      setInputValue(evt.target.value);\n\n      _onChange(evt, evt.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n};\n\nOwpTextField.defaultProps = {\n  className: '',\n  name: 'owp-textfield',\n  useReset: false,\n  isReset: false,\n  isSearch: false,\n  withTable: false,\n  width: '100%',\n  value: '',\n  defaultValue: '',\n  InputProps: {},\n  type: 'text',\n  setValue: function setValue() {},\n  onChange: function onChange() {}\n};\n\nfunction mapStateToProps(_ref2) {\n  var owp = _ref2.owp;\n  return {\n    isReset: owp.wrapper.isReset\n  };\n}\n\nexport default connect(mapStateToProps)(OwpTextField);","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/wrapper/OwpTextField.js"],"names":["TextField","makeStyles","classNames","omit","React","useEffect","useRef","useState","connect","useStyles","width","withTable","backgroundColor","padding","height","OwpTextField","className","type","value","defaultValue","useReset","isReset","isSearch","InputProps","setValue","onChange","restProps","classes","initValueRef","inputValue","setInputValue","current","root","disableUnderline","shrink","evt","target","defaultProps","name","mapStateToProps","owp","wrapper"],"mappings":"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","sourcesContent":["import { TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport classNames from 'classnames';\r\nimport omit from 'lodash/omit';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = (width) =>\r\n    makeStyles({\r\n        withTable: {\r\n            backgroundColor: '#f3f3f3',\r\n            padding: '8px 3px 3px 6px',\r\n            height: '45px',\r\n            width,\r\n        },\r\n    })();\r\n\r\nconst OwpTextField = ({\r\n    className = '',\r\n    type,\r\n    width,\r\n    withTable,\r\n    value,\r\n    defaultValue,\r\n    useReset,\r\n    isReset,\r\n    isSearch,\r\n    InputProps,\r\n    setValue,\r\n    onChange,\r\n    ...restProps\r\n}) => {\r\n    const classes = useStyles(width);\r\n    const initValueRef = useRef(defaultValue || value);\r\n    const [inputValue, setInputValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        if (useReset && isReset) {\r\n            setValue(initValueRef.current);\r\n            setInputValue(initValueRef.current);\r\n        }\r\n    }, [useReset, isReset]);\r\n\r\n    useEffect(() => {\r\n        if (!isReset) {\r\n            setValue(value);\r\n            setInputValue(value);\r\n        }\r\n    }, [isReset, value]);\r\n\r\n    return (\r\n        <TextField\r\n            {...omit(restProps, ['dispatch'])}\r\n            value={inputValue}\r\n            type={type}\r\n            autoComplete=\"off\"\r\n            InputProps={{\r\n                ...InputProps,\r\n                classes: {\r\n                    root: classNames(\r\n                        className,\r\n                        InputProps.classes,\r\n                        withTable && classes.withTable,\r\n                        {\r\n                            'mr-20': isSearch,\r\n                        }\r\n                    ),\r\n                },\r\n                ...(withTable && { disableUnderline: true }),\r\n            }}\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(evt) => {\r\n                setInputValue(evt.target.value);\r\n                onChange(evt, evt.target.value);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nOwpTextField.defaultProps = {\r\n    className: '',\r\n    name: 'owp-textfield',\r\n    useReset: false,\r\n    isReset: false,\r\n    isSearch: false,\r\n    withTable: false,\r\n    width: '100%',\r\n    value: '',\r\n    defaultValue: '',\r\n    InputProps: {},\r\n    type: 'text',\r\n    setValue: () => {},\r\n    onChange: () => {},\r\n};\r\n\r\nfunction mapStateToProps({ owp }) {\r\n    return {\r\n        isReset: owp.wrapper.isReset,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OwpTextField);\r\n"]},"metadata":{},"sourceType":"module"}