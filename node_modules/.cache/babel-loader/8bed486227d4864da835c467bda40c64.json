{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.default = createPlotlyRenderers;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Utilities = require('./Utilities');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\n\nfunction makeRenderer(PlotlyComponent) {\n  var traceOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var layoutOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transpose = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  var Renderer = function (_React$PureComponent) {\n    _inherits(Renderer, _React$PureComponent);\n\n    function Renderer() {\n      _classCallCheck(this, Renderer);\n\n      return _possibleConstructorReturn(this, (Renderer.__proto__ || Object.getPrototypeOf(Renderer)).apply(this, arguments));\n    }\n\n    _createClass(Renderer, [{\n      key: 'render',\n      value: function render() {\n        var pivotData = new _Utilities.PivotData(this.props);\n        var rowKeys = pivotData.getRowKeys();\n        var colKeys = pivotData.getColKeys();\n        var traceKeys = transpose ? colKeys : rowKeys;\n\n        if (traceKeys.length === 0) {\n          traceKeys.push([]);\n        }\n\n        var datumKeys = transpose ? rowKeys : colKeys;\n\n        if (datumKeys.length === 0) {\n          datumKeys.push([]);\n        }\n\n        var fullAggName = this.props.aggregatorName;\n        var numInputs = this.props.aggregators[fullAggName]([])().numInputs || 0;\n\n        if (numInputs !== 0) {\n          fullAggName += ' of ' + this.props.vals.slice(0, numInputs).join(', ');\n        }\n\n        var data = traceKeys.map(function (traceKey) {\n          var values = [];\n          var labels = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = datumKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var datumKey = _step.value;\n              var val = parseFloat(pivotData.getAggregator(transpose ? datumKey : traceKey, transpose ? traceKey : datumKey).value());\n              values.push(isFinite(val) ? val : null);\n              labels.push(datumKey.join('-') || ' ');\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          var trace = {\n            name: traceKey.join('-') || fullAggName\n          };\n\n          if (traceOptions.type === 'pie') {\n            trace.values = values;\n            trace.labels = labels.length > 1 ? labels : [fullAggName];\n          } else {\n            trace.x = transpose ? values : labels;\n            trace.y = transpose ? labels : values;\n          }\n\n          return Object.assign(trace, traceOptions);\n        });\n        var titleText = fullAggName;\n        var hAxisTitle = transpose ? this.props.rows.join('-') : this.props.cols.join('-');\n        var groupByTitle = transpose ? this.props.cols.join('-') : this.props.rows.join('-');\n\n        if (hAxisTitle !== '') {\n          titleText += ' vs ' + hAxisTitle;\n        }\n\n        if (groupByTitle !== '') {\n          titleText += ' by ' + groupByTitle;\n        }\n\n        var layout = {\n          title: titleText,\n          hovermode: 'closest',\n\n          /* eslint-disable no-magic-numbers */\n          width: window.innerWidth / 1.5,\n          height: window.innerHeight / 1.4 - 50\n          /* eslint-enable no-magic-numbers */\n\n        };\n\n        if (traceOptions.type === 'pie') {\n          var columns = Math.ceil(Math.sqrt(data.length));\n          var rows = Math.ceil(data.length / columns);\n          layout.grid = {\n            columns: columns,\n            rows: rows\n          };\n          data.forEach(function (d, i) {\n            d.domain = {\n              row: Math.floor(i / columns),\n              column: i - columns * Math.floor(i / columns)\n            };\n\n            if (data.length > 1) {\n              d.title = d.name;\n            }\n          });\n\n          if (data[0].labels.length === 1) {\n            layout.showlegend = false;\n          }\n        } else {\n          layout.xaxis = {\n            title: transpose ? fullAggName : null,\n            automargin: true\n          };\n          layout.yaxis = {\n            title: transpose ? null : fullAggName,\n            automargin: true\n          };\n        }\n\n        return _react2.default.createElement(PlotlyComponent, {\n          data: data,\n          layout: Object.assign(layout, layoutOptions, this.props.plotlyOptions),\n          config: this.props.plotlyConfig,\n          onUpdate: this.props.onRendererUpdate\n        });\n      }\n    }]);\n\n    return Renderer;\n  }(_react2.default.PureComponent);\n\n  Renderer.defaultProps = Object.assign({}, _Utilities.PivotData.defaultProps, {\n    plotlyOptions: {},\n    plotlyConfig: {}\n  });\n  Renderer.propTypes = Object.assign({}, _Utilities.PivotData.propTypes, {\n    plotlyOptions: _propTypes2.default.object,\n    plotlyConfig: _propTypes2.default.object,\n    onRendererUpdate: _propTypes2.default.func\n  });\n  return Renderer;\n}\n\nfunction makeScatterRenderer(PlotlyComponent) {\n  var Renderer = function (_React$PureComponent2) {\n    _inherits(Renderer, _React$PureComponent2);\n\n    function Renderer() {\n      _classCallCheck(this, Renderer);\n\n      return _possibleConstructorReturn(this, (Renderer.__proto__ || Object.getPrototypeOf(Renderer)).apply(this, arguments));\n    }\n\n    _createClass(Renderer, [{\n      key: 'render',\n      value: function render() {\n        var pivotData = new _Utilities.PivotData(this.props);\n        var rowKeys = pivotData.getRowKeys();\n        var colKeys = pivotData.getColKeys();\n\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n\n        var data = {\n          x: [],\n          y: [],\n          text: [],\n          type: 'scatter',\n          mode: 'markers'\n        };\n        rowKeys.map(function (rowKey) {\n          colKeys.map(function (colKey) {\n            var v = pivotData.getAggregator(rowKey, colKey).value();\n\n            if (v !== null) {\n              data.x.push(colKey.join('-'));\n              data.y.push(rowKey.join('-'));\n              data.text.push(v);\n            }\n          });\n        });\n        var layout = {\n          title: this.props.rows.join('-') + ' vs ' + this.props.cols.join('-'),\n          hovermode: 'closest',\n\n          /* eslint-disable no-magic-numbers */\n          xaxis: {\n            title: this.props.cols.join('-'),\n            automargin: true\n          },\n          yaxis: {\n            title: this.props.rows.join('-'),\n            automargin: true\n          },\n          width: window.innerWidth / 1.5,\n          height: window.innerHeight / 1.4 - 50\n          /* eslint-enable no-magic-numbers */\n\n        };\n        return _react2.default.createElement(PlotlyComponent, {\n          data: [data],\n          layout: Object.assign(layout, this.props.plotlyOptions),\n          config: this.props.plotlyConfig,\n          onUpdate: this.props.onRendererUpdate\n        });\n      }\n    }]);\n\n    return Renderer;\n  }(_react2.default.PureComponent);\n\n  Renderer.defaultProps = Object.assign({}, _Utilities.PivotData.defaultProps, {\n    plotlyOptions: {},\n    plotlyConfig: {}\n  });\n  Renderer.propTypes = Object.assign({}, _Utilities.PivotData.propTypes, {\n    plotlyOptions: _propTypes2.default.object,\n    plotlyConfig: _propTypes2.default.object,\n    onRendererUpdate: _propTypes2.default.func\n  });\n  return Renderer;\n}\n\nfunction createPlotlyRenderers(PlotlyComponent) {\n  return {\n    'Grouped Column Chart': makeRenderer(PlotlyComponent, {\n      type: 'bar'\n    }, {\n      barmode: 'group'\n    }),\n    'Stacked Column Chart': makeRenderer(PlotlyComponent, {\n      type: 'bar'\n    }, {\n      barmode: 'relative'\n    }),\n    'Grouped Bar Chart': makeRenderer(PlotlyComponent, {\n      type: 'bar',\n      orientation: 'h'\n    }, {\n      barmode: 'group'\n    }, true),\n    'Stacked Bar Chart': makeRenderer(PlotlyComponent, {\n      type: 'bar',\n      orientation: 'h'\n    }, {\n      barmode: 'relative'\n    }, true),\n    'Line Chart': makeRenderer(PlotlyComponent),\n    'Dot Chart': makeRenderer(PlotlyComponent, {\n      mode: 'markers'\n    }, {}, true),\n    'Area Chart': makeRenderer(PlotlyComponent, {\n      stackgroup: 1\n    }),\n    'Scatter Chart': makeScatterRenderer(PlotlyComponent),\n    'Multiple Pie Chart': makeRenderer(PlotlyComponent, {\n      type: 'pie',\n      scalegroup: 1,\n      hoverinfo: 'label+value',\n      textinfo: 'none'\n    }, {}, true)\n  };\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["src/PlotlyRenderers.jsx"],"names":["traceOptions","layoutOptions","transpose","Renderer","pivotData","rowKeys","colKeys","traceKeys","datumKeys","fullAggName","numInputs","data","values","labels","datumKey","val","parseFloat","isFinite","trace","name","traceKey","Object","titleText","hAxisTitle","groupByTitle","layout","title","hovermode","width","window","height","columns","Math","rows","d","row","i","column","automargin","onRendererUpdate","plotlyOptions","plotlyConfig","func","x","y","text","type","mode","v","colKey","rowKey","xaxis","yaxis","createPlotlyRenderers","makeRenderer","barmode","orientation","stackgroup","makeScatterRenderer","scalegroup","hoverinfo","textinfo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {PivotData} from './Utilities';\n\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\nfunction makeRenderer(\n  PlotlyComponent,\n  traceOptions = {},\n  layoutOptions = {},\n  transpose = false\n) {\n  class Renderer extends React.PureComponent {\n    render() {\n      const pivotData = new PivotData(this.props);\n      const rowKeys = pivotData.getRowKeys();\n      const colKeys = pivotData.getColKeys();\n      const traceKeys = transpose ? colKeys : rowKeys;\n      if (traceKeys.length === 0) {\n        traceKeys.push([]);\n      }\n      const datumKeys = transpose ? rowKeys : colKeys;\n      if (datumKeys.length === 0) {\n        datumKeys.push([]);\n      }\n\n      let fullAggName = this.props.aggregatorName;\n      const numInputs =\n        this.props.aggregators[fullAggName]([])().numInputs || 0;\n      if (numInputs !== 0) {\n        fullAggName += ` of ${this.props.vals.slice(0, numInputs).join(', ')}`;\n      }\n\n      const data = traceKeys.map(traceKey => {\n        const values = [];\n        const labels = [];\n        for (const datumKey of datumKeys) {\n          const val = parseFloat(\n            pivotData\n              .getAggregator(\n                transpose ? datumKey : traceKey,\n                transpose ? traceKey : datumKey\n              )\n              .value()\n          );\n          values.push(isFinite(val) ? val : null);\n          labels.push(datumKey.join('-') || ' ');\n        }\n        const trace = {name: traceKey.join('-') || fullAggName};\n        if (traceOptions.type === 'pie') {\n          trace.values = values;\n          trace.labels = labels.length > 1 ? labels : [fullAggName];\n        } else {\n          trace.x = transpose ? values : labels;\n          trace.y = transpose ? labels : values;\n        }\n        return Object.assign(trace, traceOptions);\n      });\n\n      let titleText = fullAggName;\n      const hAxisTitle = transpose\n        ? this.props.rows.join('-')\n        : this.props.cols.join('-');\n      const groupByTitle = transpose\n        ? this.props.cols.join('-')\n        : this.props.rows.join('-');\n      if (hAxisTitle !== '') {\n        titleText += ` vs ${hAxisTitle}`;\n      }\n      if (groupByTitle !== '') {\n        titleText += ` by ${groupByTitle}`;\n      }\n\n      const layout = {\n        title: titleText,\n        hovermode: 'closest',\n        /* eslint-disable no-magic-numbers */\n        width: window.innerWidth / 1.5,\n        height: window.innerHeight / 1.4 - 50,\n        /* eslint-enable no-magic-numbers */\n      };\n\n      if (traceOptions.type === 'pie') {\n        const columns = Math.ceil(Math.sqrt(data.length));\n        const rows = Math.ceil(data.length / columns);\n        layout.grid = {columns, rows};\n        data.forEach((d, i) => {\n          d.domain = {\n            row: Math.floor(i / columns),\n            column: i - columns * Math.floor(i / columns),\n          };\n          if (data.length > 1) {\n            d.title = d.name;\n          }\n        });\n        if (data[0].labels.length === 1) {\n          layout.showlegend = false;\n        }\n      } else {\n        layout.xaxis = {\n          title: transpose ? fullAggName : null,\n          automargin: true,\n        };\n        layout.yaxis = {\n          title: transpose ? null : fullAggName,\n          automargin: true,\n        };\n      }\n\n      return (\n        <PlotlyComponent\n          data={data}\n          layout={Object.assign(\n            layout,\n            layoutOptions,\n            this.props.plotlyOptions\n          )}\n          config={this.props.plotlyConfig}\n          onUpdate={this.props.onRendererUpdate}\n        />\n      );\n    }\n  }\n\n  Renderer.defaultProps = Object.assign({}, PivotData.defaultProps, {\n    plotlyOptions: {},\n    plotlyConfig: {},\n  });\n  Renderer.propTypes = Object.assign({}, PivotData.propTypes, {\n    plotlyOptions: PropTypes.object,\n    plotlyConfig: PropTypes.object,\n    onRendererUpdate: PropTypes.func,\n  });\n\n  return Renderer;\n}\n\nfunction makeScatterRenderer(PlotlyComponent) {\n  class Renderer extends React.PureComponent {\n    render() {\n      const pivotData = new PivotData(this.props);\n      const rowKeys = pivotData.getRowKeys();\n      const colKeys = pivotData.getColKeys();\n      if (rowKeys.length === 0) {\n        rowKeys.push([]);\n      }\n      if (colKeys.length === 0) {\n        colKeys.push([]);\n      }\n\n      const data = {x: [], y: [], text: [], type: 'scatter', mode: 'markers'};\n\n      rowKeys.map(rowKey => {\n        colKeys.map(colKey => {\n          const v = pivotData.getAggregator(rowKey, colKey).value();\n          if (v !== null) {\n            data.x.push(colKey.join('-'));\n            data.y.push(rowKey.join('-'));\n            data.text.push(v);\n          }\n        });\n      });\n\n      const layout = {\n        title: this.props.rows.join('-') + ' vs ' + this.props.cols.join('-'),\n        hovermode: 'closest',\n        /* eslint-disable no-magic-numbers */\n        xaxis: {title: this.props.cols.join('-'), automargin: true},\n        yaxis: {title: this.props.rows.join('-'), automargin: true},\n        width: window.innerWidth / 1.5,\n        height: window.innerHeight / 1.4 - 50,\n        /* eslint-enable no-magic-numbers */\n      };\n\n      return (\n        <PlotlyComponent\n          data={[data]}\n          layout={Object.assign(layout, this.props.plotlyOptions)}\n          config={this.props.plotlyConfig}\n          onUpdate={this.props.onRendererUpdate}\n        />\n      );\n    }\n  }\n\n  Renderer.defaultProps = Object.assign({}, PivotData.defaultProps, {\n    plotlyOptions: {},\n    plotlyConfig: {},\n  });\n  Renderer.propTypes = Object.assign({}, PivotData.propTypes, {\n    plotlyOptions: PropTypes.object,\n    plotlyConfig: PropTypes.object,\n    onRendererUpdate: PropTypes.func,\n  });\n\n  return Renderer;\n}\n\nexport default function createPlotlyRenderers(PlotlyComponent) {\n  return {\n    'Grouped Column Chart': makeRenderer(\n      PlotlyComponent,\n      {type: 'bar'},\n      {barmode: 'group'}\n    ),\n    'Stacked Column Chart': makeRenderer(\n      PlotlyComponent,\n      {type: 'bar'},\n      {barmode: 'relative'}\n    ),\n    'Grouped Bar Chart': makeRenderer(\n      PlotlyComponent,\n      {type: 'bar', orientation: 'h'},\n      {barmode: 'group'},\n      true\n    ),\n    'Stacked Bar Chart': makeRenderer(\n      PlotlyComponent,\n      {type: 'bar', orientation: 'h'},\n      {barmode: 'relative'},\n      true\n    ),\n    'Line Chart': makeRenderer(PlotlyComponent),\n    'Dot Chart': makeRenderer(PlotlyComponent, {mode: 'markers'}, {}, true),\n    'Area Chart': makeRenderer(PlotlyComponent, {stackgroup: 1}),\n    'Scatter Chart': makeScatterRenderer(PlotlyComponent),\n    'Multiple Pie Chart': makeRenderer(\n      PlotlyComponent,\n      {type: 'pie', scalegroup: 1, hoverinfo: 'label+value', textinfo: 'none'},\n      {},\n      true\n    ),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}