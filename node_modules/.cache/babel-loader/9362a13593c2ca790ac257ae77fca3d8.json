{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nexport default function useContainerDimensions(containerRef) {\n  var getDimensions = function getDimensions() {\n    if (!containerRef.current) {\n      return {\n        width: null,\n        height: null\n      };\n    }\n\n    return {\n      width: containerRef.current.offsetWidth,\n      height: containerRef.current.offsetHeight\n    };\n  };\n\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      dimensions = _useState2[0],\n      setDimensions = _useState2[1];\n\n  useEffect(function () {\n    var handleResize = function handleResize() {\n      setDimensions(getDimensions());\n    };\n\n    if (containerRef.current) {\n      setDimensions(getDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [containerRef]);\n  return dimensions;\n}","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/wrapper/hooks/useContainerDimensions.js"],"names":["useEffect","useState","useContainerDimensions","containerRef","getDimensions","current","width","height","offsetWidth","offsetHeight","dimensions","setDimensions","handleResize","window","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,sBAAT,CAAgCC,YAAhC,EAA8C;AACzD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAI,CAACD,YAAY,CAACE,OAAlB,EAA2B;AACvB,aAAO;AACHC,QAAAA,KAAK,EAAE,IADJ;AAEHC,QAAAA,MAAM,EAAE;AAFL,OAAP;AAIH;;AAED,WAAO;AACHD,MAAAA,KAAK,EAAEH,YAAY,CAACE,OAAb,CAAqBG,WADzB;AAEHD,MAAAA,MAAM,EAAEJ,YAAY,CAACE,OAAb,CAAqBI;AAF1B,KAAP;AAIH,GAZD;;AADyD,kBAerBR,QAAQ,CAAC;AAAEK,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAD,CAfa;AAAA;AAAA,MAelDG,UAfkD;AAAA,MAetCC,aAfsC;;AAiBzDX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMY,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBD,MAAAA,aAAa,CAACP,aAAa,EAAd,CAAb;AACH,KAFD;;AAIA,QAAID,YAAY,CAACE,OAAjB,EAA0B;AACtBM,MAAAA,aAAa,CAACP,aAAa,EAAd,CAAb;AACH;;AAEDS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AAEA,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC;AACH,KAFD;AAGH,GAdQ,EAcN,CAACT,YAAD,CAdM,CAAT;AAgBA,SAAOO,UAAP;AACH","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport default function useContainerDimensions(containerRef) {\r\n    const getDimensions = () => {\r\n        if (!containerRef.current) {\r\n            return {\r\n                width: null,\r\n                height: null,\r\n            };\r\n        }\r\n\r\n        return {\r\n            width: containerRef.current.offsetWidth,\r\n            height: containerRef.current.offsetHeight,\r\n        };\r\n    };\r\n\r\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setDimensions(getDimensions());\r\n        };\r\n\r\n        if (containerRef.current) {\r\n            setDimensions(getDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, [containerRef]);\r\n\r\n    return dimensions;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}