{"ast":null,"code":"import createReducer from 'owp/store/reducers';\nimport * as reduxModule from 'redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistReducer, persistStore, purgeStoredState } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\n/*\r\nFix for Firefox redux dev tools extension\r\nhttps://github.com/zalmoxisus/redux-devtools-instrument/pull/19#issuecomment-400637274\r\n */\n\nreduxModule.__DO_NOT_USE__ActionTypes.REPLACE = '@@redux/INIT';\nvar composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\nvar enhancer = composeEnhancers(applyMiddleware(thunk));\nvar persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['persistor', 'auth']\n};\n\nvar createRootReducer = function createRootReducer() {\n  for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n    params[_key] = arguments[_key];\n  }\n\n  return function (state, action) {\n    if (action.type === 'RESET_APP') {\n      state = {\n        fuse: state.fuse,\n        owp: state.owp\n      };\n      purgeStoredState(persistConfig);\n    }\n\n    return createReducer.apply(void 0, params)(state, action);\n  };\n};\n\nvar persistedReducer = persistReducer(persistConfig, createRootReducer());\nvar store = createStore(persistedReducer, enhancer);\nexport var persistor = persistStore(store);\nstore.asyncReducers = {};\nexport var injectReducer = function injectReducer(key, reducer) {\n  if (store.asyncReducers[key]) {\n    return;\n  }\n\n  store.asyncReducers[key] = reducer;\n  store.replaceReducer(createRootReducer(store.asyncReducers));\n  return store;\n};\nexport default store;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/store/index.js"],"names":["createReducer","reduxModule","applyMiddleware","compose","createStore","persistReducer","persistStore","purgeStoredState","storage","thunk","__DO_NOT_USE__ActionTypes","REPLACE","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","persistConfig","key","whitelist","createRootReducer","params","state","action","type","fuse","owp","persistedReducer","store","persistor","asyncReducers","injectReducer","reducer","replaceReducer"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,OAA7B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,gBAAvC,QAA+D,eAA/D;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA;AACA;AACA;AACA;;AACAR,WAAW,CAACS,yBAAZ,CAAsCC,OAAtC,GAAgD,cAAhD;AAEA,IAAMC,gBAAgB,GAClBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACA,OAAOC,MAAP,KAAkB,QADlB,IAEAA,MAAM,CAACC,oCAFP,GAGMD,MAAM,CAACC,oCAAP,CAA4C,CACxC;AADwC,CAA5C,CAHN,GAMMd,OAPV;AASA,IAAMe,QAAQ,GAAGN,gBAAgB,CAACV,eAAe,CAACO,KAAD,CAAhB,CAAjC;AAEA,IAAMU,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBZ,EAAAA,OAAO,EAAPA,OAFkB;AAGlBa,EAAAA,SAAS,EAAE,CAAC,WAAD,EAAc,MAAd;AAHO,CAAtB;;AAMA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,oCAAIC,MAAJ;AAAIA,IAAAA,MAAJ;AAAA;;AAAA,SAAe,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACxD,QAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7BF,MAAAA,KAAK,GAAG;AAAEG,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAAd;AAAoBC,QAAAA,GAAG,EAAEJ,KAAK,CAACI;AAA/B,OAAR;AACArB,MAAAA,gBAAgB,CAACY,aAAD,CAAhB;AACH;;AAED,WAAOnB,aAAa,MAAb,SAAiBuB,MAAjB,EAAyBC,KAAzB,EAAgCC,MAAhC,CAAP;AACH,GAPyB;AAAA,CAA1B;;AASA,IAAMI,gBAAgB,GAAGxB,cAAc,CAACc,aAAD,EAAgBG,iBAAiB,EAAjC,CAAvC;AACA,IAAMQ,KAAK,GAAG1B,WAAW,CAACyB,gBAAD,EAAmBX,QAAnB,CAAzB;AACA,OAAO,IAAMa,SAAS,GAAGzB,YAAY,CAACwB,KAAD,CAA9B;AAEPA,KAAK,CAACE,aAAN,GAAsB,EAAtB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACb,GAAD,EAAMc,OAAN,EAAkB;AAC3C,MAAIJ,KAAK,CAACE,aAAN,CAAoBZ,GAApB,CAAJ,EAA8B;AAC1B;AACH;;AACDU,EAAAA,KAAK,CAACE,aAAN,CAAoBZ,GAApB,IAA2Bc,OAA3B;AACAJ,EAAAA,KAAK,CAACK,cAAN,CAAqBb,iBAAiB,CAACQ,KAAK,CAACE,aAAP,CAAtC;AACA,SAAOF,KAAP;AACH,CAPM;AASP,eAAeA,KAAf","sourcesContent":["import createReducer from 'owp/store/reducers';\r\nimport * as reduxModule from 'redux';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { persistReducer, persistStore, purgeStoredState } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\n\r\n/*\r\nFix for Firefox redux dev tools extension\r\nhttps://github.com/zalmoxisus/redux-devtools-instrument/pull/19#issuecomment-400637274\r\n */\r\nreduxModule.__DO_NOT_USE__ActionTypes.REPLACE = '@@redux/INIT';\r\n\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n              // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n          })\r\n        : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['persistor', 'auth'],\r\n};\r\n\r\nconst createRootReducer = (...params) => (state, action) => {\r\n    if (action.type === 'RESET_APP') {\r\n        state = { fuse: state.fuse, owp: state.owp };\r\n        purgeStoredState(persistConfig);\r\n    }\r\n\r\n    return createReducer(...params)(state, action);\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, createRootReducer());\r\nconst store = createStore(persistedReducer, enhancer);\r\nexport const persistor = persistStore(store);\r\n\r\nstore.asyncReducers = {};\r\n\r\nexport const injectReducer = (key, reducer) => {\r\n    if (store.asyncReducers[key]) {\r\n        return;\r\n    }\r\n    store.asyncReducers[key] = reducer;\r\n    store.replaceReducer(createRootReducer(store.asyncReducers));\r\n    return store;\r\n};\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}