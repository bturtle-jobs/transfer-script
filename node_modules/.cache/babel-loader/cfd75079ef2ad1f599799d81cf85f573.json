{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\components\\\\Form\\\\LoginForm.js\";\nimport { Button, Icon, InputAdornment, withStyles } from '@material-ui/core';\nimport Formsy from 'formsy-react';\nimport { TextFieldFormsy } from 'owp/@fuse';\nimport * as Actions from 'owp/auth/store/actions';\nimport React, { Component } from 'react';\nimport connect from 'react-redux/es/connect/connect';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%'\n    }\n  };\n};\n\nvar LoginForm = /*#__PURE__*/function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm() {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      canSubmit: false\n    };\n    _this.form = React.createRef();\n\n    _this.disableButton = function () {\n      _this.setState({\n        canSubmit: false\n      });\n    };\n\n    _this.enableButton = function () {\n      _this.setState({\n        canSubmit: true\n      });\n    };\n\n    _this.onSubmit = function (model) {\n      _this.props.submitLogin(model);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.login.error && (this.props.login.error.email || this.props.login.error.password)) {\n        this.form.updateInputsWithError(_objectSpread({}, this.props.login.error));\n        this.props.login.error = null;\n        this.disableButton();\n      }\n\n      if (this.props.user.role !== 'guest') {\n        var pathname = this.props.location.state && this.props.location.state.redirectUrl; // ? this.props.location.state.redirectUrl\n        // : '/';\n\n        if (pathname) {\n          this.props.history.push({\n            pathname: pathname\n          });\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var canSubmit = this.state.canSubmit;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Formsy, {\n        onValidSubmit: this.onSubmit,\n        onValid: this.enableButton,\n        onInvalid: this.disableButton,\n        ref: function ref(form) {\n          return _this2.form = form;\n        },\n        className: \"flex flex-col justify-center w-full\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextFieldFormsy, {\n        className: \"mb-16\",\n        type: \"text\",\n        name: \"email\",\n        label: \"\\uC544\\uC774\\uB514\",\n        value: \"Admin\" // validations={{\n        //     minLength: 4,\n        // }}\n        // validationErrors={{\n        //     minLength: 'Min character length is 4',\n        // }}\n        ,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            className: \"text-20\",\n            color: \"action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }\n          }, \"email\"))\n        },\n        variant: \"outlined\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextFieldFormsy, {\n        className: \"mb-16\",\n        type: \"password\",\n        name: \"password\",\n        label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n        value: \"pisnet09753\",\n        validations: {\n          minLength: 8\n        },\n        validationErrors: {\n          minLength: '비밀번호는 최소 8자 이상이어야 합니다.'\n        },\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            className: \"text-20\",\n            color: \"action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }\n          }, \"vpn_key\"))\n        },\n        variant: \"outlined\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"w-full mx-auto mt-16 normal-case\",\n        \"aria-label\": \"LOG IN\",\n        disabled: !canSubmit,\n        value: \"legacy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, \"\\uB85C\\uADF8\\uC778\")));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    submitLogin: Actions.submitLogin\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  return {\n    login: auth.login,\n    user: auth.user\n  };\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginForm)));","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/components/Form/LoginForm.js"],"names":["Button","Icon","InputAdornment","withStyles","Formsy","TextFieldFormsy","Actions","React","Component","connect","withRouter","bindActionCreators","styles","theme","root","width","LoginForm","state","canSubmit","form","createRef","disableButton","setState","enableButton","onSubmit","model","props","submitLogin","prevProps","prevState","login","error","email","password","updateInputsWithError","user","role","pathname","location","redirectUrl","history","push","classes","endAdornment","minLength","mapDispatchToProps","dispatch","mapStateToProps","auth","withTheme"],"mappings":"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","sourcesContent":["import { Button, Icon, InputAdornment, withStyles } from '@material-ui/core';\r\nimport Formsy from 'formsy-react';\r\nimport { TextFieldFormsy } from 'owp/@fuse';\r\nimport * as Actions from 'owp/auth/store/actions';\r\nimport React, { Component } from 'react';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n});\r\n\r\nclass LoginForm extends Component {\r\n    state = {\r\n        canSubmit: false,\r\n    };\r\n\r\n    form = React.createRef();\r\n\r\n    disableButton = () => {\r\n        this.setState({ canSubmit: false });\r\n    };\r\n\r\n    enableButton = () => {\r\n        this.setState({ canSubmit: true });\r\n    };\r\n\r\n    onSubmit = (model) => {\r\n        this.props.submitLogin(model);\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            this.props.login.error &&\r\n            (this.props.login.error.email || this.props.login.error.password)\r\n        ) {\r\n            this.form.updateInputsWithError({\r\n                ...this.props.login.error,\r\n            });\r\n\r\n            this.props.login.error = null;\r\n            this.disableButton();\r\n        }\r\n\r\n        if (this.props.user.role !== 'guest') {\r\n            const pathname = this.props.location.state && this.props.location.state.redirectUrl;\r\n            // ? this.props.location.state.redirectUrl\r\n            // : '/';\r\n\r\n            if (pathname) {\r\n                this.props.history.push({\r\n                    pathname,\r\n                });\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { canSubmit } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Formsy\r\n                    onValidSubmit={this.onSubmit}\r\n                    onValid={this.enableButton}\r\n                    onInvalid={this.disableButton}\r\n                    ref={(form) => (this.form = form)}\r\n                    className=\"flex flex-col justify-center w-full\"\r\n                >\r\n                    <TextFieldFormsy\r\n                        className=\"mb-16\"\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        label=\"아이디\"\r\n                        value=\"Admin\"\r\n                        // validations={{\r\n                        //     minLength: 4,\r\n                        // }}\r\n                        // validationErrors={{\r\n                        //     minLength: 'Min character length is 4',\r\n                        // }}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Icon className=\"text-20\" color=\"action\">\r\n                                        email\r\n                                    </Icon>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        required\r\n                    />\r\n\r\n                    <TextFieldFormsy\r\n                        className=\"mb-16\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"패스워드\"\r\n                        value=\"pisnet09753\"\r\n                        validations={{\r\n                            minLength: 8,\r\n                        }}\r\n                        validationErrors={{\r\n                            minLength: '비밀번호는 최소 8자 이상이어야 합니다.',\r\n                        }}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Icon className=\"text-20\" color=\"action\">\r\n                                        vpn_key\r\n                                    </Icon>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        required\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"w-full mx-auto mt-16 normal-case\"\r\n                        aria-label=\"LOG IN\"\r\n                        disabled={!canSubmit}\r\n                        value=\"legacy\"\r\n                    >\r\n                        로그인\r\n                    </Button>\r\n                </Formsy>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(\r\n        {\r\n            submitLogin: Actions.submitLogin,\r\n        },\r\n        dispatch\r\n    );\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n    return {\r\n        login: auth.login,\r\n        user: auth.user,\r\n    };\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n    withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginForm))\r\n);\r\n"]},"metadata":{},"sourceType":"module"}