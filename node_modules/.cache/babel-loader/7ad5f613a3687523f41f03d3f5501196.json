{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\components\\\\Form\\\\CheckboxFormGroup.js\";\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nvar CheckboxFormGroup = function CheckboxFormGroup(_ref) {\n  var WrapperComponent = _ref.WrapperComponent,\n      values = _ref.value,\n      name = _ref.name,\n      items = _ref.items,\n      _onChange = _ref.onChange,\n      restProps = _objectWithoutProperties(_ref, [\"WrapperComponent\", \"value\", \"name\", \"items\", \"onChange\"]);\n\n  return /*#__PURE__*/React.createElement(WrapperComponent, Object.assign({}, restProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), items.map(function () {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        label = _ref2.label,\n        value = _ref2.value,\n        checkboxProps = _objectWithoutProperties(_ref2, [\"label\", \"value\"]);\n\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: value,\n      control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, checkboxProps, {\n        name: name,\n        checked: values.includes(value),\n        onChange: function onChange(event) {\n          if (event.target.checked) {\n            _onChange([].concat(_toConsumableArray(values), [event.target.value]), event);\n          } else {\n            _onChange(values.filter(function (value) {\n              return value !== event.target.value;\n            }), event);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      })),\n      label: label,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    });\n  }));\n};\n\nCheckboxFormGroup.propTypes = {\n  WrapperComponent: PropTypes.element,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node,\n    value: PropTypes.string\n  })),\n  value: PropTypes.arrayOf(PropTypes.string),\n  onChange: PropTypes.func\n};\nCheckboxFormGroup.defaultProps = {\n  WrapperComponent: FormGroup,\n  value: [],\n  items: [],\n  onChange: function onChange(value) {\n    console.log(value);\n  }\n};\nexport default CheckboxFormGroup;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/components/Form/CheckboxFormGroup.js"],"names":["Checkbox","FormControlLabel","FormGroup","PropTypes","React","CheckboxFormGroup","WrapperComponent","values","value","name","items","onChange","restProps","map","label","checkboxProps","includes","event","target","checked","filter","propTypes","element","arrayOf","shape","node","string","func","defaultProps","console","log"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAOpB;AAAA,MANFC,gBAME,QANFA,gBAME;AAAA,MALKC,MAKL,QALFC,KAKE;AAAA,MAJFC,IAIE,QAJFA,IAIE;AAAA,MAHFC,KAGE,QAHFA,KAGE;AAAA,MAFFC,SAEE,QAFFA,QAEE;AAAA,MADCC,SACD;;AACF,sBACI,oBAAC,gBAAD,oBAAsBA,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKF,KAAK,CAACG,GAAN,CAAU;AAAA,oFAAsC,EAAtC;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUN,KAAV,SAAUA,KAAV;AAAA,QAAoBO,aAApB;;AAAA,wBACP,oBAAC,gBAAD;AACI,MAAA,GAAG,EAAEP,KADT;AAEI,MAAA,OAAO,eACH,oBAAC,QAAD,oBACQO,aADR;AAEI,QAAA,IAAI,EAAEN,IAFV;AAGI,QAAA,OAAO,EAAEF,MAAM,CAACS,QAAP,CAAgBR,KAAhB,CAHb;AAII,QAAA,QAAQ,EAAE,kBAAAS,KAAK,EAAI;AACf,cAAIA,KAAK,CAACC,MAAN,CAAaC,OAAjB,EAA0B;AACtBR,YAAAA,SAAQ,8BACAJ,MADA,IACQU,KAAK,CAACC,MAAN,CAAaV,KADrB,IAEJS,KAFI,CAAR;AAIH,WALD,MAKO;AACHN,YAAAA,SAAQ,CACJJ,MAAM,CAACa,MAAP,CACI,UAAAZ,KAAK;AAAA,qBACDA,KAAK,KAAKS,KAAK,CAACC,MAAN,CAAaV,KADtB;AAAA,aADT,CADI,EAKJS,KALI,CAAR;AAOH;AACJ,SAnBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAyBI,MAAA,KAAK,EAAEH,KAzBX;AA0BI,MAAA,KAAK,EAAEN,KA1BX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO;AAAA,GAAV,CADL,CADJ;AAkCH,CA1CD;;AA4CAH,iBAAiB,CAACgB,SAAlB,GAA8B;AAC1Bf,EAAAA,gBAAgB,EAAEH,SAAS,CAACmB,OADF;AAE1BZ,EAAAA,KAAK,EAAEP,SAAS,CAACoB,OAAV,CACHpB,SAAS,CAACqB,KAAV,CAAgB;AACZV,IAAAA,KAAK,EAAEX,SAAS,CAACsB,IADL;AAEZjB,IAAAA,KAAK,EAAEL,SAAS,CAACuB;AAFL,GAAhB,CADG,CAFmB;AAQ1BlB,EAAAA,KAAK,EAAEL,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACuB,MAA5B,CARmB;AAS1Bf,EAAAA,QAAQ,EAAER,SAAS,CAACwB;AATM,CAA9B;AAYAtB,iBAAiB,CAACuB,YAAlB,GAAiC;AAC7BtB,EAAAA,gBAAgB,EAAEJ,SADW;AAE7BM,EAAAA,KAAK,EAAE,EAFsB;AAG7BE,EAAAA,KAAK,EAAE,EAHsB;AAI7BC,EAAAA,QAAQ,EAAE,kBAAAH,KAAK,EAAI;AACfqB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACH;AAN4B,CAAjC;AASA,eAAeH,iBAAf","sourcesContent":["import Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst CheckboxFormGroup = ({\r\n    WrapperComponent,\r\n    value: values,\r\n    name,\r\n    items,\r\n    onChange,\r\n    ...restProps\r\n}) => {\r\n    return (\r\n        <WrapperComponent {...restProps}>\r\n            {items.map(({ label, value, ...checkboxProps } = {}) => (\r\n                <FormControlLabel\r\n                    key={value}\r\n                    control={\r\n                        <Checkbox\r\n                            {...checkboxProps}\r\n                            name={name}\r\n                            checked={values.includes(value)}\r\n                            onChange={event => {\r\n                                if (event.target.checked) {\r\n                                    onChange(\r\n                                        [...values, event.target.value],\r\n                                        event\r\n                                    );\r\n                                } else {\r\n                                    onChange(\r\n                                        values.filter(\r\n                                            value =>\r\n                                                value !== event.target.value\r\n                                        ),\r\n                                        event\r\n                                    );\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                    label={label}\r\n                    value={value}\r\n                />\r\n            ))}\r\n        </WrapperComponent>\r\n    );\r\n};\r\n\r\nCheckboxFormGroup.propTypes = {\r\n    WrapperComponent: PropTypes.element,\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.node,\r\n            value: PropTypes.string,\r\n        })\r\n    ),\r\n    value: PropTypes.arrayOf(PropTypes.string),\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nCheckboxFormGroup.defaultProps = {\r\n    WrapperComponent: FormGroup,\r\n    value: [],\r\n    items: [],\r\n    onChange: value => {\r\n        console.log(value);\r\n    },\r\n};\r\n\r\nexport default CheckboxFormGroup;\r\n"]},"metadata":{},"sourceType":"module"}