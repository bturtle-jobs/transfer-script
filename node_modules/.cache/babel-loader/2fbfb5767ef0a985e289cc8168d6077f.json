{"ast":null,"code":"import _ from 'lodash';\nimport { OwpStorage } from 'owp/common';\nimport history from 'owp/history';\nimport jwtService from 'owp/jwtService';\nimport store from 'owp/store';\nimport * as Actions from 'owp/store/actions';\nimport { path, pipe } from 'ramda';\nexport var SET_USER_DATA = '[USER] SET DATA';\nexport var SET_USER_SHORTCUTS = '[USER] SET SHORTCUTS';\nexport var REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport var USER_LOGGED_OUT = '[USER] LOGGED OUT';\n\nfunction mapNav(user) {\n  return pipe(path(['navigation']) // map(merge({ type: 'item' }))\n  )(user);\n}\n/**\r\n * Set User Data\r\n */\n\n\nexport function setUserData(user) {\n  return function (dispatch) {\n    /*\r\n    Set User Settings\r\n     */\n    // dispatch(setDefaultSettings(user.data.settings));\n\n    /*\r\n    Set User Data\r\n     */\n    dispatch({\n      type: SET_USER_DATA,\n      payload: user\n    }); // TODO: don't need action for nav\n\n    if (process.env.REACT_APP_LOGIN_CHECK === 'true' && user.navigation) {\n      dispatch(Actions.setNavigation(mapNav(user)));\n    }\n  };\n}\nexport function setUserShortcuts(shortcuts) {\n  return {\n    type: SET_USER_SHORTCUTS,\n    shortcuts: shortcuts\n  };\n}\n/**\r\n * Update User Settings\r\n */\n\nexport function updateUserSettings(settings) {\n  return function (dispatch, getState) {\n    var oldUser = getState().auth.user;\n\n    var user = _.merge({}, oldUser, {\n      data: {\n        settings: settings\n      }\n    });\n\n    updateUserData(user);\n    return dispatch(setUserData(user));\n  };\n}\n/**\r\n * Update User Shortcuts\r\n */\n\nexport function updateUserShortcuts(shortcuts) {\n  return function (dispatch) {\n    // updateUserData({shortcuts});\n    return dispatch(setUserShortcuts(shortcuts));\n  };\n}\n/**\r\n * Remove User Data\r\n */\n\nexport function removeUserData() {\n  return {\n    type: REMOVE_USER_DATA\n  };\n}\n/**\r\n * Logout\r\n */\n\nexport function logoutUser() {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n    OwpStorage.clear();\n\n    if (user.role === 'guest') {\n      return null;\n    }\n\n    history.push({\n      pathname: '/login'\n    });\n\n    switch (user.from) {\n      default:\n        {\n          dispatch({\n            type: 'RESET_APP'\n          });\n          jwtService.logout();\n        }\n    }\n\n    dispatch({\n      type: USER_LOGGED_OUT\n    });\n  };\n}\n/**\r\n * Update User Data\r\n */\n\nfunction updateUserData(user) {\n  if (user.role === 'guest') {\n    return;\n  }\n\n  switch (user.from) {\n    default:\n      {\n        jwtService.updateUserData(user).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: 'User data saved with api'\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n  }\n}","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/auth/store/actions/user.actions.js"],"names":["_","OwpStorage","history","jwtService","store","Actions","path","pipe","SET_USER_DATA","SET_USER_SHORTCUTS","REMOVE_USER_DATA","USER_LOGGED_OUT","mapNav","user","setUserData","dispatch","type","payload","process","env","REACT_APP_LOGIN_CHECK","navigation","setNavigation","setUserShortcuts","shortcuts","updateUserSettings","settings","getState","oldUser","auth","merge","data","updateUserData","updateUserShortcuts","removeUserData","logoutUser","clear","role","push","pathname","from","logout","then","showMessage","message","catch","error"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport { OwpStorage } from 'owp/common';\r\nimport history from 'owp/history';\r\nimport jwtService from 'owp/jwtService';\r\nimport store from 'owp/store';\r\nimport * as Actions from 'owp/store/actions';\r\nimport { path, pipe } from 'ramda';\r\n\r\nexport const SET_USER_DATA = '[USER] SET DATA';\r\nexport const SET_USER_SHORTCUTS = '[USER] SET SHORTCUTS';\r\nexport const REMOVE_USER_DATA = '[USER] REMOVE DATA';\r\nexport const USER_LOGGED_OUT = '[USER] LOGGED OUT';\r\n\r\nfunction mapNav(user) {\r\n    return pipe(\r\n        path(['navigation'])\r\n        // map(merge({ type: 'item' }))\r\n    )(user);\r\n}\r\n\r\n/**\r\n * Set User Data\r\n */\r\nexport function setUserData(user) {\r\n    return (dispatch) => {\r\n        /*\r\n        Set User Settings\r\n         */\r\n        // dispatch(setDefaultSettings(user.data.settings));\r\n\r\n        /*\r\n        Set User Data\r\n         */\r\n        dispatch({\r\n            type: SET_USER_DATA,\r\n            payload: user,\r\n        });\r\n\r\n        // TODO: don't need action for nav\r\n        if (process.env.REACT_APP_LOGIN_CHECK === 'true' && user.navigation) {\r\n            dispatch(Actions.setNavigation(mapNav(user)));\r\n        }\r\n    };\r\n}\r\n\r\nexport function setUserShortcuts(shortcuts) {\r\n    return {\r\n        type: SET_USER_SHORTCUTS,\r\n        shortcuts,\r\n    };\r\n}\r\n\r\n/**\r\n * Update User Settings\r\n */\r\nexport function updateUserSettings(settings) {\r\n    return (dispatch, getState) => {\r\n        const oldUser = getState().auth.user;\r\n        const user = _.merge({}, oldUser, { data: { settings } });\r\n\r\n        updateUserData(user);\r\n\r\n        return dispatch(setUserData(user));\r\n    };\r\n}\r\n\r\n/**\r\n * Update User Shortcuts\r\n */\r\nexport function updateUserShortcuts(shortcuts) {\r\n    return (dispatch) => {\r\n        // updateUserData({shortcuts});\r\n\r\n        return dispatch(setUserShortcuts(shortcuts));\r\n    };\r\n}\r\n\r\n/**\r\n * Remove User Data\r\n */\r\nexport function removeUserData() {\r\n    return {\r\n        type: REMOVE_USER_DATA,\r\n    };\r\n}\r\n\r\n/**\r\n * Logout\r\n */\r\nexport function logoutUser() {\r\n    return (dispatch, getState) => {\r\n        const user = getState().auth.user;\r\n\r\n        OwpStorage.clear();\r\n\r\n        if (user.role === 'guest') {\r\n            return null;\r\n        }\r\n\r\n        history.push({\r\n            pathname: '/login',\r\n        });\r\n\r\n        switch (user.from) {\r\n            default: {\r\n                dispatch({\r\n                    type: 'RESET_APP',\r\n                });\r\n                jwtService.logout();\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: USER_LOGGED_OUT,\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * Update User Data\r\n */\r\nfunction updateUserData(user) {\r\n    if (user.role === 'guest') {\r\n        return;\r\n    }\r\n\r\n    switch (user.from) {\r\n        default: {\r\n            jwtService\r\n                .updateUserData(user)\r\n                .then(() => {\r\n                    store.dispatch(\r\n                        Actions.showMessage({\r\n                            message: 'User data saved with api',\r\n                        })\r\n                    );\r\n                })\r\n                .catch((error) => {\r\n                    store.dispatch(Actions.showMessage({ message: error.message }));\r\n                });\r\n            break;\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}