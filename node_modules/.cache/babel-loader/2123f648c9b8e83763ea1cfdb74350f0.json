{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\src\\\\main\\\\content\\\\register\\\\tabs\\\\JWTRegisterTab.js\";\nimport React, { Component } from 'react';\nimport Formsy from 'formsy-react';\nimport { TextFieldFormsy } from \"owp/@fuse\";\nimport { withStyles, Button, InputAdornment, Icon } from '@material-ui/core';\nimport { bindActionCreators } from 'redux';\nimport * as Actions from \"owp/auth/store/actions\";\nimport { withRouter } from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%'\n    }\n  };\n};\n\nvar JWTRegisterTab = /*#__PURE__*/function (_Component) {\n  _inherits(JWTRegisterTab, _Component);\n\n  var _super = _createSuper(JWTRegisterTab);\n\n  function JWTRegisterTab() {\n    var _this;\n\n    _classCallCheck(this, JWTRegisterTab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      canSubmit: false\n    };\n    _this.form = React.createRef();\n\n    _this.disableButton = function () {\n      _this.setState({\n        canSubmit: false\n      });\n    };\n\n    _this.enableButton = function () {\n      _this.setState({\n        canSubmit: true\n      });\n    };\n\n    _this.onSubmit = function (model) {\n      _this.props.submitRegister(model);\n    };\n\n    return _this;\n  }\n\n  _createClass(JWTRegisterTab, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.register.error && (this.props.register.error.username || this.props.register.error.password || this.props.register.error.email)) {\n        this.form.updateInputsWithError(_objectSpread({}, this.props.register.error));\n        this.props.register.error = null;\n        this.disableButton();\n      }\n\n      if (this.props.user.role !== 'guest') {\n        var pathname = this.props.location.state && this.props.location.state.redirectUrl ? this.props.location.state.redirectUrl : '/';\n        this.props.history.push({\n          pathname: pathname\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var canSubmit = this.state.canSubmit;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Formsy, {\n        onValidSubmit: this.onSubmit,\n        onValid: this.enableButton,\n        onInvalid: this.disableButton,\n        ref: function ref(form) {\n          return _this2.form = form;\n        },\n        className: \"flex flex-col justify-center w-full\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextFieldFormsy, {\n        className: \"mb-16\",\n        type: \"text\",\n        name: \"displayName\",\n        label: \"Display name\",\n        validations: {\n          minLength: 4\n        },\n        validationErrors: {\n          minLength: 'Min character length is 4'\n        },\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 43\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            className: \"text-20\",\n            color: \"action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 74\n            }\n          }, \"person\"))\n        },\n        variant: \"outlined\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextFieldFormsy, {\n        className: \"mb-16\",\n        type: \"text\",\n        name: \"email\",\n        label: \"Email\",\n        validations: \"isEmail\",\n        validationErrors: {\n          isEmail: 'Please enter a valid email'\n        },\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 43\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            className: \"text-20\",\n            color: \"action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 74\n            }\n          }, \"email\"))\n        },\n        variant: \"outlined\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextFieldFormsy, {\n        className: \"mb-16\",\n        type: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        validations: \"equalsField:password-confirm\",\n        validationErrors: {\n          equalsField: 'Passwords do not match'\n        },\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 43\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            className: \"text-20\",\n            color: \"action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 74\n            }\n          }, \"vpn_key\"))\n        },\n        variant: \"outlined\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TextFieldFormsy, {\n        className: \"mb-16\",\n        type: \"password\",\n        name: \"password-confirm\",\n        label: \"Confirm Password\",\n        validations: \"equalsField:password\",\n        validationErrors: {\n          equalsField: 'Passwords do not match'\n        },\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 43\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            className: \"text-20\",\n            color: \"action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 74\n            }\n          }, \"vpn_key\"))\n        },\n        variant: \"outlined\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"w-full mx-auto mt-16 normal-case\",\n        \"aria-label\": \"REGISTER\",\n        disabled: !canSubmit,\n        value: \"legacy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, \"Register\")));\n    }\n  }]);\n\n  return JWTRegisterTab;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    submitRegister: Actions.submitRegister\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  return {\n    register: auth.register,\n    user: auth.user\n  };\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, mapDispatchToProps)(JWTRegisterTab)));","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/src/main/content/register/tabs/JWTRegisterTab.js"],"names":["React","Component","Formsy","TextFieldFormsy","withStyles","Button","InputAdornment","Icon","bindActionCreators","Actions","withRouter","connect","styles","theme","root","width","JWTRegisterTab","state","canSubmit","form","createRef","disableButton","setState","enableButton","onSubmit","model","props","submitRegister","prevProps","prevState","register","error","username","password","email","updateInputsWithError","user","role","pathname","location","redirectUrl","history","push","classes","minLength","endAdornment","isEmail","equalsField","mapDispatchToProps","dispatch","mapStateToProps","auth","withTheme"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Formsy from 'formsy-react';\r\nimport {TextFieldFormsy} from \"owp/@fuse\";\r\nimport {withStyles, Button, InputAdornment, Icon} from '@material-ui/core';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as Actions from \"owp/auth/store/actions\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nclass JWTRegisterTab extends Component {\r\n    state = {\r\n        canSubmit: false\r\n    };\r\n\r\n    form = React.createRef();\r\n\r\n    disableButton = () => {\r\n        this.setState({canSubmit: false});\r\n    };\r\n\r\n    enableButton = () => {\r\n        this.setState({canSubmit: true});\r\n    };\r\n\r\n    onSubmit = (model) => {\r\n        this.props.submitRegister(model);\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState)\r\n    {\r\n        if ( this.props.register.error && (this.props.register.error.username || this.props.register.error.password || this.props.register.error.email) )\r\n        {\r\n            this.form.updateInputsWithError({\r\n                ...this.props.register.error\r\n            });\r\n\r\n            this.props.register.error = null;\r\n            this.disableButton();\r\n        }\r\n\r\n        if ( this.props.user.role !== 'guest' )\r\n        {\r\n            const pathname = this.props.location.state && this.props.location.state.redirectUrl ? this.props.location.state.redirectUrl : '/';\r\n            this.props.history.push({\r\n                pathname\r\n            });\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {classes} = this.props;\r\n        const {canSubmit} = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Formsy\r\n                    onValidSubmit={this.onSubmit}\r\n                    onValid={this.enableButton}\r\n                    onInvalid={this.disableButton}\r\n                    ref={(form) => this.form = form}\r\n                    className=\"flex flex-col justify-center w-full\"\r\n                >\r\n                    <TextFieldFormsy\r\n                        className=\"mb-16\"\r\n                        type=\"text\"\r\n                        name=\"displayName\"\r\n                        label=\"Display name\"\r\n                        validations={{\r\n                            minLength: 4\r\n                        }}\r\n                        validationErrors={{\r\n                            minLength: 'Min character length is 4'\r\n                        }}\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\"><Icon className=\"text-20\" color=\"action\">person</Icon></InputAdornment>\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        required\r\n                    />\r\n\r\n                    <TextFieldFormsy\r\n                        className=\"mb-16\"\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        validations=\"isEmail\"\r\n                        validationErrors={{\r\n                            isEmail: 'Please enter a valid email'\r\n                        }}\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\"><Icon className=\"text-20\" color=\"action\">email</Icon></InputAdornment>\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        required\r\n                    />\r\n\r\n                    <TextFieldFormsy\r\n                        className=\"mb-16\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        validations=\"equalsField:password-confirm\"\r\n                        validationErrors={{\r\n                            equalsField: 'Passwords do not match'\r\n                        }}\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\"><Icon className=\"text-20\" color=\"action\">vpn_key</Icon></InputAdornment>\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        required\r\n                    />\r\n\r\n                    <TextFieldFormsy\r\n                        className=\"mb-16\"\r\n                        type=\"password\"\r\n                        name=\"password-confirm\"\r\n                        label=\"Confirm Password\"\r\n                        validations=\"equalsField:password\"\r\n                        validationErrors={{\r\n                            equalsField: 'Passwords do not match'\r\n                        }}\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\"><Icon className=\"text-20\" color=\"action\">vpn_key</Icon></InputAdornment>\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        required\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"w-full mx-auto mt-16 normal-case\"\r\n                        aria-label=\"REGISTER\"\r\n                        disabled={!canSubmit}\r\n                        value=\"legacy\"\r\n                    >\r\n                        Register\r\n                    </Button>\r\n\r\n                </Formsy>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({\r\n        submitRegister: Actions.submitRegister\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({auth})\r\n{\r\n    return {\r\n        register: auth.register,\r\n        user    : auth.user\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(JWTRegisterTab)));\r\n"]},"metadata":{},"sourceType":"module"}