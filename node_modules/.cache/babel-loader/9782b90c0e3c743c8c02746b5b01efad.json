{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\src\\\\main\\\\content\\\\include\\\\C0202002_tab07_tab01_tab02.js\";\nimport React, { Component } from 'react';\nimport { OwpButton, OwpSearchDateField, OwpSearchSelectField, OwpSearchTextField, OwpTextField, OwpTreeGrid, OwpMessage } from 'owp/wrapper';\nimport Formsy from 'formsy-react';\nimport * as TGEvent from 'owp/TGEvent';\nimport moment from 'moment';\nimport { query } from 'owp/api';\nimport { setGridData, setRowAttribute, restoreGridSelect, setRowAttributes } from 'main/GridUtill';\nvar MAX_ROW = 6;\nvar FACILITY = 'FACILITY';\nvar MATERIAL = 'MATERIAL';\n\nvar Page = /*#__PURE__*/function (_Component) {\n  _inherits(Page, _Component);\n\n  var _super = _createSuper(Page);\n\n  function Page(props) {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _super.call(this, props);\n\n    _this.loadStdMainConfig = function () {\n      var mock = \"[{\\\"FACILITY\\\":\\\"Three\\\",\\\"MATERIAL\\\":\\\"Three\\\",\\\"CONFIG_TYPE\\\":\\\"Three\\\",\\\"TOTAL_INPUT\\\":\\\"Three\\\",\\\"INPUT_SPEED\\\":\\\"Three\\\",\\\"MESASURING_EQUIPMENT\\\":\\\"Three\\\"},{\\\"FACILITY\\\":\\\"Three\\\",\\\"MATERIAL\\\":\\\"Three\\\",\\\"CONFIG_TYPE\\\":\\\"Three\\\",\\\"TOTAL_INPUT\\\":\\\"Three\\\",\\\"INPUT_SPEED\\\":\\\"Three\\\",\\\"MESASURING_EQUIPMENT\\\":\\\"Three\\\"}]\";\n      query({\n        url: 'loadOwpMbrUnitProcessMainConfig/' + 139\n      }).then(function (res) {\n        if (res['OWP_MBR_UNIT_PROCESS.MAIN_CONFIG']) {\n          var gridData = JSON.parse(mock);\n          console.log(gridData);\n          setGridData('C0202011', gridData);\n\n          _this.canEdit();\n        }\n      });\n    };\n\n    _this.handleAddRow = function () {\n      var G = TGEvent.getGridByID('C0202011');\n\n      var _rows = Object.values(G['Rows']).filter(function (item) {\n        return item.Kind == 'Data';\n      });\n\n      var checkLength = _rows.length;\n\n      if (checkLength >= MAX_ROW) {\n        OwpMessage({\n          message: '6 미만',\n          variant: 'error'\n        });\n      } else {\n        G.ActionAcceptEdit();\n        TGEvent.OWPTGAddRow('C0202011', function (row) {//TODO:do something here\n        });\n      }\n    };\n\n    _this.handleUpdate = function () {\n      var G = TGEvent.getGridByID('C0202011'); //TODO:remove this\n\n      _this.setGridDynamicColumnType();\n\n      _this.canEdit();\n\n      _this.fillGridData(G);\n    };\n\n    _this.handleDeleteRow = function () {\n      var G = TGEvent.getGridByID('C0202011');\n\n      _this.fillGridData(G, true);\n    };\n\n    _this.canEdit = function () {\n      console.log('canEdit 1 =========');\n      var G = TGEvent.getGridByID('C0202011');\n      console.log('canEdit 2 =========');\n\n      if (G) {\n        console.log('call some thing');\n\n        var _rows = Object.values(G['Rows']).filter(function (item) {\n          return item.Kind == 'Data';\n        });\n\n        var EDIT_COLUMNS = [FACILITY, MATERIAL];\n\n        _rows.some(function (row) {\n          // EDIT_COLUMNS.some((targetColumnName) => {\n          //     setRowAttribute('C0202011', row, targetColumnName, 'CanEdit', '1', 1);\n          // });\n          // setRowAttribute('C0202011', row, 'FACILITY', 'CanEdit', '1', 1);\n          // setRowAttribute('C0202011', row, 'FACILITY', 'CanEdit', '1', 1);\n          setRowAttributes('C0202011', row, 'FACILITY', {\n            Type: 'Enum',\n            Enum: '|YES|NO',\n            EnumKeys: '|D056001|D056002'\n          });\n          console.log(row);\n        });\n      }\n    };\n\n    _this.setGridDynamicColumnType = function () {\n      var gridId = 'C0202011';\n      var G = TGEvent.getGridByID(gridId);\n\n      var _rows = Object.values(G['Rows']).filter(function (item) {\n        return item.Kind == 'Data';\n      });\n\n      var targetColumnName = 'FACILITY';\n\n      _rows.forEach(function (row) {\n        //TODO:switch case some thing here\n        //set bla bla\n        setRowAttribute(gridId, row, targetColumnName, {\n          Type: 'Enum',\n          Enum: '|적합|부적합',\n          EnumKeys: '|D057001|D057002'\n        });\n      });\n    };\n\n    _this.fillGridData = function (G, isDelete) {\n      if (G) {\n        var _rows = Object.values(G['Rows']).filter(function (item) {\n          return item.Kind == 'Data';\n        });\n\n        var arrData = [];\n\n        _rows.some(function (row) {\n          if (isDelete && row['Selected'] === 1) {\n            return false;\n          } else {\n            arrData.push({\n              FACILITY: row['FACILITY'],\n              MATERIAL: row['MATERIAL'],\n              CONFIG_TYPE: row['CONFIG_TYPE'],\n              TOTAL_INPUT: row['TOTAL_INPUT'],\n              INPUT_SPEED: row['INPUT_SPEED'],\n              MESASURING_EQUIPMENT: row['MESASURING_EQUIPMENT']\n            });\n          }\n        });\n\n        setGridData('C0202011', arrData);\n        restoreGridSelect('C0202011');\n        G.ReloadBody();\n      }\n    };\n\n    _this.state = {};\n    return _this;\n  }\n  /**\r\n   * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n   * @param {Event} event 발생한 이벤트 객체\r\n   * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n   */\n\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _showApprovalDialog = this.showApprovalDialog;\n      this.loadStdMainConfig();\n    } //날짜 디폴드값 설정 함수\n    //load master data and first rowData\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('tap 2');\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 b\",\n        style: {\n          padding: '13px 0 0 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, \"Std \\uB300\\uC2DC\\uBCF4\\uB4DC \\uC124\\uC815\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          textAlign: 'right',\n          paddingRight: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'contained',\n        onClick: function onClick() {\n          return _this2.handleAddRow();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, \"\\uCD94\\uAC00\"), /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'contained',\n        onClick: function onClick() {\n          return _this2.handleUpdate();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }\n      }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'outlined',\n        onClick: function onClick() {\n          return _this2.handleDeleteRow();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      }, \"\\uC0AD\\uC81C\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        style: {\n          padding: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(OwpTreeGrid, {\n        id: \"C0202011\",\n        LayoutUrl: \"assets/data/C0202011Def.xml\" // DataUrl={'/assets/data/C0202000Data.xml'}\n        ,\n        width: \"100%\" // height=\"17vh\"\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/src/main/content/include/C0202002_tab07_tab01_tab02.js"],"names":["React","Component","OwpButton","OwpSearchDateField","OwpSearchSelectField","OwpSearchTextField","OwpTextField","OwpTreeGrid","OwpMessage","Formsy","TGEvent","moment","query","setGridData","setRowAttribute","restoreGridSelect","setRowAttributes","MAX_ROW","FACILITY","MATERIAL","Page","props","loadStdMainConfig","mock","url","then","res","gridData","JSON","parse","console","log","canEdit","handleAddRow","G","getGridByID","_rows","Object","values","filter","item","Kind","checkLength","length","message","variant","ActionAcceptEdit","OWPTGAddRow","row","handleUpdate","setGridDynamicColumnType","fillGridData","handleDeleteRow","EDIT_COLUMNS","some","Type","Enum","EnumKeys","gridId","targetColumnName","forEach","isDelete","arrData","push","CONFIG_TYPE","TOTAL_INPUT","INPUT_SPEED","MESASURING_EQUIPMENT","ReloadBody","state","_showApprovalDialog","showApprovalDialog","width","padding","textAlign","paddingRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    OwpButton,\r\n    OwpSearchDateField,\r\n    OwpSearchSelectField,\r\n    OwpSearchTextField,\r\n    OwpTextField,\r\n    OwpTreeGrid,\r\n    OwpMessage,\r\n} from 'owp/wrapper';\r\nimport Formsy from 'formsy-react';\r\nimport * as TGEvent from 'owp/TGEvent';\r\nimport moment from 'moment';\r\nimport { query } from 'owp/api';\r\nimport { setGridData, setRowAttribute, restoreGridSelect, setRowAttributes } from 'main/GridUtill';\r\n\r\nconst MAX_ROW = 6;\r\nconst FACILITY = 'FACILITY';\r\nconst MATERIAL = 'MATERIAL';\r\nclass Page extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    /**\r\n     * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n     * @param {Event} event 발생한 이벤트 객체\r\n     * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n     */\r\n    componentDidMount() {\r\n        const _showApprovalDialog = this.showApprovalDialog;\r\n        this.loadStdMainConfig();\r\n    }\r\n    //날짜 디폴드값 설정 함수\r\n    //load master data and first rowData\r\n    loadStdMainConfig = () => {\r\n        let mock = `[{\"FACILITY\":\"Three\",\"MATERIAL\":\"Three\",\"CONFIG_TYPE\":\"Three\",\"TOTAL_INPUT\":\"Three\",\"INPUT_SPEED\":\"Three\",\"MESASURING_EQUIPMENT\":\"Three\"},{\"FACILITY\":\"Three\",\"MATERIAL\":\"Three\",\"CONFIG_TYPE\":\"Three\",\"TOTAL_INPUT\":\"Three\",\"INPUT_SPEED\":\"Three\",\"MESASURING_EQUIPMENT\":\"Three\"}]`;\r\n\r\n        query({\r\n            url: 'loadOwpMbrUnitProcessMainConfig/' + 139,\r\n        }).then((res) => {\r\n            if (res['OWP_MBR_UNIT_PROCESS.MAIN_CONFIG']) {\r\n                let gridData = JSON.parse(mock);\r\n                console.log(gridData);\r\n                setGridData('C0202011', gridData);\r\n                this.canEdit();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleAddRow = () => {\r\n        const G = TGEvent.getGridByID('C0202011');\r\n        const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n        const checkLength = _rows.length;\r\n        if (checkLength >= MAX_ROW) {\r\n            OwpMessage({\r\n                message: '6 미만',\r\n                variant: 'error',\r\n            });\r\n        } else {\r\n            G.ActionAcceptEdit();\r\n            TGEvent.OWPTGAddRow('C0202011', (row) => {\r\n                //TODO:do something here\r\n            });\r\n        }\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        const G = TGEvent.getGridByID('C0202011');\r\n        //TODO:remove this\r\n        this.setGridDynamicColumnType();\r\n        this.canEdit();\r\n        this.fillGridData(G);\r\n    };\r\n\r\n    handleDeleteRow = () => {\r\n        const G = TGEvent.getGridByID('C0202011');\r\n        this.fillGridData(G, true);\r\n    };\r\n\r\n    canEdit = () => {\r\n        console.log('canEdit 1 =========');\r\n        const G = TGEvent.getGridByID('C0202011');\r\n        console.log('canEdit 2 =========');\r\n        if (G) {\r\n            console.log('call some thing');\r\n            const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n            const EDIT_COLUMNS = [FACILITY, MATERIAL];\r\n            _rows.some((row) => {\r\n                // EDIT_COLUMNS.some((targetColumnName) => {\r\n                //     setRowAttribute('C0202011', row, targetColumnName, 'CanEdit', '1', 1);\r\n                // });\r\n                // setRowAttribute('C0202011', row, 'FACILITY', 'CanEdit', '1', 1);\r\n                // setRowAttribute('C0202011', row, 'FACILITY', 'CanEdit', '1', 1);\r\n                setRowAttributes('C0202011', row, 'FACILITY', {\r\n                    Type: 'Enum',\r\n                    Enum: '|YES|NO',\r\n                    EnumKeys: '|D056001|D056002',\r\n                });\r\n                console.log(row);\r\n            });\r\n        }\r\n    };\r\n\r\n    setGridDynamicColumnType = () => {\r\n        let gridId = 'C0202011';\r\n        const G = TGEvent.getGridByID(gridId);\r\n        const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n        const targetColumnName = 'FACILITY';\r\n        _rows.forEach((row) => {\r\n            //TODO:switch case some thing here\r\n            //set bla bla\r\n            setRowAttribute(gridId, row, targetColumnName, {\r\n                Type: 'Enum',\r\n                Enum: '|적합|부적합',\r\n                EnumKeys: '|D057001|D057002',\r\n            });\r\n        });\r\n    };\r\n\r\n    fillGridData = (G, isDelete) => {\r\n        if (G) {\r\n            const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n            let arrData = [];\r\n            _rows.some((row) => {\r\n                if (isDelete && row['Selected'] === 1) {\r\n                    return false;\r\n                } else {\r\n                    arrData.push({\r\n                        FACILITY: row['FACILITY'],\r\n                        MATERIAL: row['MATERIAL'],\r\n                        CONFIG_TYPE: row['CONFIG_TYPE'],\r\n                        TOTAL_INPUT: row['TOTAL_INPUT'],\r\n                        INPUT_SPEED: row['INPUT_SPEED'],\r\n                        MESASURING_EQUIPMENT: row['MESASURING_EQUIPMENT'],\r\n                    });\r\n                }\r\n            });\r\n            setGridData('C0202011', arrData);\r\n            restoreGridSelect('C0202011');\r\n            G.ReloadBody();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        console.log('tap 2');\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 b\" style={{ padding: '13px 0 0 0' }}>\r\n                            Std 대시보드 설정\r\n                        </div>\r\n                        <div className=\"col-md-6\" style={{ textAlign: 'right', paddingRight: '0' }}>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'contained'}\r\n                                onClick={() => this.handleAddRow()}\r\n                            >\r\n                                추가\r\n                            </OwpButton>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'contained'}\r\n                                onClick={() => this.handleUpdate()}\r\n                            >\r\n                                수정\r\n                            </OwpButton>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'outlined'}\r\n                                onClick={() => this.handleDeleteRow()}\r\n                            >\r\n                                삭제\r\n                            </OwpButton>\r\n                        </div>\r\n                        <div className=\"col-md-12\" style={{ padding: '0' }}>\r\n                            <OwpTreeGrid\r\n                                id=\"C0202011\"\r\n                                LayoutUrl=\"assets/data/C0202011Def.xml\"\r\n                                // DataUrl={'/assets/data/C0202000Data.xml'}\r\n                                width=\"100%\"\r\n                                // height=\"17vh\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}