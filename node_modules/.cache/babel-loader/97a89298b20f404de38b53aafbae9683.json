{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { isArray, isEmpty } from 'lodash';\nimport FuseUtils from 'owp/@fuse/FuseUtils';\nimport { mutate, query } from 'owp/api';\nimport { getAccessToken, removeAccessToken, setAccessToken } from 'owp/auth';\nimport { OwpStorage } from 'owp/common';\nimport { STORAGE_FAILED_LOGIN_KEY, STORAGE_PERMISSION_KEY, STORAGE_SESSION_KEY, STORAGE_USER_ID_KEY } from 'owp/constants';\nimport { OwpMessage } from 'owp/wrapper';\n\nvar jwtService = /*#__PURE__*/function (_FuseUtils$EventEmitt) {\n  _inherits(jwtService, _FuseUtils$EventEmitt);\n\n  var _super = _createSuper(jwtService);\n\n  function jwtService() {\n    var _this;\n\n    _classCallCheck(this, jwtService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.setInterceptors = function () {\n      axios.interceptors.response.use(function (response) {\n        return response;\n      }, function (err) {\n        return new Promise(function (resolve, reject) {\n          if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\n            // if you ever get an unauthorized response, logout the user\n            _this.emit('onAutoLogout', 'Invalid access_token');\n\n            _this.setSession(null);\n          }\n\n          throw err;\n        });\n      });\n    };\n\n    _this.handleAuthentication = function () {\n      var access_token = _this.getAccessToken();\n\n      if (!access_token) {\n        return;\n      }\n\n      if (_this.isAuthTokenValid(access_token)) {\n        _this.setSession(access_token);\n\n        _this.emit('onAutoLogin', true);\n      } else {\n        _this.setSession(null);\n\n        _this.emit('onAutoLogout', 'access_token expired');\n      }\n    };\n\n    _this.createUser = function (data) {\n      return new Promise(function (resolve, reject) {\n        axios.post('/api/auth/register', data).then(function (response) {\n          if (response.data.user) {\n            _this.setSession(response.data.access_token);\n\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    _this.processLogin = function (id, url) {\n      return new Promise( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n          var data, loginfail, OWP_SessionExpireMinute, resultData, loginfailcnt, getPermitData, PERMIT;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n\n                  if (!(!id || !url)) {\n                    _context.next = 4;\n                    break;\n                  }\n\n                  reject(new Error('url 이 선언되지 않았습니다.'));\n                  return _context.abrupt(\"return\");\n\n                case 4:\n                  _context.next = 6;\n                  return query({\n                    url: url\n                  });\n\n                case 6:\n                  data = _context.sent;\n                  console.log(data);\n                  loginfail = OwpStorage.getItem(STORAGE_FAILED_LOGIN_KEY) || {};\n\n                  if (!(process.env.REACT_APP_AUTO_LOGOUT_CHECK === 'true')) {\n                    _context.next = 17;\n                    break;\n                  }\n\n                  //자동 로그아웃 시간 설정(분)(기본설정은 5분으로 셋팅 1분=60000 밀리세컨트)\n                  OWP_SessionExpireMinute = 600000;\n                  _context.next = 13;\n                  return query({\n                    url: '/loadIpxSystemmanageOWP',\n                    timeout: 1000\n                  });\n\n                case 13:\n                  resultData = _context.sent;\n\n                  if (!isEmpty(resultData)) {\n                    console.log(resultData); //자동 로그아웃 시간 설정(분) DB에서 밀리세컨트로 계산해서 로드\n\n                    OWP_SessionExpireMinute = resultData['SESSIONEXPIREMINUTE'];\n                    console.log('OWP_SessionExpireMinute1 : ', OWP_SessionExpireMinute);\n                  }\n\n                  console.log('OWP_SessionExpireMinute2 : ', OWP_SessionExpireMinute);\n                  OwpStorage.setItem('OWP_SessionExpireMinute', OWP_SessionExpireMinute);\n\n                case 17:\n                  if (isEmpty(data)) {\n                    loginfailcnt = ~~loginfail[id];\n                    loginfail[id] = loginfailcnt + 1;\n                    OwpStorage.setItem(STORAGE_FAILED_LOGIN_KEY, JSON.stringify(loginfail));\n                    reject(new Error('로그인에 실패 했습니다.'));\n                  } else {\n                    //사용자가 잠금처리되었을 경우\n                    if (data['errorCode'] === '-90002') {\n                      OwpMessage({\n                        message: data['errorMessage'],\n                        //text or html\n                        variant: 'error' //success error info warning null\n\n                      }); //존재하지 않는 계정일 경우\n                    } else if (data['errorCode'] === '-90004') {\n                      OwpMessage({\n                        message: data['errorMessage'],\n                        variant: 'error'\n                      });\n                    } else {\n                      getPermitData = function getPermitData() {\n                        var _data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n                        if (isEmpty(_data)) {\n                          return {};\n                        }\n\n                        return _data.reduce(function (acc) {\n                          var item = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n                          if (!!item.id && !!item.permission) {\n                            acc = _objectSpread(_objectSpread({}, acc), {}, {\n                              [item.id]: item.permission\n                            });\n                          }\n\n                          if (!isEmpty(item.children) && isArray(item.children)) {\n                            acc = _objectSpread(_objectSpread({}, acc), getPermitData(item.children));\n                          }\n\n                          return acc;\n                        }, {});\n                      };\n\n                      loginfail[id] = 0;\n                      OwpStorage.setItem(STORAGE_FAILED_LOGIN_KEY, JSON.stringify(loginfail));\n                      OwpStorage.setItem(STORAGE_SESSION_KEY, JSON.stringify(data));\n                      OwpStorage.setItem(STORAGE_USER_ID_KEY, id);\n\n                      _this.setSession(data.token);\n\n                      PERMIT = getPermitData(data.navigation);\n                      OwpStorage.setItem(STORAGE_PERMISSION_KEY, JSON.stringify(PERMIT));\n                      resolve(data);\n                    }\n                  }\n\n                  _context.next = 24;\n                  break;\n\n                case 20:\n                  _context.prev = 20;\n                  _context.t0 = _context[\"catch\"](0);\n                  console.error(_context.t0);\n                  reject(_context.t0);\n\n                case 24:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 20]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.signInWithEmailAndPassword = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.processLogin(email, \"/loadIpxUserForLogin/\".concat(email, \"/\").concat(btoa(password)));\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.signInWithRfid = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(rfid) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.processLogin(rfid, \"/loadIpxUserForLogin_RFID/\".concat(rfid));\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.signInWithToken = function () {\n      return new Promise(function (resolve, reject) {\n        axios.get('/api/auth/access-token', {\n          data: {\n            access_token: _this.getAccessToken()\n          }\n        }).then(function (response) {\n          if (response.data.user) {\n            _this.setSession(response.data.access_token);\n\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    _this.updateUserData = function (user) {\n      return axios.post('/api/auth/user/update', {\n        user: user\n      });\n    };\n\n    _this.updatePw = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(user) {\n        var data, result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = {\n                  cudtype: 'UPDATE',\n                  'IPX_User.UserSEQ': '' + user['UserSEQ'],\n                  'IPX_User.UserID': '' + user[STORAGE_USER_ID_KEY],\n                  'IPX_User.UserPassword': user['password'],\n                  'IPX_User.LastPasswordChangeDate': 'NOW',\n                  'IPX_User.InitialPasswordChangeFlag': 'Y'\n                };\n                _context4.prev = 1;\n                _context4.next = 4;\n                return mutate({\n                  url: '/updatePw',\n                  data: data\n                });\n\n              case 4:\n                result = _context4.sent;\n                return _context4.abrupt(\"return\", result);\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.error('error', _context4.t0);\n                return _context4.abrupt(\"return\", null);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 8]]);\n      }));\n\n      return function (_x6) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.updateIPX_User_LockFlag = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(user) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return mutate({\n                  url: '/updateIPX_User_LockFlag/' + user + '/Y'\n                });\n\n              case 3:\n                result = _context5.sent;\n                return _context5.abrupt(\"return\", result);\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.error('error', _context5.t0);\n                return _context5.abrupt(\"return\", null);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 7]]);\n      }));\n\n      return function (_x7) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.setSession = function (access_token) {\n      console.log('access_token :::::::: ', access_token);\n\n      if (access_token) {\n        setAccessToken(access_token);\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n      } else {\n        removeAccessToken();\n        OwpStorage.removeItem(STORAGE_SESSION_KEY);\n        delete axios.defaults.headers.common['Authorization'];\n      }\n    };\n\n    _this.logout = function () {\n      query({\n        url: '/loadIpxUserForLogout'\n      }).then(function (res) {\n        console.log('Logout');\n      }).catch(function (error) {\n        return console.error('error...', error);\n      });\n\n      _this.setSession(null);\n    };\n\n    _this.isAuthTokenValid = function (access_token) {\n      if (!access_token) {\n        return false;\n      }\n\n      var decoded = jwtDecode(access_token);\n      var currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    _this.getAccessToken = function () {\n      return getAccessToken();\n    };\n\n    return _this;\n  }\n\n  _createClass(jwtService, [{\n    key: \"init\",\n    value: function init() {\n      this.setInterceptors();\n      this.handleAuthentication();\n    }\n  }]);\n\n  return jwtService;\n}(FuseUtils.EventEmitter);\n\nvar instance = new jwtService();\nexport default instance;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/jwtService/jwtService.js"],"names":["axios","jwtDecode","isArray","isEmpty","FuseUtils","mutate","query","getAccessToken","removeAccessToken","setAccessToken","OwpStorage","STORAGE_FAILED_LOGIN_KEY","STORAGE_PERMISSION_KEY","STORAGE_SESSION_KEY","STORAGE_USER_ID_KEY","OwpMessage","jwtService","setInterceptors","interceptors","response","use","err","Promise","resolve","reject","status","config","__isRetryRequest","emit","setSession","handleAuthentication","access_token","isAuthTokenValid","createUser","data","post","then","user","error","processLogin","id","url","Error","console","log","loginfail","getItem","process","env","REACT_APP_AUTO_LOGOUT_CHECK","OWP_SessionExpireMinute","timeout","resultData","setItem","loginfailcnt","JSON","stringify","message","variant","getPermitData","_data","reduce","acc","item","permission","children","token","PERMIT","navigation","signInWithEmailAndPassword","email","password","btoa","signInWithRfid","rfid","signInWithToken","get","updateUserData","updatePw","cudtype","result","updateIPX_User_LockFlag","defaults","headers","common","removeItem","logout","res","catch","decoded","currentTime","Date","now","exp","warn","EventEmitter","instance"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { isArray, isEmpty } from 'lodash';\r\nimport FuseUtils from 'owp/@fuse/FuseUtils';\r\nimport { mutate, query } from 'owp/api';\r\nimport { getAccessToken, removeAccessToken, setAccessToken } from 'owp/auth';\r\nimport { OwpStorage } from 'owp/common';\r\nimport {\r\n    STORAGE_FAILED_LOGIN_KEY,\r\n    STORAGE_PERMISSION_KEY,\r\n    STORAGE_SESSION_KEY,\r\n    STORAGE_USER_ID_KEY,\r\n} from 'owp/constants';\r\nimport { OwpMessage } from 'owp/wrapper';\r\n\r\nclass jwtService extends FuseUtils.EventEmitter {\r\n    init() {\r\n        this.setInterceptors();\r\n        this.handleAuthentication();\r\n    }\r\n\r\n    setInterceptors = () => {\r\n        axios.interceptors.response.use(\r\n            (response) => {\r\n                return response;\r\n            },\r\n            (err) => {\r\n                return new Promise((resolve, reject) => {\r\n                    if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\r\n                        // if you ever get an unauthorized response, logout the user\r\n                        this.emit('onAutoLogout', 'Invalid access_token');\r\n                        this.setSession(null);\r\n                    }\r\n                    throw err;\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleAuthentication = () => {\r\n        let access_token = this.getAccessToken();\r\n\r\n        if (!access_token) {\r\n            return;\r\n        }\r\n\r\n        if (this.isAuthTokenValid(access_token)) {\r\n            this.setSession(access_token);\r\n            this.emit('onAutoLogin', true);\r\n        } else {\r\n            this.setSession(null);\r\n            this.emit('onAutoLogout', 'access_token expired');\r\n        }\r\n    };\r\n\r\n    createUser = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.post('/api/auth/register', data).then((response) => {\r\n                if (response.data.user) {\r\n                    this.setSession(response.data.access_token);\r\n                    resolve(response.data.user);\r\n                } else {\r\n                    reject(response.data.error);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    processLogin = (id, url) =>\r\n        new Promise(async (resolve, reject) => {\r\n            try {\r\n                if (!id || !url) {\r\n                    reject(new Error('url 이 선언되지 않았습니다.'));\r\n                    return;\r\n                }\r\n\r\n                const data = await query({ url });\r\n\r\n                console.log(data);\r\n\r\n                let loginfail = OwpStorage.getItem(STORAGE_FAILED_LOGIN_KEY) || {};\r\n\r\n                if (process.env.REACT_APP_AUTO_LOGOUT_CHECK === 'true') {\r\n                    //자동 로그아웃 시간 설정(분)(기본설정은 5분으로 셋팅 1분=60000 밀리세컨트)\r\n                    let OWP_SessionExpireMinute = 600000;\r\n\r\n                    const resultData = await query({\r\n                        url: '/loadIpxSystemmanageOWP',\r\n                        timeout: 1000,\r\n                    });\r\n\r\n                    if (!isEmpty(resultData)) {\r\n                        console.log(resultData);\r\n\r\n                        //자동 로그아웃 시간 설정(분) DB에서 밀리세컨트로 계산해서 로드\r\n                        OWP_SessionExpireMinute = resultData['SESSIONEXPIREMINUTE'];\r\n\r\n                        console.log('OWP_SessionExpireMinute1 : ', OWP_SessionExpireMinute);\r\n                    }\r\n\r\n                    console.log('OWP_SessionExpireMinute2 : ', OWP_SessionExpireMinute);\r\n                    OwpStorage.setItem('OWP_SessionExpireMinute', OWP_SessionExpireMinute);\r\n                }\r\n                \r\n\r\n                if (isEmpty(data)) {\r\n                    let loginfailcnt = ~~loginfail[id];\r\n\r\n                    loginfail[id] = loginfailcnt + 1;\r\n\r\n                    OwpStorage.setItem(STORAGE_FAILED_LOGIN_KEY, JSON.stringify(loginfail));\r\n\r\n                    reject(new Error('로그인에 실패 했습니다.'));\r\n                } else {\r\n                    //사용자가 잠금처리되었을 경우\r\n                    if (data['errorCode'] === '-90002') {\r\n                        OwpMessage({\r\n                            message: data['errorMessage'], //text or html\r\n                            variant: 'error', //success error info warning null\r\n                        });\r\n\r\n                        //존재하지 않는 계정일 경우\r\n                    } else if (data['errorCode'] === '-90004') {\r\n                        OwpMessage({\r\n                            message: data['errorMessage'],\r\n                            variant: 'error',\r\n                        });\r\n                    } else {\r\n\r\n                        loginfail[id] = 0;\r\n                        OwpStorage.setItem(STORAGE_FAILED_LOGIN_KEY, JSON.stringify(loginfail));\r\n                        OwpStorage.setItem(STORAGE_SESSION_KEY, JSON.stringify(data));\r\n                        OwpStorage.setItem(STORAGE_USER_ID_KEY, id);\r\n\r\n                        this.setSession(data.token);\r\n\r\n                        function getPermitData(_data = []) {\r\n                            if (isEmpty(_data)) {\r\n                                return {};\r\n                            }\r\n\r\n                            return _data.reduce(function (acc, item = {}) {\r\n                                if (!!item.id && !!item.permission) {\r\n                                    acc = { ...acc, [item.id]: item.permission };\r\n                                }\r\n\r\n                                if (!isEmpty(item.children) && isArray(item.children)) {\r\n                                    acc = { ...acc, ...getPermitData(item.children) };\r\n                                }\r\n\r\n                                return acc;\r\n                            }, {});\r\n                        }\r\n\r\n                        const PERMIT = getPermitData(data.navigation);\r\n\r\n                        OwpStorage.setItem(STORAGE_PERMISSION_KEY, JSON.stringify(PERMIT));\r\n\r\n                        resolve(data);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                reject(error);\r\n            }\r\n        });\r\n\r\n    signInWithEmailAndPassword = async (email, password) =>\r\n        await this.processLogin(email, `/loadIpxUserForLogin/${email}/${btoa(password)}`);\r\n\r\n    signInWithRfid = async (rfid) =>\r\n        await this.processLogin(rfid, `/loadIpxUserForLogin_RFID/${rfid}`);\r\n\r\n    signInWithToken = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get('/api/auth/access-token', {\r\n                    data: {\r\n                        access_token: this.getAccessToken(),\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.user) {\r\n                        this.setSession(response.data.access_token);\r\n                        resolve(response.data.user);\r\n                    } else {\r\n                        reject(response.data.error);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    updateUserData = (user) => {\r\n        return axios.post('/api/auth/user/update', {\r\n            user: user,\r\n        });\r\n    };\r\n\r\n    updatePw = async (user) => {\r\n        const data = {\r\n            cudtype: 'UPDATE',\r\n            'IPX_User.UserSEQ': '' + user['UserSEQ'],\r\n            'IPX_User.UserID': '' + user[STORAGE_USER_ID_KEY],\r\n            'IPX_User.UserPassword': user['password'],\r\n            'IPX_User.LastPasswordChangeDate': 'NOW',\r\n            'IPX_User.InitialPasswordChangeFlag': 'Y',\r\n        };\r\n\r\n        try {\r\n            const result = await mutate({\r\n                url: '/updatePw',\r\n                data,\r\n            });\r\n            return result;\r\n        } catch (error) {\r\n            console.error('error', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    updateIPX_User_LockFlag = async (user) => {\r\n        try {\r\n            const result = await mutate({\r\n                url: '/updateIPX_User_LockFlag/' + user + '/Y',\r\n            });\r\n            return result;\r\n        } catch (error) {\r\n            console.error('error', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    setSession = (access_token) => {\r\n        console.log('access_token :::::::: ', access_token);\r\n\r\n        if (access_token) {\r\n            setAccessToken(access_token);\r\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\r\n        } else {\r\n            removeAccessToken();\r\n            OwpStorage.removeItem(STORAGE_SESSION_KEY);\r\n            delete axios.defaults.headers.common['Authorization'];\r\n        }\r\n    };\r\n\r\n    logout = () => {\r\n        query({ url: '/loadIpxUserForLogout' })\r\n            .then((res) => {\r\n                console.log('Logout');\r\n            })\r\n            .catch((error) => console.error('error...', error));\r\n        this.setSession(null);\r\n    };\r\n\r\n    isAuthTokenValid = (access_token) => {\r\n        if (!access_token) {\r\n            return false;\r\n        }\r\n        const decoded = jwtDecode(access_token);\r\n        const currentTime = Date.now() / 1000;\r\n        if (decoded.exp < currentTime) {\r\n            console.warn('access token expired');\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    getAccessToken = () => {\r\n        return getAccessToken();\r\n    };\r\n}\r\n\r\nconst instance = new jwtService();\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}