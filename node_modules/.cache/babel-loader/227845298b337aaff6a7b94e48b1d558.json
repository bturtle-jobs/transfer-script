{"ast":null,"code":"\"use strict\";\n\nvar browserslist = require('browserslist');\n\nvar postcss = require('postcss');\n\nvar agents = require('caniuse-lite').agents;\n\nvar Browsers = require('./browsers');\n\nvar Prefixes = require('./prefixes');\n\nvar data = require('../data/prefixes');\n\nvar info = require('./info');\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.apply(obj) === '[object Object]';\n}\n\nvar cache = {};\n\nfunction timeCapsule(result, prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return;\n  }\n\n  if (prefixes.add.selectors.length > 0) {\n    return;\n  }\n\n  if (Object.keys(prefixes.add).length > 2) {\n    return;\n  }\n  /* istanbul ignore next */\n\n\n  result.warn('Greetings, time traveller. ' + 'We are in the golden age of prefix-less CSS, ' + 'where Autoprefixer is no longer needed for your stylesheet.');\n}\n\nmodule.exports = postcss.plugin('autoprefixer', function () {\n  for (var _len = arguments.length, reqs = new Array(_len), _key = 0; _key < _len; _key++) {\n    reqs[_key] = arguments[_key];\n  }\n\n  var options;\n\n  if (reqs.length === 1 && isPlainObject(reqs[0])) {\n    options = reqs[0];\n    reqs = undefined;\n  } else if (reqs.length === 0 || reqs.length === 1 && !reqs[0]) {\n    reqs = undefined;\n  } else if (reqs.length <= 2 && (reqs[0] instanceof Array || !reqs[0])) {\n    options = reqs[1];\n    reqs = reqs[0];\n  } else if (typeof reqs[reqs.length - 1] === 'object') {\n    options = reqs.pop();\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (options.browser) {\n    throw new Error('Change `browser` option to `browsers` in Autoprefixer');\n  } else if (options.browserslist) {\n    throw new Error('Change `browserslist` option to `browsers` in Autoprefixer');\n  }\n\n  if (options.browsers) {\n    reqs = options.browsers;\n  }\n\n  if (typeof options.grid === 'undefined') {\n    options.grid = false;\n  }\n\n  var brwlstOpts = {\n    ignoreUnknownVersions: options.ignoreUnknownVersions,\n    stats: options.stats\n  };\n\n  function loadPrefixes(opts) {\n    var d = module.exports.data;\n    var browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts);\n    var key = browsers.selected.join(', ') + JSON.stringify(options);\n\n    if (!cache[key]) {\n      cache[key] = new Prefixes(d.prefixes, browsers, options);\n    }\n\n    return cache[key];\n  }\n\n  function plugin(css, result) {\n    var prefixes = loadPrefixes({\n      from: css.source && css.source.input.file,\n      env: options.env\n    });\n    timeCapsule(result, prefixes);\n\n    if (options.remove !== false) {\n      prefixes.processor.remove(css, result);\n    }\n\n    if (options.add !== false) {\n      prefixes.processor.add(css, result);\n    }\n  }\n\n  plugin.options = options;\n  plugin.browsers = reqs;\n\n  plugin.info = function (opts) {\n    opts = opts || {};\n    opts.from = opts.from || process.cwd();\n    return info(loadPrefixes(opts));\n  };\n\n  return plugin;\n});\n/**\n * Autoprefixer data\n */\n\nmodule.exports.data = {\n  browsers: agents,\n  prefixes: data\n  /**\n   * Autoprefixer default browsers\n   */\n\n};\nmodule.exports.defaults = browserslist.defaults;\n/**\n * Inspect with default Autoprefixer\n */\n\nmodule.exports.info = function () {\n  return module.exports().info();\n};","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/autoprefixer/lib/autoprefixer.js"],"names":["browserslist","require","postcss","agents","Browsers","Prefixes","data","info","isPlainObject","obj","Object","prototype","toString","apply","cache","timeCapsule","result","prefixes","browsers","selected","length","add","selectors","keys","warn","module","exports","plugin","_len","arguments","reqs","Array","_key","options","undefined","pop","browser","Error","grid","brwlstOpts","ignoreUnknownVersions","stats","loadPrefixes","opts","d","key","join","JSON","stringify","css","from","source","input","file","env","remove","processor","process","cwd","defaults"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar browserslist = require('browserslist');\n\nvar postcss = require('postcss');\n\nvar agents = require('caniuse-lite').agents;\n\nvar Browsers = require('./browsers');\n\nvar Prefixes = require('./prefixes');\n\nvar data = require('../data/prefixes');\n\nvar info = require('./info');\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.apply(obj) === '[object Object]';\n}\n\nvar cache = {};\n\nfunction timeCapsule(result, prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return;\n  }\n\n  if (prefixes.add.selectors.length > 0) {\n    return;\n  }\n\n  if (Object.keys(prefixes.add).length > 2) {\n    return;\n  }\n  /* istanbul ignore next */\n\n\n  result.warn('Greetings, time traveller. ' + 'We are in the golden age of prefix-less CSS, ' + 'where Autoprefixer is no longer needed for your stylesheet.');\n}\n\nmodule.exports = postcss.plugin('autoprefixer', function () {\n  for (var _len = arguments.length, reqs = new Array(_len), _key = 0; _key < _len; _key++) {\n    reqs[_key] = arguments[_key];\n  }\n\n  var options;\n\n  if (reqs.length === 1 && isPlainObject(reqs[0])) {\n    options = reqs[0];\n    reqs = undefined;\n  } else if (reqs.length === 0 || reqs.length === 1 && !reqs[0]) {\n    reqs = undefined;\n  } else if (reqs.length <= 2 && (reqs[0] instanceof Array || !reqs[0])) {\n    options = reqs[1];\n    reqs = reqs[0];\n  } else if (typeof reqs[reqs.length - 1] === 'object') {\n    options = reqs.pop();\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (options.browser) {\n    throw new Error('Change `browser` option to `browsers` in Autoprefixer');\n  } else if (options.browserslist) {\n    throw new Error('Change `browserslist` option to `browsers` in Autoprefixer');\n  }\n\n  if (options.browsers) {\n    reqs = options.browsers;\n  }\n\n  if (typeof options.grid === 'undefined') {\n    options.grid = false;\n  }\n\n  var brwlstOpts = {\n    ignoreUnknownVersions: options.ignoreUnknownVersions,\n    stats: options.stats\n  };\n\n  function loadPrefixes(opts) {\n    var d = module.exports.data;\n    var browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts);\n    var key = browsers.selected.join(', ') + JSON.stringify(options);\n\n    if (!cache[key]) {\n      cache[key] = new Prefixes(d.prefixes, browsers, options);\n    }\n\n    return cache[key];\n  }\n\n  function plugin(css, result) {\n    var prefixes = loadPrefixes({\n      from: css.source && css.source.input.file,\n      env: options.env\n    });\n    timeCapsule(result, prefixes);\n\n    if (options.remove !== false) {\n      prefixes.processor.remove(css, result);\n    }\n\n    if (options.add !== false) {\n      prefixes.processor.add(css, result);\n    }\n  }\n\n  plugin.options = options;\n  plugin.browsers = reqs;\n\n  plugin.info = function (opts) {\n    opts = opts || {};\n    opts.from = opts.from || process.cwd();\n    return info(loadPrefixes(opts));\n  };\n\n  return plugin;\n});\n/**\n * Autoprefixer data\n */\n\nmodule.exports.data = {\n  browsers: agents,\n  prefixes: data\n  /**\n   * Autoprefixer default browsers\n   */\n\n};\nmodule.exports.defaults = browserslist.defaults;\n/**\n * Inspect with default Autoprefixer\n */\n\nmodule.exports.info = function () {\n  return module.exports().info();\n};"]},"metadata":{},"sourceType":"script"}