{"ast":null,"code":"\"use strict\";\n\nvar Browsers = require('./browsers');\n\nvar brackets = require('./brackets');\n\nvar Value = require('./value');\n\nvar utils = require('./utils');\n\nvar postcss = require('postcss');\n\nvar supported = [];\n\nvar data = require('caniuse-lite').feature(require('caniuse-lite/data/features/css-featurequeries.js'));\n\nfor (var browser in data.stats) {\n  var versions = data.stats[browser];\n\n  for (var version in versions) {\n    var support = versions[version];\n\n    if (/y/.test(support)) {\n      supported.push(browser + ' ' + version);\n    }\n  }\n}\n\nvar Supports = /*#__PURE__*/function () {\n  function Supports(Prefixes, all) {\n    this.Prefixes = Prefixes;\n    this.all = all;\n  }\n  /**\n     * Return prefixer only with @supports supported browsers\n     */\n\n\n  var _proto = Supports.prototype;\n\n  _proto.prefixer = function prefixer() {\n    if (this.prefixerCache) {\n      return this.prefixerCache;\n    }\n\n    var filtered = this.all.browsers.selected.filter(function (i) {\n      return supported.indexOf(i) !== -1;\n    });\n    var browsers = new Browsers(this.all.browsers.data, filtered, this.all.options);\n    this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);\n    return this.prefixerCache;\n  }\n  /**\n     * Parse string into declaration property and value\n     */\n  ;\n\n  _proto.parse = function parse(str) {\n    var parts = str.split(':');\n    var prop = parts[0];\n    var value = parts[1];\n    if (!value) value = '';\n    return [prop.trim(), value.trim()];\n  }\n  /**\n     * Create virtual rule to process it by prefixer\n     */\n  ;\n\n  _proto.virtual = function virtual(str) {\n    var _this$parse = this.parse(str),\n        prop = _this$parse[0],\n        value = _this$parse[1];\n\n    var rule = postcss.parse('a{}').first;\n    rule.append({\n      prop: prop,\n      value: value,\n      raws: {\n        before: ''\n      }\n    });\n    return rule;\n  }\n  /**\n     * Return array of Declaration with all necessary prefixes\n     */\n  ;\n\n  _proto.prefixed = function prefixed(str) {\n    var rule = this.virtual(str);\n\n    if (this.disabled(rule.first)) {\n      return rule.nodes;\n    }\n\n    var result = {\n      warn: function warn() {\n        return null;\n      }\n    };\n    var prefixer = this.prefixer().add[rule.first.prop];\n    prefixer && prefixer.process && prefixer.process(rule.first, result);\n\n    for (var _iterator = rule.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var decl = _ref;\n\n      for (var _iterator2 = this.prefixer().values('add', rule.first.prop), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var value = _ref2;\n        value.process(decl);\n      }\n\n      Value.save(this.all, decl);\n    }\n\n    return rule.nodes;\n  }\n  /**\n     * Return true if brackets node is \"not\" word\n     */\n  ;\n\n  _proto.isNot = function isNot(node) {\n    return typeof node === 'string' && /not\\s*/i.test(node);\n  }\n  /**\n     * Return true if brackets node is \"or\" word\n     */\n  ;\n\n  _proto.isOr = function isOr(node) {\n    return typeof node === 'string' && /\\s*or\\s*/i.test(node);\n  }\n  /**\n     * Return true if brackets node is (prop: value)\n     */\n  ;\n\n  _proto.isProp = function isProp(node) {\n    return typeof node === 'object' && node.length === 1 && typeof node[0] === 'string';\n  }\n  /**\n     * Return true if prefixed property has no unprefixed\n     */\n  ;\n\n  _proto.isHack = function isHack(all, unprefixed) {\n    var check = new RegExp(\"(\\\\(|\\\\s)\" + utils.escapeRegexp(unprefixed) + \":\");\n    return !check.test(all);\n  }\n  /**\n     * Return true if we need to remove node\n     */\n  ;\n\n  _proto.toRemove = function toRemove(str, all) {\n    var _this$parse2 = this.parse(str),\n        prop = _this$parse2[0],\n        value = _this$parse2[1];\n\n    var unprefixed = this.all.unprefixed(prop);\n    var cleaner = this.all.cleaner();\n\n    if (cleaner.remove[prop] && cleaner.remove[prop].remove && !this.isHack(all, unprefixed)) {\n      return true;\n    }\n\n    for (var _iterator3 = cleaner.values('remove', unprefixed), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var checker = _ref3;\n\n      if (checker.check(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n     * Remove all unnecessary prefixes\n     */\n  ;\n\n  _proto.remove = function remove(nodes, all) {\n    var i = 0;\n\n    while (i < nodes.length) {\n      if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {\n        if (this.toRemove(nodes[i][0], all)) {\n          nodes.splice(i, 2);\n          continue;\n        }\n\n        i += 2;\n        continue;\n      }\n\n      if (typeof nodes[i] === 'object') {\n        nodes[i] = this.remove(nodes[i], all);\n      }\n\n      i += 1;\n    }\n\n    return nodes;\n  }\n  /**\n     * Clean brackets with one child\n     */\n  ;\n\n  _proto.cleanBrackets = function cleanBrackets(nodes) {\n    var _this = this;\n\n    return nodes.map(function (i) {\n      if (typeof i !== 'object') {\n        return i;\n      }\n\n      if (i.length === 1 && typeof i[0] === 'object') {\n        return _this.cleanBrackets(i[0]);\n      }\n\n      return _this.cleanBrackets(i);\n    });\n  }\n  /**\n     * Add \" or \" between properties and convert it to brackets format\n     */\n  ;\n\n  _proto.convert = function convert(progress) {\n    var result = [''];\n\n    for (var _iterator4 = progress, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var i = _ref4;\n      result.push([i.prop + \": \" + i.value]);\n      result.push(' or ');\n    }\n\n    result[result.length - 1] = '';\n    return result;\n  }\n  /**\n     * Compress value functions into a string nodes\n     */\n  ;\n\n  _proto.normalize = function normalize(nodes) {\n    var _this2 = this;\n\n    if (typeof nodes !== 'object') {\n      return nodes;\n    }\n\n    nodes = nodes.filter(function (i) {\n      return i !== '';\n    });\n\n    if (typeof nodes[0] === 'string' && nodes[0].indexOf(':') !== -1) {\n      return [brackets.stringify(nodes)];\n    }\n\n    return nodes.map(function (i) {\n      return _this2.normalize(i);\n    });\n  }\n  /**\n     * Add prefixes\n     */\n  ;\n\n  _proto.add = function add(nodes, all) {\n    var _this3 = this;\n\n    return nodes.map(function (i) {\n      if (_this3.isProp(i)) {\n        var prefixed = _this3.prefixed(i[0]);\n\n        if (prefixed.length > 1) {\n          return _this3.convert(prefixed);\n        }\n\n        return i;\n      }\n\n      if (typeof i === 'object') {\n        return _this3.add(i, all);\n      }\n\n      return i;\n    });\n  }\n  /**\n     * Add prefixed declaration\n     */\n  ;\n\n  _proto.process = function process(rule) {\n    var ast = brackets.parse(rule.params);\n    ast = this.normalize(ast);\n    ast = this.remove(ast, rule.params);\n    ast = this.add(ast, rule.params);\n    ast = this.cleanBrackets(ast);\n    rule.params = brackets.stringify(ast);\n  }\n  /**\n     * Check global options\n     */\n  ;\n\n  _proto.disabled = function disabled(node) {\n    if (!this.all.options.grid) {\n      if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {\n        return true;\n      }\n\n      if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {\n        return true;\n      }\n    }\n\n    if (this.all.options.flexbox === false) {\n      if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {\n        return true;\n      }\n\n      var other = ['order', 'justify-content', 'align-items', 'align-content'];\n\n      if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return Supports;\n}();\n\nmodule.exports = Supports;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/autoprefixer/lib/supports.js"],"names":["Browsers","require","brackets","Value","utils","postcss","supported","data","feature","browser","stats","versions","version","support","test","push","Supports","Prefixes","all","_proto","prototype","prefixer","prefixerCache","filtered","browsers","selected","filter","i","indexOf","options","parse","str","parts","split","prop","value","trim","virtual","_this$parse","rule","first","append","raws","before","prefixed","disabled","nodes","result","warn","add","process","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","decl","_iterator2","values","_isArray2","_i2","_ref2","save","isNot","node","isOr","isProp","isHack","unprefixed","check","RegExp","escapeRegexp","toRemove","_this$parse2","cleaner","remove","_iterator3","_isArray3","_i3","_ref3","checker","splice","cleanBrackets","_this","map","convert","progress","_iterator4","_isArray4","_i4","_ref4","normalize","_this2","stringify","_this3","ast","params","grid","flexbox","other","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar Browsers = require('./browsers');\n\nvar brackets = require('./brackets');\n\nvar Value = require('./value');\n\nvar utils = require('./utils');\n\nvar postcss = require('postcss');\n\nvar supported = [];\n\nvar data = require('caniuse-lite').feature(require('caniuse-lite/data/features/css-featurequeries.js'));\n\nfor (var browser in data.stats) {\n  var versions = data.stats[browser];\n\n  for (var version in versions) {\n    var support = versions[version];\n\n    if (/y/.test(support)) {\n      supported.push(browser + ' ' + version);\n    }\n  }\n}\n\nvar Supports =\n/*#__PURE__*/\nfunction () {\n  function Supports(Prefixes, all) {\n    this.Prefixes = Prefixes;\n    this.all = all;\n  }\n  /**\n     * Return prefixer only with @supports supported browsers\n     */\n\n\n  var _proto = Supports.prototype;\n\n  _proto.prefixer = function prefixer() {\n    if (this.prefixerCache) {\n      return this.prefixerCache;\n    }\n\n    var filtered = this.all.browsers.selected.filter(function (i) {\n      return supported.indexOf(i) !== -1;\n    });\n    var browsers = new Browsers(this.all.browsers.data, filtered, this.all.options);\n    this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);\n    return this.prefixerCache;\n  }\n  /**\n     * Parse string into declaration property and value\n     */\n  ;\n\n  _proto.parse = function parse(str) {\n    var parts = str.split(':');\n    var prop = parts[0];\n    var value = parts[1];\n    if (!value) value = '';\n    return [prop.trim(), value.trim()];\n  }\n  /**\n     * Create virtual rule to process it by prefixer\n     */\n  ;\n\n  _proto.virtual = function virtual(str) {\n    var _this$parse = this.parse(str),\n        prop = _this$parse[0],\n        value = _this$parse[1];\n\n    var rule = postcss.parse('a{}').first;\n    rule.append({\n      prop: prop,\n      value: value,\n      raws: {\n        before: ''\n      }\n    });\n    return rule;\n  }\n  /**\n     * Return array of Declaration with all necessary prefixes\n     */\n  ;\n\n  _proto.prefixed = function prefixed(str) {\n    var rule = this.virtual(str);\n\n    if (this.disabled(rule.first)) {\n      return rule.nodes;\n    }\n\n    var result = {\n      warn: function warn() {\n        return null;\n      }\n    };\n    var prefixer = this.prefixer().add[rule.first.prop];\n    prefixer && prefixer.process && prefixer.process(rule.first, result);\n\n    for (var _iterator = rule.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var decl = _ref;\n\n      for (var _iterator2 = this.prefixer().values('add', rule.first.prop), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var value = _ref2;\n        value.process(decl);\n      }\n\n      Value.save(this.all, decl);\n    }\n\n    return rule.nodes;\n  }\n  /**\n     * Return true if brackets node is \"not\" word\n     */\n  ;\n\n  _proto.isNot = function isNot(node) {\n    return typeof node === 'string' && /not\\s*/i.test(node);\n  }\n  /**\n     * Return true if brackets node is \"or\" word\n     */\n  ;\n\n  _proto.isOr = function isOr(node) {\n    return typeof node === 'string' && /\\s*or\\s*/i.test(node);\n  }\n  /**\n     * Return true if brackets node is (prop: value)\n     */\n  ;\n\n  _proto.isProp = function isProp(node) {\n    return typeof node === 'object' && node.length === 1 && typeof node[0] === 'string';\n  }\n  /**\n     * Return true if prefixed property has no unprefixed\n     */\n  ;\n\n  _proto.isHack = function isHack(all, unprefixed) {\n    var check = new RegExp(\"(\\\\(|\\\\s)\" + utils.escapeRegexp(unprefixed) + \":\");\n    return !check.test(all);\n  }\n  /**\n     * Return true if we need to remove node\n     */\n  ;\n\n  _proto.toRemove = function toRemove(str, all) {\n    var _this$parse2 = this.parse(str),\n        prop = _this$parse2[0],\n        value = _this$parse2[1];\n\n    var unprefixed = this.all.unprefixed(prop);\n    var cleaner = this.all.cleaner();\n\n    if (cleaner.remove[prop] && cleaner.remove[prop].remove && !this.isHack(all, unprefixed)) {\n      return true;\n    }\n\n    for (var _iterator3 = cleaner.values('remove', unprefixed), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var checker = _ref3;\n\n      if (checker.check(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n     * Remove all unnecessary prefixes\n     */\n  ;\n\n  _proto.remove = function remove(nodes, all) {\n    var i = 0;\n\n    while (i < nodes.length) {\n      if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {\n        if (this.toRemove(nodes[i][0], all)) {\n          nodes.splice(i, 2);\n          continue;\n        }\n\n        i += 2;\n        continue;\n      }\n\n      if (typeof nodes[i] === 'object') {\n        nodes[i] = this.remove(nodes[i], all);\n      }\n\n      i += 1;\n    }\n\n    return nodes;\n  }\n  /**\n     * Clean brackets with one child\n     */\n  ;\n\n  _proto.cleanBrackets = function cleanBrackets(nodes) {\n    var _this = this;\n\n    return nodes.map(function (i) {\n      if (typeof i !== 'object') {\n        return i;\n      }\n\n      if (i.length === 1 && typeof i[0] === 'object') {\n        return _this.cleanBrackets(i[0]);\n      }\n\n      return _this.cleanBrackets(i);\n    });\n  }\n  /**\n     * Add \" or \" between properties and convert it to brackets format\n     */\n  ;\n\n  _proto.convert = function convert(progress) {\n    var result = [''];\n\n    for (var _iterator4 = progress, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var i = _ref4;\n      result.push([i.prop + \": \" + i.value]);\n      result.push(' or ');\n    }\n\n    result[result.length - 1] = '';\n    return result;\n  }\n  /**\n     * Compress value functions into a string nodes\n     */\n  ;\n\n  _proto.normalize = function normalize(nodes) {\n    var _this2 = this;\n\n    if (typeof nodes !== 'object') {\n      return nodes;\n    }\n\n    nodes = nodes.filter(function (i) {\n      return i !== '';\n    });\n\n    if (typeof nodes[0] === 'string' && nodes[0].indexOf(':') !== -1) {\n      return [brackets.stringify(nodes)];\n    }\n\n    return nodes.map(function (i) {\n      return _this2.normalize(i);\n    });\n  }\n  /**\n     * Add prefixes\n     */\n  ;\n\n  _proto.add = function add(nodes, all) {\n    var _this3 = this;\n\n    return nodes.map(function (i) {\n      if (_this3.isProp(i)) {\n        var prefixed = _this3.prefixed(i[0]);\n\n        if (prefixed.length > 1) {\n          return _this3.convert(prefixed);\n        }\n\n        return i;\n      }\n\n      if (typeof i === 'object') {\n        return _this3.add(i, all);\n      }\n\n      return i;\n    });\n  }\n  /**\n     * Add prefixed declaration\n     */\n  ;\n\n  _proto.process = function process(rule) {\n    var ast = brackets.parse(rule.params);\n    ast = this.normalize(ast);\n    ast = this.remove(ast, rule.params);\n    ast = this.add(ast, rule.params);\n    ast = this.cleanBrackets(ast);\n    rule.params = brackets.stringify(ast);\n  }\n  /**\n     * Check global options\n     */\n  ;\n\n  _proto.disabled = function disabled(node) {\n    if (!this.all.options.grid) {\n      if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {\n        return true;\n      }\n\n      if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {\n        return true;\n      }\n    }\n\n    if (this.all.options.flexbox === false) {\n      if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {\n        return true;\n      }\n\n      var other = ['order', 'justify-content', 'align-items', 'align-content'];\n\n      if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return Supports;\n}();\n\nmodule.exports = Supports;"]},"metadata":{},"sourceType":"script"}