{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\src\\\\main\\\\content\\\\include\\\\C0202002_tab07_tab01_tab01.js\";\nimport React, { Component } from 'react';\nimport { OwpButton, OwpDialog, OwpTreeGrid } from 'owp/wrapper';\nimport Formsy from 'formsy-react';\nimport * as TGEvent from 'owp/TGEvent';\nimport moment from 'moment';\nimport { query, mutate } from 'owp/api';\nimport Pop_C0202002_01 from './Pop_C0202002_01';\nimport { setGridData, setRowAttribute, restoreGridSelect, setRowAttributes } from 'main/GridUtill';\nvar GRID_ID = 'C0202009';\n\nvar Page = /*#__PURE__*/function (_Component) {\n  _inherits(Page, _Component);\n\n  var _super = _createSuper(Page);\n\n  function Page(props) {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _super.call(this, props);\n\n    _this.loadGridData = function () {\n      query({\n        url: 'listOwpMbrProcessSopByUnitProcess',\n        params: {\n          jsondata: JSON.stringify({\n            'OWP_MBR_PROCESS_SOP.PROCESSSEQ': _this.props.PROCESSSEQ + ''\n          })\n        }\n      }).then(function (res) {\n        setGridData(GRID_ID, res);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    _this.clickDelete = function () {\n      _this.onDelete('START');\n    };\n\n    _this.openDialogCheck = function () {\n      _this.setState({\n        isDialogCheckOpen: true\n      });\n\n      _this.setState({\n        popMessage: '저장하시겠습니까?'\n      });\n    };\n\n    _this.closeDialogCheck = function () {\n      _this.setState({\n        isDialogCheckOpen: false\n      });\n    };\n\n    _this.onDelete = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var G, _rows;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              G = TGEvent.getGridByID(GRID_ID);\n\n              if (G) {\n                _rows = G.GetSelRows();\n\n                if (_rows.length > 0) {\n                  _rows.filter(function (item) {\n                    return item.Kind === 'Data';\n                  }).map(function (row) {\n                    var PROCESSSOP_SEQ = row['OWP_MBR_PROCESS_SOP.PROCESSSOP_SEQ'];\n                    var data = {\n                      cudtype: 'delete',\n                      'OWP_MBR_PROCESS_SOP.PROCESSSOP_SEQ': PROCESSSOP_SEQ\n                    };\n                    mutate({\n                      url: '/deleteOwpMbrProcessSop/' + PROCESSSOP_SEQ + '',\n                      data: data\n                    }).then(function (res) {\n                      _this.loadGridData();\n\n                      G.ReloadBody();\n                    }).catch(function (error) {\n                      console.error(error);\n                    });\n                  });\n                }\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      isDialogCheckOpen: false,\n      //TODO:change this\n      popMessage: '저장하시겠습니까'\n    };\n    return _this;\n  }\n  /**\r\n   * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n   * @param {Event} event 발생한 이벤트 객체\r\n   * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n   */\n\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _showApprovalDialog = this.showApprovalDialog;\n      this.loadGridData();\n    } //날짜 디폴드값 설정 함수\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(OwpDialog, {\n        onOpen: this.state.isDialogCheckOpen,\n        dialogActions: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"w-full center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(OwpButton, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: this.clickDelete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }\n        }, \"\\uC800\\uC7A5\"), /*#__PURE__*/React.createElement(OwpButton, {\n          color: \"secondary\",\n          variant: \"outlined\",\n          onClick: this.closeDialogCheck,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }\n        }, \"\\uCDE8\\uC18C\"))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, this.state.popMessage)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 b\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, \"\\uC791\\uC5C5\\uD45C\\uC900\\uAD00\\uB9AC(SOP) \\uC124\\uC815\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          textAlign: 'right',\n          paddingRight: '15'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          right: '0',\n          margin: '1px 95px 0 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Pop_C0202002_01, {\n        PROCESSSEQ: this.props.PROCESSSEQ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'outlined',\n        onClick: this.openDialogCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, \"\\uC0AD\\uC81C\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(OwpTreeGrid, {\n        id: \"C0202009\",\n        LayoutUrl: \"assets/data/C0202009Def.xml\",\n        width: \"100%\",\n        height: \"40vh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/src/main/content/include/C0202002_tab07_tab01_tab01.js"],"names":["React","Component","OwpButton","OwpDialog","OwpTreeGrid","Formsy","TGEvent","moment","query","mutate","Pop_C0202002_01","setGridData","setRowAttribute","restoreGridSelect","setRowAttributes","GRID_ID","Page","props","loadGridData","url","params","jsondata","JSON","stringify","PROCESSSEQ","then","res","catch","error","console","clickDelete","onDelete","openDialogCheck","setState","isDialogCheckOpen","popMessage","closeDialogCheck","G","getGridByID","_rows","GetSelRows","length","filter","item","Kind","map","row","PROCESSSOP_SEQ","data","cudtype","ReloadBody","state","_showApprovalDialog","showApprovalDialog","width","textAlign","paddingRight","position","right","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { OwpButton, OwpDialog, OwpTreeGrid } from 'owp/wrapper';\r\nimport Formsy from 'formsy-react';\r\nimport * as TGEvent from 'owp/TGEvent';\r\nimport moment from 'moment';\r\nimport { query, mutate } from 'owp/api';\r\nimport Pop_C0202002_01 from './Pop_C0202002_01';\r\nimport { setGridData, setRowAttribute, restoreGridSelect, setRowAttributes } from 'main/GridUtill';\r\n\r\nconst GRID_ID = 'C0202009';\r\nclass Page extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isDialogCheckOpen: false,\r\n            //TODO:change this\r\n            popMessage: '저장하시겠습니까',\r\n        };\r\n    }\r\n    /**\r\n     * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n     * @param {Event} event 발생한 이벤트 객체\r\n     * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n     */\r\n    componentDidMount() {\r\n        const _showApprovalDialog = this.showApprovalDialog;\r\n        this.loadGridData();\r\n    }\r\n    //날짜 디폴드값 설정 함수\r\n\r\n    loadGridData = () => {\r\n        query({\r\n            url: 'listOwpMbrProcessSopByUnitProcess',\r\n            params: {\r\n                jsondata: JSON.stringify({\r\n                    'OWP_MBR_PROCESS_SOP.PROCESSSEQ': this.props.PROCESSSEQ + '',\r\n                }),\r\n            },\r\n        })\r\n            .then((res) => {\r\n                setGridData(GRID_ID, res);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    clickDelete = () => {\r\n        this.onDelete('START');\r\n    };\r\n\r\n    openDialogCheck = () => {\r\n        this.setState({ isDialogCheckOpen: true });\r\n        this.setState({ popMessage: '저장하시겠습니까?' });\r\n    };\r\n\r\n    closeDialogCheck = () => {\r\n        this.setState({ isDialogCheckOpen: false });\r\n    };\r\n\r\n    onDelete = async () => {\r\n        const G = TGEvent.getGridByID(GRID_ID);\r\n        if (G) {\r\n            const _rows = G.GetSelRows();\r\n            if (_rows.length > 0) {\r\n                _rows\r\n                    .filter((item) => item.Kind === 'Data')\r\n                    .map((row) => {\r\n                        let PROCESSSOP_SEQ = row['OWP_MBR_PROCESS_SOP.PROCESSSOP_SEQ'];\r\n                        const data = {\r\n                            cudtype: 'delete',\r\n                            'OWP_MBR_PROCESS_SOP.PROCESSSOP_SEQ': PROCESSSOP_SEQ,\r\n                        };\r\n\r\n                        mutate({\r\n                            url: '/deleteOwpMbrProcessSop/' + PROCESSSOP_SEQ + '',\r\n                            data,\r\n                        })\r\n                            .then((res) => {\r\n                                this.loadGridData();\r\n                                G.ReloadBody();\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <OwpDialog\r\n                    onOpen={this.state.isDialogCheckOpen}\r\n                    dialogActions={\r\n                        <React.Fragment>\r\n                            <div className=\"w-full center\">\r\n                                <OwpButton\r\n                                    color=\"secondary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={this.clickDelete}\r\n                                >\r\n                                    저장\r\n                                </OwpButton>\r\n                                <OwpButton\r\n                                    color=\"secondary\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={this.closeDialogCheck}\r\n                                >\r\n                                    취소\r\n                                </OwpButton>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    <React.Fragment>{this.state.popMessage}</React.Fragment>\r\n                </OwpDialog>\r\n                <div style={{ width: '100%' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 b\">작업표준관리(SOP) 설정</div>\r\n                        <div\r\n                            className=\"col-md-6\"\r\n                            style={{ textAlign: 'right', paddingRight: '15' }}\r\n                        >\r\n                            <div\r\n                                style={{ position: 'absolute', right: '0', margin: '1px 95px 0 0' }}\r\n                            >\r\n                                <Pop_C0202002_01 PROCESSSEQ={this.props.PROCESSSEQ} />\r\n                            </div>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'outlined'}\r\n                                onClick={this.openDialogCheck}\r\n                            >\r\n                                삭제\r\n                            </OwpButton>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <OwpTreeGrid\r\n                                id=\"C0202009\"\r\n                                LayoutUrl=\"assets/data/C0202009Def.xml\"\r\n                                width=\"100%\"\r\n                                height=\"40vh\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}