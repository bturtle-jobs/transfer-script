{"ast":null,"code":"Prism.languages.csharp = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n  'string': [{\n    pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n    greedy: true\n  }],\n  'class-name': [{\n    // (Foo bar, Bar baz)\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // [Foo]\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo : Bar\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo\n    pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n});\nPrism.languages.insertBefore('csharp', 'class-name', {\n  'generic-method': {\n    pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n    inside: {\n      function: /^\\w+/,\n      'class-name': {\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      keyword: Prism.languages.csharp.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  },\n  'preprocessor': {\n    pattern: /(^\\s*)#.*/m,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight preprocessor directives as keywords\n      'directive': {\n        pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  }\n});\nPrism.languages.dotnet = Prism.languages.csharp;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/prismjs/components/prism-csharp.js"],"names":["Prism","languages","csharp","extend","pattern","greedy","inside","punctuation","lookbehind","insertBefore","function","keyword","alias","dotnet"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB,EAAgC;AACxD,aAAW,4oBAD6C;AAExD,YAAU,CACT;AACCC,IAAAA,OAAO,EAAE,wCADV;AAECC,IAAAA,MAAM,EAAE;AAFT,GADS,EAKT;AACCD,IAAAA,OAAO,EAAE,kCADV;AAECC,IAAAA,MAAM,EAAE;AAFT,GALS,CAF8C;AAYxD,gBAAc,CACb;AACC;AACAD,IAAAA,OAAO,EAAE,kCAFV;AAGCE,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN;AAHT,GADa,EAQb;AACC;AACAH,IAAAA,OAAO,EAAE,0BAFV;AAGCI,IAAAA,UAAU,EAAE,IAHb;AAICF,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN;AAJT,GARa,EAgBb;AACC;AACAH,IAAAA,OAAO,EAAE,yEAFV;AAGCI,IAAAA,UAAU,EAAE,IAHb;AAICF,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN;AAJT,GAhBa,EAwBb;AACC;AACAH,IAAAA,OAAO,EAAE,uEAFV;AAGCI,IAAAA,UAAU,EAAE,IAHb;AAICF,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN;AAJT,GAxBa,CAZ0C;AA6CxD,YAAU;AA7C8C,CAAhC,CAAzB;AAgDAP,KAAK,CAACC,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,YAAvC,EAAqD;AACpD,oBAAkB;AACjBL,IAAAA,OAAO,EAAE,6BADQ;AAEjBE,IAAAA,MAAM,EAAE;AACPI,MAAAA,QAAQ,EAAE,MADH;AAEP,oBAAc;AACbN,QAAAA,OAAO,EAAE,wBADI;AAEbE,QAAAA,MAAM,EAAE;AACPC,UAAAA,WAAW,EAAE;AADN;AAFK,OAFP;AAQPI,MAAAA,OAAO,EAAEX,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBS,OARzB;AASPJ,MAAAA,WAAW,EAAE;AATN;AAFS,GADkC;AAepD,kBAAgB;AACfH,IAAAA,OAAO,EAAE,YADM;AAEfI,IAAAA,UAAU,EAAE,IAFG;AAGfI,IAAAA,KAAK,EAAE,UAHQ;AAIfN,IAAAA,MAAM,EAAE;AACP;AACA,mBAAa;AACZF,QAAAA,OAAO,EAAE,0FADG;AAEZI,QAAAA,UAAU,EAAE,IAFA;AAGZI,QAAAA,KAAK,EAAE;AAHK;AAFN;AAJO;AAfoC,CAArD;AA8BAZ,KAAK,CAACC,SAAN,CAAgBY,MAAhB,GAAyBb,KAAK,CAACC,SAAN,CAAgBC,MAAzC","sourcesContent":["Prism.languages.csharp = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n\t'string': [\n\t\t{\n\t\t\tpattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'class-name': [\n\t\t{\n\t\t\t// (Foo bar, Bar baz)\n\t\t\tpattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// [Foo]\n\t\t\tpattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// class Foo : Bar\n\t\t\tpattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// class Foo\n\t\t\tpattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t}\n\t],\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n});\n\nPrism.languages.insertBefore('csharp', 'class-name', {\n\t'generic-method': {\n\t\tpattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n\t\tinside: {\n\t\t\tfunction: /^\\w+/,\n\t\t\t'class-name': {\n\t\t\t\tpattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\tkeyword: Prism.languages.csharp.keyword,\n\t\t\tpunctuation: /[<>(),.:]/\n\t\t}\n\t},\n\t'preprocessor': {\n\t\tpattern: /(^\\s*)#.*/m,\n\t\tlookbehind: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t// highlight preprocessor directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t}\n\t}\n});\n\nPrism.languages.dotnet = Prism.languages.csharp;"]},"metadata":{},"sourceType":"script"}