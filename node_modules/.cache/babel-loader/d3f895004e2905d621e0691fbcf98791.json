{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\auth\\\\Auth.js\";\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport isEmpty from 'lodash/isEmpty';\nimport { getAccessToken } from 'owp/auth';\nimport * as userActions from 'owp/auth/store/actions';\nimport history from 'owp/history';\nimport jwtService from 'owp/jwtService';\nimport * as Actions from 'owp/store/actions';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nvar Auth = /*#__PURE__*/function (_Component) {\n  _inherits(Auth, _Component);\n\n  var _super = _createSuper(Auth);\n\n  /*eslint-disable-next-line no-useless-constructor*/\n  function Auth(props) {\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    _this = _super.call(this, props);\n    /**\r\n     * Comment the line if you do not use JWt\r\n     */\n    //this.jwtCheck();\n\n    _this.jwtCheck = function () {\n      jwtService.on('onAutoLogin', function () {\n        _this.props.showMessage({\n          message: 'Logging in with JWT'\n        });\n        /**\r\n         * Sign in and retrieve user data from Api\r\n         */\n\n\n        jwtService.signInWithToken().then(function (user) {\n          _this.props.setUserData(user);\n\n          _this.props.showMessage({\n            message: 'Logged in with JWT'\n          });\n        }).catch(function (error) {\n          _this.props.showMessage({\n            message: error\n          });\n        });\n      });\n      jwtService.on('onAutoLogout', function (message) {\n        if (message) {\n          _this.props.showMessage({\n            message: message\n          });\n        }\n\n        _this.props.logout();\n      });\n      jwtService.init();\n    };\n\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (process.env.REACT_APP_LOGIN_CHECK === 'true') {\n        if (isEmpty(getAccessToken())) {\n          history.replace('/login');\n          return;\n        }\n\n        if (get(this.props.user, 'role') !== 'guest' && isArray(get(this.props.user, 'data.navigation'))) {\n          this.props.setNavigation(get(this.props.user, 'data.navigation'));\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }\n      }, children);\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    logout: userActions.logoutUser,\n    setUserData: userActions.setUserData,\n    showMessage: Actions.showMessage,\n    hideMessage: Actions.hideMessage,\n    setNavigation: Actions.setNavigation\n  }, dispatch);\n}\n\nexport default connect(function (_ref) {\n  var auth = _ref.auth;\n  return {\n    user: auth.user\n  };\n}, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/auth/Auth.js"],"names":["get","isArray","isEmpty","getAccessToken","userActions","history","jwtService","Actions","React","Component","connect","bindActionCreators","Auth","props","jwtCheck","on","showMessage","message","signInWithToken","then","user","setUserData","catch","error","logout","init","process","env","REACT_APP_LOGIN_CHECK","replace","setNavigation","children","mapDispatchToProps","dispatch","logoutUser","hideMessage","auth"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport isArray from 'lodash/isArray';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { getAccessToken } from 'owp/auth';\r\nimport * as userActions from 'owp/auth/store/actions';\r\nimport history from 'owp/history';\r\nimport jwtService from 'owp/jwtService';\r\nimport * as Actions from 'owp/store/actions';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nclass Auth extends Component {\r\n    /*eslint-disable-next-line no-useless-constructor*/\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        /**\r\n         * Comment the line if you do not use JWt\r\n         */\r\n        //this.jwtCheck();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (process.env.REACT_APP_LOGIN_CHECK === 'true') {\r\n            if (isEmpty(getAccessToken())) {\r\n                history.replace('/login');\r\n                return;\r\n            }\r\n\r\n            if (\r\n                get(this.props.user, 'role') !== 'guest' &&\r\n                isArray(get(this.props.user, 'data.navigation'))\r\n            ) {\r\n                this.props.setNavigation(get(this.props.user, 'data.navigation'));\r\n            }\r\n        }\r\n    }\r\n\r\n    jwtCheck = () => {\r\n        jwtService.on('onAutoLogin', () => {\r\n            this.props.showMessage({ message: 'Logging in with JWT' });\r\n\r\n            /**\r\n             * Sign in and retrieve user data from Api\r\n             */\r\n            jwtService\r\n                .signInWithToken()\r\n                .then((user) => {\r\n                    this.props.setUserData(user);\r\n\r\n                    this.props.showMessage({ message: 'Logged in with JWT' });\r\n                })\r\n                .catch((error) => {\r\n                    this.props.showMessage({ message: error });\r\n                });\r\n        });\r\n\r\n        jwtService.on('onAutoLogout', (message) => {\r\n            if (message) {\r\n                this.props.showMessage({ message });\r\n            }\r\n            this.props.logout();\r\n        });\r\n\r\n        jwtService.init();\r\n    };\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return <React.Fragment>{children}</React.Fragment>;\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(\r\n        {\r\n            logout: userActions.logoutUser,\r\n            setUserData: userActions.setUserData,\r\n            showMessage: Actions.showMessage,\r\n            hideMessage: Actions.hideMessage,\r\n            setNavigation: Actions.setNavigation,\r\n        },\r\n        dispatch\r\n    );\r\n}\r\n\r\nexport default connect(({ auth }) => {\r\n    return { user: auth.user };\r\n}, mapDispatchToProps)(Auth);\r\n"]},"metadata":{},"sourceType":"module"}