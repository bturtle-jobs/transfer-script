{"ast":null,"code":"Prism.languages.java = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n  'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n  'operator': {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'function', {\n  'annotation': {\n    alias: 'punctuation',\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('java', 'class-name', {\n  'generics': {\n    pattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n    alias: 'function',\n    inside: {\n      keyword: Prism.languages.java.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  }\n});","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/prismjs/components/prism-java.js"],"names":["Prism","languages","java","extend","pattern","lookbehind","insertBefore","alias","inside","keyword","punctuation"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB,EAAgC;AACtD,aAAW,4VAD2C;AAEtD,YAAU,qFAF4C;AAGtD,cAAY;AACXC,IAAAA,OAAO,EAAE,2FADE;AAEXC,IAAAA,UAAU,EAAE;AAFD;AAH0C,CAAhC,CAAvB;AASAL,KAAK,CAACC,SAAN,CAAgBK,YAAhB,CAA6B,MAA7B,EAAoC,UAApC,EAAgD;AAC/C,gBAAc;AACbC,IAAAA,KAAK,EAAE,aADM;AAEbH,IAAAA,OAAO,EAAE,cAFI;AAGbC,IAAAA,UAAU,EAAE;AAHC;AADiC,CAAhD;AAQAL,KAAK,CAACC,SAAN,CAAgBK,YAAhB,CAA6B,MAA7B,EAAqC,YAArC,EAAmD;AAClD,cAAY;AACXF,IAAAA,OAAO,EAAE,8CADE;AAEXG,IAAAA,KAAK,EAAE,UAFI;AAGXC,IAAAA,MAAM,EAAE;AACPC,MAAAA,OAAO,EAAET,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBO,OADvB;AAEPC,MAAAA,WAAW,EAAE;AAFN;AAHG;AADsC,CAAnD","sourcesContent":["Prism.languages.java = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n\t'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n\t'operator': {\n\t\tpattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.insertBefore('java','function', {\n\t'annotation': {\n\t\talias: 'punctuation',\n\t\tpattern: /(^|[^.])@\\w+/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.insertBefore('java', 'class-name', {\n\t'generics': {\n\t\tpattern: /<\\s*\\w+(?:\\.\\w+)?(?:\\s*,\\s*\\w+(?:\\.\\w+)?)*>/i,\n\t\talias: 'function',\n\t\tinside: {\n\t\t\tkeyword: Prism.languages.java.keyword,\n\t\t\tpunctuation: /[<>(),.:]/\n\t\t}\n\t}\n});\n"]},"metadata":{},"sourceType":"script"}