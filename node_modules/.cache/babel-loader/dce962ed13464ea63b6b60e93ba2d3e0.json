{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport isEmpty from 'lodash/isEmpty';\nimport { setUserData } from 'owp/auth/store/actions/user.actions';\nimport jwtService from 'owp/jwtService';\nexport var LOGIN_ERROR = 'LOGIN_ERROR';\nexport var LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport function submitLogin(_ref) {\n  var rfid = _ref.rfid,\n      email = _ref.email,\n      password = _ref.password;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var userData, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return !isEmpty(rfid) ? jwtService.signInWithRfid(rfid) : jwtService.signInWithEmailAndPassword(email, password);\n\n            case 3:\n              userData = _context.sent;\n              dispatch(setUserData(userData));\n              result = dispatch({\n                type: LOGIN_SUCCESS\n              });\n              return _context.abrupt(\"return\", result);\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", dispatch({\n                type: LOGIN_ERROR,\n                payload: _context.t0\n              }));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/auth/store/actions/login.actions.js"],"names":["isEmpty","setUserData","jwtService","LOGIN_ERROR","LOGIN_SUCCESS","submitLogin","rfid","email","password","dispatch","signInWithRfid","signInWithEmailAndPassword","userData","result","type","payload"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,SAASC,WAAT,OAAgD;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACnD;AAAA,yEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEyB,CAACT,OAAO,CAACM,IAAD,CAAR,GAClBJ,UAAU,CAACQ,cAAX,CAA0BJ,IAA1B,CADkB,GAElBJ,UAAU,CAACS,0BAAX,CAAsCJ,KAAtC,EAA6CC,QAA7C,CAJP;;AAAA;AAEOI,cAAAA,QAFP;AAMCH,cAAAA,QAAQ,CAACR,WAAW,CAACW,QAAD,CAAZ,CAAR;AAEMC,cAAAA,MARP,GAQgBJ,QAAQ,CAAC;AACpBK,gBAAAA,IAAI,EAAEV;AADc,eAAD,CARxB;AAAA,+CAYQS,MAZR;;AAAA;AAAA;AAAA;AAAA,+CAcQJ,QAAQ,CAAC;AACZK,gBAAAA,IAAI,EAAEX,WADM;AAEZY,gBAAAA,OAAO;AAFK,eAAD,CAdhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAoBH","sourcesContent":["import isEmpty from 'lodash/isEmpty';\r\nimport { setUserData } from 'owp/auth/store/actions/user.actions';\r\nimport jwtService from 'owp/jwtService';\r\n\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\n\r\nexport function submitLogin({ rfid, email, password }) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const userData = await (!isEmpty(rfid)\r\n                ? jwtService.signInWithRfid(rfid)\r\n                : jwtService.signInWithEmailAndPassword(email, password));\r\n\r\n            dispatch(setUserData(userData));\r\n\r\n            const result = dispatch({\r\n                type: LOGIN_SUCCESS,\r\n            });\r\n\r\n            return result;\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: error,\r\n            });\r\n        }\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}