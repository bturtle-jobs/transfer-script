{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\src\\\\main\\\\content\\\\pages\\\\C804000\\\\C804000.js\";\nimport React, { Component } from 'react';\nimport { OwpTreeGrid } from 'owp/wrapper';\nimport Icon from '@material-ui/core/Icon';\nimport * as TGEvent from 'owp/TGEvent';\nimport { onGridLoad, restoreGridSelect, saveGridSelect } from 'main/GridUtill';\nimport Pop_C804001 from '../../include/Pop_C804001';\n\nvar Page = /*#__PURE__*/function (_Component) {\n  _inherits(Page, _Component);\n\n  var _super = _createSuper(Page);\n\n  function Page(props) {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _super.call(this, props);\n\n    _this.callback = function () {\n      _this.setState({\n        selectedGrid: false\n      });\n\n      restoreGridSelect(\"C804001\");\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //   onGridLoad()\n      onGridLoad(\"C804001\", function () {\n        TGEvent.OWPTGDataList(\"C804001\", \"listIpxSystemmanage\", {});\n      });\n      TGEvent.OWPTGSelect(\"C804001\", function (is, row) {\n        saveGridSelect(\"C804001\", \"1\");\n\n        if (is) {\n          _this2.setState({\n            SESSIONEXPIREMINUTE: row[\"IPX_SYSTEMMANAGE.SESSIONEXPIREMINUTE\"],\n            PASSWORDEXPIREPERIOD: row[\"IPX_SYSTEMMANAGE.PASSWORDEXPIREPERIOD\"],\n            MAXLOAGINFAILCOUNT: row[\"IPX_SYSTEMMANAGE.MAXLOAGINFAILCOUNT\"],\n            NOTICEBEFOREPASSWORDEXPIRE: row[\"IPX_SYSTEMMANAGE.NOTICEBEFOREPASSWORDEXPIRE\"],\n            selectedGrid: true\n          });\n        } else {\n          _this2.setState({\n            SESSIONEXPIREMINUTE: null,\n            PASSWORDEXPIREPERIOD: null,\n            MAXLOAGINFAILCOUNT: null,\n            NOTICEBEFOREPASSWORDEXPIRE: null,\n            selectedGrid: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12 pd0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"portlet light bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"portlet-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"caption\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"ico_m01 c04\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      }, \"insert_chart\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-dark bold uppercase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      }, \"\\uC2DC\\uC2A4\\uD15C \\uC124\\uC815\\uAD00\\uB9AC\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"caption-helper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex justify-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Pop_C804001, {\n        callback: this.callback,\n        isGridSelected: this.state.selectedGrid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"portlet-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(OwpTreeGrid, {\n        id: \"C804001\" // height={\"73vh\"}\n        ,\n        LayoutUrl: \"assets/data/C804001Def.xml\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      }))))));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/src/main/content/pages/C804000/C804000.js"],"names":["React","Component","OwpTreeGrid","Icon","TGEvent","onGridLoad","restoreGridSelect","saveGridSelect","Pop_C804001","Page","props","callback","setState","selectedGrid","state","OWPTGDataList","OWPTGSelect","is","row","SESSIONEXPIREMINUTE","PASSWORDEXPIREPERIOD","MAXLOAGINFAILCOUNT","NOTICEBEFOREPASSWORDEXPIRE"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { OwpTreeGrid } from 'owp/wrapper';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport * as TGEvent from 'owp/TGEvent';\r\nimport { onGridLoad,restoreGridSelect,saveGridSelect } from 'main/GridUtill';\r\nimport Pop_C804001 from '../../include/Pop_C804001';\r\n\r\nclass Page extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    \r\n  componentDidMount() {\r\n    //   onGridLoad()\r\n    onGridLoad(\"C804001\", ()=>{\r\n        TGEvent.OWPTGDataList(\"C804001\", \"listIpxSystemmanage\", {})\r\n      })\r\n\r\n    \r\n     \r\n      TGEvent.OWPTGSelect(\"C804001\", (is, row) => {\r\n    \r\n        saveGridSelect(\"C804001\",\"1\")\r\n        if (is) {\r\n            this.setState({\r\n                SESSIONEXPIREMINUTE: row[\"IPX_SYSTEMMANAGE.SESSIONEXPIREMINUTE\"],\r\n                PASSWORDEXPIREPERIOD: row[\"IPX_SYSTEMMANAGE.PASSWORDEXPIREPERIOD\"],\r\n                MAXLOAGINFAILCOUNT: row[\"IPX_SYSTEMMANAGE.MAXLOAGINFAILCOUNT\"],\r\n                NOTICEBEFOREPASSWORDEXPIRE: row[\"IPX_SYSTEMMANAGE.NOTICEBEFOREPASSWORDEXPIRE\"],\r\n                selectedGrid: true,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                SESSIONEXPIREMINUTE: null,\r\n                PASSWORDEXPIREPERIOD:null,\r\n                MAXLOAGINFAILCOUNT: null,\r\n                NOTICEBEFOREPASSWORDEXPIRE: null,\r\n                selectedGrid: false,\r\n            });\r\n        }\r\n      });  \r\n  \r\n  }\r\n  callback = () => {\r\n      this.setState({\r\n          selectedGrid : false\r\n      })\r\n    restoreGridSelect(\"C804001\");\r\n  };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"p-16\">\r\n                    <div className=\"col-lg-12 pd0\">\r\n                        <div className=\"portlet light bordered\">\r\n                            <div className=\"portlet-title\">\r\n                                <div className=\"caption\">\r\n                                    <Icon className=\"ico_m01 c04\">insert_chart</Icon>\r\n                                    <span className=\"font-dark bold uppercase\">시스템 설정관리</span>\r\n                                    <span className=\"caption-helper\"> </span>\r\n                                </div>\r\n                                <div className=\"flex justify-end\">\r\n                                <Pop_C804001 \r\n                                    callback={this.callback}\r\n                                    isGridSelected={this.state.selectedGrid}\r\n                                />\r\n                                </div>\r\n                            </div>\r\n                             <div className=\"portlet-body\">\r\n                                <OwpTreeGrid\r\n                                    id={\"C804001\"}\r\n                                    // height={\"73vh\"}\r\n                                    LayoutUrl={\"assets/data/C804001Def.xml\"}\r\n                                />\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}