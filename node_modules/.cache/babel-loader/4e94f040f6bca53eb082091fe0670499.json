{"ast":null,"code":"/**\r\n * Flag bullet module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Bullet } from \"../../charts/elements/Bullet\";\nimport { registry } from \"../../core/Registry\";\nimport { Label } from \"../../core/elements/Label\";\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\nimport { Line } from \"../../core/elements/Line\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a flag-shaped bullet with an optional text label inside it.\r\n *\r\n * The background/body of the flag is a [[WavedRectangle]] element. Most of\r\n * its the visual appearance is configured via `background` property.\r\n *\r\n * The size of a background adopts to the size of a label automatically. If\r\n * you don't want a label to be shown at all, you can set it to `undefined`. In\r\n * this case flag size will be of the `width`/`height` set directly on the\r\n * [[FlagBullet]].\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let series = chart.series.push(new am4charts.LineSeries());\r\n * // ...\r\n * let flagBullet = series.bullets.push(new am4plugins_bullets.FlagBullet());\r\n * flagBullet.poleHeight = 15;\r\n * flagBullet.label.text = \"{valueY}\";\r\n * ```\r\n * ```JavaScript\r\n * var series = chart.series.push(new am4charts.LineSeries());\r\n * // ...\r\n * var flagBullet = series.bullets.push(new am4plugins_bullets.FlagBullet());\r\n * flagBullet.poleHeight = 15;\r\n * flagBullet.label.text = \"{valueY}\";\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"series\": [{\r\n *     // ...\r\n *     \"bullets\": [{\r\n *       \"type\": \"FlagBullet\",\r\n *       \"poleHeight\": 15,\r\n *       \"label\": {\r\n *         \"text\": \"{valueY}\"\r\n *       }\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.7\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/plugin-bullets/} for usage instructions.\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n */\n\nvar FlagBullet =\n/** @class */\nfunction (_super) {\n  __extends(FlagBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function FlagBullet() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"FlagBullet\";\n    var background = _this.background;\n    background.fillOpacity = 1;\n    background.events.on(\"propertychanged\", _this.invalidate, _this, false);\n    background.waveHeight = 1.5;\n    background.waveLength = 7;\n    background.setWavedSides(true, false, true, false);\n    background.strokeOpacity = 1;\n    var interfaceColors = new InterfaceColorSet();\n    _this.stroke = interfaceColors.getFor(\"alternativeBackground\");\n    _this.pole = _this.createChild(Line);\n    _this.pole.strokeOpacity = 1;\n    _this.width = 22;\n    _this.height = 16;\n    var label = new Label();\n    label.padding(3, 5, 3, 5);\n    label.dy = 1;\n    label.events.on(\"propertychanged\", _this.invalidate, _this, false);\n    label.events.on(\"positionchanged\", _this.invalidate, _this, false);\n    label.strokeOpacity = 0;\n    _this.label = label;\n    _this.poleHeight = 10;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Validates element:\r\n   * * Triggers events\r\n   * * Redraws the element\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  FlagBullet.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n\n    this.updateBackground();\n    var background = this.background;\n    this.pole.y1 = 0;\n    var poleHeight = this.poleHeight;\n    var label = this.label;\n    var bgHeight = background.pixelHeight;\n\n    if (poleHeight > 0) {\n      this.pole.y2 = -poleHeight - bgHeight;\n\n      if (label) {\n        label.y = -poleHeight - bgHeight;\n      }\n    } else {\n      this.pole.y2 = -poleHeight + bgHeight;\n\n      if (label) {\n        label.y = -poleHeight;\n      }\n    }\n\n    if (label && label.horizontalCenter == \"middle\") {\n      this.pole.y2 = -poleHeight;\n    }\n  };\n  /**\r\n   * Update the background to fit into specific dimensions.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Make it protected?\r\n   */\n\n\n  FlagBullet.prototype.updateBackground = function () {\n    var background = this._background; // accessing protected, as getter creates instance if it doesn't exist\n\n    if (background) {\n      var label = this.label;\n\n      if (label) {\n        background.x = label.maxLeft;\n        background.width = label.measuredWidth;\n        background.height = label.measuredHeight;\n      } else {\n        background.width = Math.abs(this.maxRight - this.maxLeft);\n        background.height = Math.abs(this.maxBottom - this.maxTop);\n      }\n\n      var poleHeight = this.poleHeight;\n\n      if (poleHeight > 0) {\n        background.y = -poleHeight - background.pixelHeight;\n      } else {\n        background.y = -poleHeight;\n      }\n    }\n  };\n\n  Object.defineProperty(FlagBullet.prototype, \"label\", {\n    /**\r\n     * @return Label\r\n     */\n    get: function get() {\n      return this._label;\n    },\n\n    /**\r\n     * A [[Label]] element for displaying within flag.\r\n     *\r\n     * Use it's `text` property to set actual text, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * flagBullet.text = \"Hello\";\r\n     * ```\r\n     * ```JavaScript\r\n     * flagBullet.text = \"Hello\";\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"bullets\": [{\r\n     *       \"type\": \"FlagBullet\",\r\n     *       \"label\": {\r\n     *         \"text\": \"Hello\"\r\n     *       }\r\n     *     }]\r\n     *   }]\r\n     * }\r\n     * ```\r\n     * @param  label  Label\r\n     */\n    set: function set(label) {\n      if (label) {\n        this._label = label;\n\n        this._disposers.push(label);\n\n        label.parent = this;\n        label.shouldClone = false;\n      } else {\n        if (this._label) {\n          this._label.dispose();\n        }\n\n        this._label = label;\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[FlagBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n\n  FlagBullet.prototype.copyFrom = function (source) {\n    if (source.label) {\n      this.label = source.label.clone();\n    }\n\n    if (source.pole) {\n      this.pole.copyFrom(source.pole);\n    }\n\n    _super.prototype.copyFrom.call(this, source);\n  };\n  /**\r\n   * Creates and returns a background element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Background\r\n   */\n\n\n  FlagBullet.prototype.createBackground = function () {\n    return new WavedRectangle();\n  };\n\n  Object.defineProperty(FlagBullet.prototype, \"poleHeight\", {\n    /**\r\n     * @return Height (px)\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"poleHeight\");\n    },\n\n    /**\r\n     * Flag pole height in pixels.\r\n     *\r\n     * @default 10\r\n     * @param  value  Height (px)\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"poleHeight\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FlagBullet;\n}(Bullet);\n\nexport { FlagBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"FlagBullet\"] = FlagBullet;","map":{"version":3,"sources":["../../../../../src/.internal/plugins/bullets/FlagBullet.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Flag bullet module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"../../charts/elements/Bullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FlagBullet]].\r\n */\r\nexport interface IFlagBulletProperties extends IBulletProperties {\r\n\r\n\t/**\r\n\t * Flag pole height in pixels.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tpoleHeight?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[FlagBullet]].\r\n */\r\nexport interface IFlagBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters.\r\n * \r\n * Includes both the [[Adapter]] definitions and properties.\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlagBulletAdapters extends IBulletAdapters, IFlagBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a flag-shaped bullet with an optional text label inside it.\r\n *\r\n * The background/body of the flag is a [[WavedRectangle]] element. Most of\r\n * its the visual appearance is configured via `background` property.\r\n *\r\n * The size of a background adopts to the size of a label automatically. If\r\n * you don't want a label to be shown at all, you can set it to `undefined`. In\r\n * this case flag size will be of the `width`/`height` set directly on the\r\n * [[FlagBullet]].\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * Example:\r\n * \r\n * ```TypeScript\r\n * let series = chart.series.push(new am4charts.LineSeries());\r\n * // ...\r\n * let flagBullet = series.bullets.push(new am4plugins_bullets.FlagBullet());\r\n * flagBullet.poleHeight = 15;\r\n * flagBullet.label.text = \"{valueY}\";\r\n * ```\r\n * ```JavaScript\r\n * var series = chart.series.push(new am4charts.LineSeries());\r\n * // ...\r\n * var flagBullet = series.bullets.push(new am4plugins_bullets.FlagBullet());\r\n * flagBullet.poleHeight = 15;\r\n * flagBullet.label.text = \"{valueY}\";\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"series\": [{\r\n *     // ...\r\n *     \"bullets\": [{\r\n *       \"type\": \"FlagBullet\",\r\n *       \"poleHeight\": 15,\r\n *       \"label\": {\r\n *         \"text\": \"{valueY}\"\r\n *       }\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.7\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/plugin-bullets/} for usage instructions.\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n */\r\nexport class FlagBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFlagBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFlagBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFlagBulletEvents;\r\n\r\n\t/**\r\n\t * A type for the background element.\r\n\t */\r\n\tpublic _background: WavedRectangle;\r\n\r\n\t/**\r\n\t * Label element.\r\n\t */\r\n\tprotected _label: Label;\r\n\r\n\t/**\r\n\t * An element of type [[Line]] that represents flag's \"pole\".\r\n\t * \r\n\t * To set actual height of the pole use `poleHeight` property, which\r\n\t * indicates height of the pole in pixels from bottom of the pole to the\r\n\t * bottom of the flag.\r\n\t */\r\n\tpublic pole: Line;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FlagBullet\";\r\n\r\n\t\tlet background = this.background;\r\n\t\tbackground.fillOpacity = 1;\r\n\t\tbackground.events.on(\"propertychanged\", this.invalidate, this, false);\r\n\t\tbackground.waveHeight = 1.5;\r\n\t\tbackground.waveLength = 7;\r\n\t\tbackground.setWavedSides(true, false, true, false);\r\n\t\tbackground.strokeOpacity = 1;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n\r\n\t\tthis.pole = this.createChild(Line);\r\n\t\tthis.pole.strokeOpacity = 1;\r\n\r\n\t\tthis.width = 22;\r\n\t\tthis.height = 16;\r\n\r\n\t\tlet label = new Label();\r\n\t\tlabel.padding(3, 5, 3, 5);\r\n\t\tlabel.dy = 1;\r\n\t\tlabel.events.on(\"propertychanged\", this.invalidate, this, false);\r\n\t\tlabel.events.on(\"positionchanged\", this.invalidate, this, false);\r\n\t\tlabel.strokeOpacity = 0;\r\n\r\n\t\tthis.label = label;\r\n\r\n\t\tthis.poleHeight = 10;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element:\r\n\t * * Triggers events\r\n\t * * Redraws the element\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.updateBackground();\r\n\r\n\t\tlet background = this.background;\r\n\r\n\t\tthis.pole.y1 = 0;\r\n\r\n\t\tlet poleHeight = this.poleHeight;\r\n\t\tlet label = this.label;\r\n\t\tlet bgHeight = background.pixelHeight;\r\n\r\n\t\tif (poleHeight > 0) {\r\n\t\t\tthis.pole.y2 = -poleHeight - bgHeight;\r\n\t\t\tif (label) {\r\n\t\t\t\tlabel.y = -poleHeight - bgHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.pole.y2 = -poleHeight + bgHeight;\r\n\t\t\tif (label) {\r\n\t\t\t\tlabel.y = -poleHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (label && label.horizontalCenter == \"middle\") {\r\n\t\t\tthis.pole.y2 = -poleHeight;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Update the background to fit into specific dimensions.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Make it protected?\r\n\t */\r\n\tpublic updateBackground(): void {\r\n\t\tlet background: Sprite = this._background; // accessing protected, as getter creates instance if it doesn't exist\r\n\t\tif (background) {\r\n\r\n\t\t\tlet label = this.label;\r\n\r\n\t\t\tif (label) {\r\n\t\t\t\tbackground.x = label.maxLeft;\r\n\t\t\t\tbackground.width = label.measuredWidth;\r\n\t\t\t\tbackground.height = label.measuredHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackground.width = Math.abs(this.maxRight - this.maxLeft);\r\n\t\t\t\tbackground.height = Math.abs(this.maxBottom - this.maxTop);\r\n\t\t\t}\r\n\t\t\tlet poleHeight = this.poleHeight;\r\n\t\t\tif (poleHeight > 0) {\r\n\t\t\t\tbackground.y = - poleHeight - background.pixelHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackground.y = - poleHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Label]] element for displaying within flag.\r\n\t *\r\n\t * Use it's `text` property to set actual text, e.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * flagBullet.text = \"Hello\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * flagBullet.text = \"Hello\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"bullets\": [{\r\n\t *       \"type\": \"FlagBullet\",\r\n\t *       \"label\": {\r\n\t *         \"text\": \"Hello\"\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * @param  label  Label\r\n\t */\r\n\tpublic set label(label: Label) {\r\n\t\tif (label) {\r\n\t\t\tthis._label = label;\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this;\r\n\t\t\tlabel.shouldClone = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._label) {\r\n\t\t\t\tthis._label.dispose();\r\n\t\t\t}\r\n\t\t\tthis._label = label;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[FlagBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tif (source.label) {\r\n\t\t\tthis.label = source.label.clone();\r\n\t\t}\r\n\t\tif (source.pole) {\r\n\t\t\tthis.pole.copyFrom(source.pole);\r\n\t\t}\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a background element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new WavedRectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Flag pole height in pixels.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value  Height (px)\r\n\t */\r\n\tpublic set poleHeight(value: number) {\r\n\t\tthis.setPropertyValue(\"poleHeight\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Height (px)\r\n\t */\r\n\tpublic get poleHeight(): number {\r\n\t\treturn this.getPropertyValue(\"poleHeight\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlagBullet\"] = FlagBullet;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}