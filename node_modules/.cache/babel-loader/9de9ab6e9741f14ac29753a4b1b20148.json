{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    if (!hasWindow) {\n      return {\n        width: null,\n        height: null\n      };\n    }\n\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  var _useState = useState(getWindowDimensions()),\n      _useState2 = _slicedToArray(_useState, 2),\n      windowDimensions = _useState2[0],\n      setWindowDimensions = _useState2[1];\n\n  useEffect(function () {\n    if (hasWindow) {\n      var handleResize = function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      };\n\n      window.addEventListener('resize', handleResize);\n      return function () {\n        return window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, [hasWindow]);\n  return windowDimensions;\n}","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/wrapper/hooks/useWindowDimensions.js"],"names":["useEffect","useState","useWindowDimensions","hasWindow","window","getWindowDimensions","width","height","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAC1C,MAAMC,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAApC;;AAEA,WAASC,mBAAT,GAA+B;AAC3B,QAAI,CAACF,SAAL,EAAgB;AACZ,aAAO;AACHG,QAAAA,KAAK,EAAE,IADJ;AAEHC,QAAAA,MAAM,EAAE;AAFL,OAAP;AAIH;;AAED,WAAO;AACHD,MAAAA,KAAK,EAAEF,MAAM,CAACI,UADX;AAEHD,MAAAA,MAAM,EAAEH,MAAM,CAACK;AAFZ,KAAP;AAIH;;AAfyC,kBAiBMR,QAAQ,CAACI,mBAAmB,EAApB,CAjBd;AAAA;AAAA,MAiBnCK,gBAjBmC;AAAA,MAiBjBC,mBAjBiB;;AAmB1CX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIG,SAAJ,EAAe;AAAA,UACFS,YADE,GACX,SAASA,YAAT,GAAwB;AACpBD,QAAAA,mBAAmB,CAACN,mBAAmB,EAApB,CAAnB;AACH,OAHU;;AAKXD,MAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,aAAO;AAAA,eAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,OAAP;AACH;AACJ,GATQ,EASN,CAACT,SAAD,CATM,CAAT;AAWA,SAAOO,gBAAP;AACH","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport default function useWindowDimensions() {\r\n    const hasWindow = typeof window !== 'undefined';\r\n\r\n    function getWindowDimensions() {\r\n        if (!hasWindow) {\r\n            return {\r\n                width: null,\r\n                height: null,\r\n            };\r\n        }\r\n\r\n        return {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        };\r\n    }\r\n\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        if (hasWindow) {\r\n            function handleResize() {\r\n                setWindowDimensions(getWindowDimensions());\r\n            }\r\n\r\n            window.addEventListener('resize', handleResize);\r\n            return () => window.removeEventListener('resize', handleResize);\r\n        }\r\n    }, [hasWindow]);\r\n\r\n    return windowDimensions;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}