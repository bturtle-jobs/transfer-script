{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\wrapper\\\\NumberPad\\\\NumberPad.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport './NumberPad.css';\n\nvar NumberPad = function NumberPad(props) {\n  var location = handleNumberPadLocation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputNumKey = _useState2[0],\n      setInputNumKey = _useState2[1];\n\n  var _useState3 = useState(location),\n      _useState4 = _slicedToArray(_useState3, 2),\n      numberPadLocation = _useState4[0],\n      setNumberPadLocation = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      beforeInputKey = _useState6[0],\n      setBeforeInputKey = _useState6[1];\n\n  var numberList = \"7 8 9 4 5 6 1 2 3 clear 0 del\";\n  var numberButtonList = numberList.split(\" \");\n  var numberButtons = numberButtonList.map(function (number, index) {\n    return (index + 1) % 3 === 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"NumberButtonStyle\",\n      onClick: function onClick() {\n        return setTextField({\n          number: number\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, number), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"NumberButtonStyle\",\n      onClick: function onClick() {\n        return setTextField({\n          number: number\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, number);\n  });\n\n  function handleNumberPadLocation() {\n    var location;\n\n    if (props.numberPadLocation['top'] > 800) {\n      location = {\n        position: 'fixed',\n        left: props.numberPadLocation['left'] + 290 + 'px',\n        top: props.numberPadLocation['top'] - 370 + 'px'\n      };\n    } else {\n      location = {\n        position: 'fixed',\n        left: props.numberPadLocation['left'] + 290 + 'px',\n        top: props.numberPadLocation['top'] + 'px'\n      };\n    }\n\n    return location;\n  }\n\n  function setTextField(number) {\n    if (number[\"number\"] === \"del\") {\n      setInputNumKey(inputNumKey.substring(0, inputNumKey.length - 1));\n      props.keyboardInput(inputNumKey.substring(0, inputNumKey.length - 1));\n    } else if (number[\"number\"] === \"clear\") {\n      setInputNumKey(\"\");\n      props.keyboardInput(\"\");\n    } else {\n      setInputNumKey(inputNumKey + number[\"number\"]);\n      props.keyboardInput(inputNumKey + number[\"number\"]);\n      setBeforeInputKey(number[\"number\"]);\n    }\n  }\n\n  useEffect(function () {\n    if (!props.nowUseKeyboard) {\n      setBeforeInputKey('');\n      setInputNumKey('');\n    } else {\n      setInputNumKey(beforeInputKey);\n    }\n  }, [props.nowUseKeyboard]);\n  useEffect(function () {\n    var location = handleNumberPadLocation();\n    setInputNumKey(\"\");\n    setNumberPadLocation(location);\n  }, [props.nowNumberPadInputSelector]);\n  document.getElementsByTagName('body')[0].addEventListener('click', function (event) {\n    // 키보드 외부 영역 클릭시 키보드 닫기\n    try {\n      var width = document.getElementById('numberPadSection').getBoundingClientRect().left;\n      var height = document.getElementById('numberPadSection').getBoundingClientRect().top;\n      var mouseWidth = event.clientX;\n      var mouseHeight = event.clientY;\n\n      if (!(mouseHeight >= height && mouseHeight <= height + 530) || !(mouseWidth >= width && mouseWidth <= width + 350)) {\n        props.closeKeyboard();\n      }\n    } catch (_unused) {}\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    maxWidth: \"xs\",\n    id: \"numberPadSection\",\n    className: \"NumberContainer2\",\n    style: numberPadLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"KeybaordHeader\",\n    onMouseDown: function onMouseDown(e) {\n      return startDrag(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"2vh\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, numberButtons)); // 이미지 움직이기\n\n  function moveDrag(e) {\n    document.getElementById('numberPadSection').style.left = e.clientX - 160 + \"px\";\n    document.getElementById('numberPadSection').style.top = e.clientY - 30 + \"px\";\n    return false;\n  } // 드래그 시작\n\n\n  function startDrag(e) {\n    var obj = document.getElementById('numberPadSection');\n    var e_obj = window.event ? window.event : e;\n    document.onmousemove = moveDrag;\n    document.onmouseup = stopDrag;\n    if (e_obj.preventDefault) e_obj.preventDefault();\n  } // 드래그 멈추기\n\n\n  function stopDrag() {\n    document.onmousemove = null;\n    document.onmouseup = null;\n  }\n};\n\nexport default NumberPad;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/wrapper/NumberPad/NumberPad.js"],"names":["React","useState","useEffect","NumberPad","props","location","handleNumberPadLocation","inputNumKey","setInputNumKey","numberPadLocation","setNumberPadLocation","beforeInputKey","setBeforeInputKey","numberList","numberButtonList","split","numberButtons","map","number","index","setTextField","position","left","top","substring","length","keyboardInput","nowUseKeyboard","nowNumberPadInputSelector","document","getElementsByTagName","addEventListener","event","width","getElementById","getBoundingClientRect","height","mouseWidth","clientX","mouseHeight","clientY","closeKeyboard","e","startDrag","marginTop","textAlign","moveDrag","style","obj","e_obj","window","onmousemove","onmouseup","stopDrag","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport './NumberPad.css';\r\n\r\nconst NumberPad = (props) => {\r\n  let location=handleNumberPadLocation();\r\n  const [inputNumKey, setInputNumKey] = useState(\"\");\r\n  const [numberPadLocation,setNumberPadLocation] = useState(location);\r\n  const [beforeInputKey,setBeforeInputKey] = useState('');\r\n\r\n  const numberList = \"7 8 9 4 5 6 1 2 3 clear 0 del\";\r\n  const numberButtonList = numberList.split(\" \");\r\n\r\n  let numberButtons = numberButtonList.map((number, index) =>\r\n    (index + 1) % 3 === 0 ? (\r\n      <span>\r\n        <button\r\n          className=\"NumberButtonStyle\"\r\n          onClick={() => setTextField({ number })}\r\n        >\r\n          {number}\r\n        </button>\r\n        <br></br>\r\n      </span>\r\n    ) : (\r\n      <button\r\n        className=\"NumberButtonStyle\"\r\n        onClick={() => setTextField({ number })}\r\n      >\r\n        {number}\r\n      </button>\r\n    )\r\n  );\r\n  \r\n  function handleNumberPadLocation(){\r\n    let location;\r\n    if(props.numberPadLocation['top'] > 800)\r\n    {\r\n      location = {\r\n        position : 'fixed',\r\n        left : (props.numberPadLocation['left'] + 290) + 'px',\r\n        top : (props.numberPadLocation['top'] - 370) +'px'\r\n      }\r\n    }\r\n    else\r\n    {\r\n      location = {\r\n        position : 'fixed',\r\n        left : (props.numberPadLocation['left'] + 290) + 'px',\r\n        top : (props.numberPadLocation['top']) +'px'\r\n      }\r\n    }\r\n    return location;\r\n  }\r\n\r\n  function setTextField(number) {\r\n    if (number[\"number\"] === \"del\") {\r\n      setInputNumKey(inputNumKey.substring(0, inputNumKey.length - 1));\r\n      props.keyboardInput(inputNumKey.substring(0, inputNumKey.length - 1));\r\n    } else if (number[\"number\"] === \"clear\") {\r\n      setInputNumKey(\"\");\r\n      props.keyboardInput(\"\");\r\n    } else {\r\n      setInputNumKey(inputNumKey + number[\"number\"]);\r\n      props.keyboardInput(inputNumKey + number[\"number\"]);\r\n      setBeforeInputKey(number[\"number\"]);\r\n    }\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    if(!props.nowUseKeyboard)\r\n    {\r\n      setBeforeInputKey('');\r\n      setInputNumKey('');\r\n    }else\r\n    {\r\n      setInputNumKey(beforeInputKey);\r\n    }\r\n  },[props.nowUseKeyboard]);\r\n\r\n  useEffect(()=>{\r\n    let location=handleNumberPadLocation();\r\n    setInputNumKey(\"\");\r\n    setNumberPadLocation(location);\r\n  },[props.nowNumberPadInputSelector]);\r\n\r\n  document.getElementsByTagName('body')[0].addEventListener('click', function(event) { // 키보드 외부 영역 클릭시 키보드 닫기\r\n    try\r\n    {\r\n        let width = document.getElementById('numberPadSection').getBoundingClientRect().left;\r\n        let height = document.getElementById('numberPadSection').getBoundingClientRect().top;\r\n        let mouseWidth = event.clientX;\r\n        let mouseHeight = event.clientY;\r\n        if(!((mouseHeight >= height) && (mouseHeight <= height+530)) || !((mouseWidth >= width) && (mouseWidth <= width+350))){\r\n            props.closeKeyboard();\r\n        }\r\n    }catch{\r\n    }\r\n});\r\n\r\n  return (\r\n    <div\r\n      maxWidth=\"xs\"\r\n      id=\"numberPadSection\"\r\n      className=\"NumberContainer2\"\r\n      style={numberPadLocation}\r\n    >\r\n      <div className=\"KeybaordHeader\" onMouseDown={(e)=>startDrag(e)}>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: \"2vh\",\r\n          textAlign: \"center\"\r\n        }}\r\n      >\r\n        {numberButtons}\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  \r\n  // 이미지 움직이기\r\n  function moveDrag(e){\r\n    document.getElementById('numberPadSection').style.left = (e.clientX - 160) +\"px\";\r\n    document.getElementById('numberPadSection').style.top = (e.clientY - 30) +\"px\";\r\n    return false;\r\n  }\r\n  \r\n  // 드래그 시작\r\n  function startDrag(e){\r\n    let obj = document.getElementById('numberPadSection');\r\n    let e_obj = window.event? window.event : e;\r\n    document.onmousemove = moveDrag;\r\n    document.onmouseup = stopDrag;\r\n    if(e_obj.preventDefault)e_obj.preventDefault();\r\n  }\r\n  \r\n  // 드래그 멈추기\r\n  function stopDrag(){\r\n    document.onmousemove = null;\r\n    document.onmouseup = null;\r\n  }\r\n\r\n};\r\n\r\n\r\nexport default NumberPad;"]},"metadata":{},"sourceType":"module"}