{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dropdown = exports.DraggableAttribute = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _immutabilityHelper = require('immutability-helper');\n\nvar _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);\n\nvar _Utilities = require('./Utilities');\n\nvar _PivotTable = require('./PivotTable');\n\nvar _PivotTable2 = _interopRequireDefault(_PivotTable);\n\nvar _reactSortablejs = require('react-sortablejs');\n\nvar _reactSortablejs2 = _interopRequireDefault(_reactSortablejs);\n\nvar _reactDraggable = require('react-draggable');\n\nvar _reactDraggable2 = _interopRequireDefault(_reactDraggable);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\n\nvar DraggableAttribute = exports.DraggableAttribute = function (_React$Component) {\n  _inherits(DraggableAttribute, _React$Component);\n\n  function DraggableAttribute(props) {\n    _classCallCheck(this, DraggableAttribute);\n\n    var _this = _possibleConstructorReturn(this, (DraggableAttribute.__proto__ || Object.getPrototypeOf(DraggableAttribute)).call(this, props));\n\n    _this.state = {\n      open: false,\n      filterText: ''\n    };\n    return _this;\n  }\n\n  _createClass(DraggableAttribute, [{\n    key: 'toggleValue',\n    value: function toggleValue(value) {\n      if (value in this.props.valueFilter) {\n        this.props.removeValuesFromFilter(this.props.name, [value]);\n      } else {\n        this.props.addValuesToFilter(this.props.name, [value]);\n      }\n    }\n  }, {\n    key: 'matchesFilter',\n    value: function matchesFilter(x) {\n      return x.toLowerCase().trim().includes(this.state.filterText.toLowerCase().trim());\n    }\n  }, {\n    key: 'selectOnly',\n    value: function selectOnly(e, value) {\n      e.stopPropagation();\n      this.props.setValuesInFilter(this.props.name, Object.keys(this.props.attrValues).filter(function (y) {\n        return y !== value;\n      }));\n    }\n  }, {\n    key: 'getFilterBox',\n    value: function getFilterBox() {\n      var _this2 = this;\n\n      var showMenu = Object.keys(this.props.attrValues).length < this.props.menuLimit;\n      var values = Object.keys(this.props.attrValues);\n      var shown = values.filter(this.matchesFilter.bind(this)).sort(this.props.sorter);\n      return _react2.default.createElement(_reactDraggable2.default, {\n        handle: '.pvtDragHandle'\n      }, _react2.default.createElement('div', {\n        className: 'pvtFilterBox',\n        style: {\n          display: 'block',\n          cursor: 'initial',\n          zIndex: this.props.zIndex\n        },\n        onClick: function onClick() {\n          return _this2.props.moveFilterBoxToTop(_this2.props.name);\n        }\n      }, _react2.default.createElement('a', {\n        onClick: function onClick() {\n          return _this2.setState({\n            open: false\n          });\n        },\n        className: 'pvtCloseX'\n      }, '\\xD7'), _react2.default.createElement('span', {\n        className: 'pvtDragHandle'\n      }, \"\\u2630\"), _react2.default.createElement('h4', null, this.props.name), showMenu || _react2.default.createElement('p', null, '(too many values to show)'), showMenu && _react2.default.createElement('p', null, _react2.default.createElement('input', {\n        type: 'text',\n        placeholder: 'Filter values',\n        className: 'pvtSearch',\n        value: this.state.filterText,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            filterText: e.target.value\n          });\n        }\n      }), _react2.default.createElement('br', null), _react2.default.createElement('a', {\n        role: 'button',\n        className: 'pvtButton',\n        onClick: function onClick() {\n          return _this2.props.removeValuesFromFilter(_this2.props.name, Object.keys(_this2.props.attrValues).filter(_this2.matchesFilter.bind(_this2)));\n        }\n      }, 'Select ', values.length === shown.length ? 'All' : shown.length), ' ', _react2.default.createElement('a', {\n        role: 'button',\n        className: 'pvtButton',\n        onClick: function onClick() {\n          return _this2.props.addValuesToFilter(_this2.props.name, Object.keys(_this2.props.attrValues).filter(_this2.matchesFilter.bind(_this2)));\n        }\n      }, 'Deselect ', values.length === shown.length ? 'All' : shown.length)), showMenu && _react2.default.createElement('div', {\n        className: 'pvtCheckContainer'\n      }, shown.map(function (x) {\n        return _react2.default.createElement('p', {\n          key: x,\n          onClick: function onClick() {\n            return _this2.toggleValue(x);\n          },\n          className: x in _this2.props.valueFilter ? '' : 'selected'\n        }, _react2.default.createElement('a', {\n          className: 'pvtOnly',\n          onClick: function onClick(e) {\n            return _this2.selectOnly(e, x);\n          }\n        }, 'only'), _react2.default.createElement('a', {\n          className: 'pvtOnlySpacer'\n        }, '\\xA0'), x === '' ? _react2.default.createElement('em', null, 'null') : x);\n      }))));\n    }\n  }, {\n    key: 'toggleFilterBox',\n    value: function toggleFilterBox() {\n      this.setState({\n        open: !this.state.open\n      });\n      this.props.moveFilterBoxToTop(this.props.name);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var filtered = Object.keys(this.props.valueFilter).length !== 0 ? 'pvtFilteredAttribute' : '';\n      return _react2.default.createElement('li', {\n        'data-id': this.props.name\n      }, _react2.default.createElement('span', {\n        className: 'pvtAttr ' + filtered\n      }, this.props.name, _react2.default.createElement('span', {\n        className: 'pvtTriangle',\n        onClick: this.toggleFilterBox.bind(this)\n      }, ' ', \"\\u25BE\")), this.state.open ? this.getFilterBox() : null);\n    }\n  }]);\n\n  return DraggableAttribute;\n}(_react2.default.Component);\n\nDraggableAttribute.defaultProps = {\n  valueFilter: {}\n};\nDraggableAttribute.propTypes = {\n  name: _propTypes2.default.string.isRequired,\n  addValuesToFilter: _propTypes2.default.func.isRequired,\n  removeValuesFromFilter: _propTypes2.default.func.isRequired,\n  attrValues: _propTypes2.default.objectOf(_propTypes2.default.number).isRequired,\n  valueFilter: _propTypes2.default.objectOf(_propTypes2.default.bool),\n  moveFilterBoxToTop: _propTypes2.default.func.isRequired,\n  sorter: _propTypes2.default.func.isRequired,\n  menuLimit: _propTypes2.default.number,\n  zIndex: _propTypes2.default.number\n};\n\nvar Dropdown = exports.Dropdown = function (_React$PureComponent) {\n  _inherits(Dropdown, _React$PureComponent);\n\n  function Dropdown() {\n    _classCallCheck(this, Dropdown);\n\n    return _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).apply(this, arguments));\n  }\n\n  _createClass(Dropdown, [{\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      return _react2.default.createElement('div', {\n        className: 'pvtDropdown',\n        style: {\n          zIndex: this.props.zIndex\n        }\n      }, _react2.default.createElement('div', {\n        onClick: function onClick(e) {\n          e.stopPropagation();\n\n          _this4.props.toggle();\n        },\n        className: 'pvtDropdownValue pvtDropdownCurrent ' + (this.props.open ? 'pvtDropdownCurrentOpen' : ''),\n        role: 'button'\n      }, _react2.default.createElement('div', {\n        className: 'pvtDropdownIcon'\n      }, this.props.open ? '×' : '▾'), this.props.current || _react2.default.createElement('span', null, '\\xA0')), this.props.open && _react2.default.createElement('div', {\n        className: 'pvtDropdownMenu'\n      }, this.props.values.map(function (r) {\n        return _react2.default.createElement('div', {\n          key: r,\n          role: 'button',\n          onClick: function onClick(e) {\n            e.stopPropagation();\n\n            if (_this4.props.current === r) {\n              _this4.props.toggle();\n            } else {\n              _this4.props.setValue(r);\n            }\n          },\n          className: 'pvtDropdownValue ' + (r === _this4.props.current ? 'pvtDropdownActiveValue' : '')\n        }, r);\n      })));\n    }\n  }]);\n\n  return Dropdown;\n}(_react2.default.PureComponent);\n\nvar PivotTableUI = function (_React$PureComponent2) {\n  _inherits(PivotTableUI, _React$PureComponent2);\n\n  function PivotTableUI(props) {\n    _classCallCheck(this, PivotTableUI);\n\n    var _this5 = _possibleConstructorReturn(this, (PivotTableUI.__proto__ || Object.getPrototypeOf(PivotTableUI)).call(this, props));\n\n    _this5.state = {\n      unusedOrder: [],\n      zIndices: {},\n      maxZIndex: 1000,\n      openDropdown: false\n    };\n    return _this5;\n  }\n\n  _createClass(PivotTableUI, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.materializeInput(this.props.data);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps) {\n      this.materializeInput(nextProps.data);\n    }\n  }, {\n    key: 'materializeInput',\n    value: function materializeInput(nextData) {\n      if (this.data === nextData) {\n        return;\n      }\n\n      this.data = nextData;\n      var attrValues = {};\n      var materializedInput = [];\n      var recordsProcessed = 0;\n\n      _Utilities.PivotData.forEachRecord(this.data, this.props.derivedAttributes, function (record) {\n        materializedInput.push(record);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = Object.keys(record)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var attr = _step.value;\n\n            if (!(attr in attrValues)) {\n              attrValues[attr] = {};\n\n              if (recordsProcessed > 0) {\n                attrValues[attr].null = recordsProcessed;\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        for (var _attr in attrValues) {\n          var value = _attr in record ? record[_attr] : 'null';\n\n          if (!(value in attrValues[_attr])) {\n            attrValues[_attr][value] = 0;\n          }\n\n          attrValues[_attr][value]++;\n        }\n\n        recordsProcessed++;\n      });\n\n      this.materializedInput = materializedInput;\n      this.attrValues = attrValues;\n    }\n  }, {\n    key: 'sendPropUpdate',\n    value: function sendPropUpdate(command) {\n      this.props.onChange((0, _immutabilityHelper2.default)(this.props, command));\n    }\n  }, {\n    key: 'propUpdater',\n    value: function propUpdater(key) {\n      var _this6 = this;\n\n      return function (value) {\n        return _this6.sendPropUpdate(_defineProperty({}, key, {\n          $set: value\n        }));\n      };\n    }\n  }, {\n    key: 'setValuesInFilter',\n    value: function setValuesInFilter(attribute, values) {\n      this.sendPropUpdate({\n        valueFilter: _defineProperty({}, attribute, {\n          $set: values.reduce(function (r, v) {\n            r[v] = true;\n            return r;\n          }, {})\n        })\n      });\n    }\n  }, {\n    key: 'addValuesToFilter',\n    value: function addValuesToFilter(attribute, values) {\n      if (attribute in this.props.valueFilter) {\n        this.sendPropUpdate({\n          valueFilter: _defineProperty({}, attribute, values.reduce(function (r, v) {\n            r[v] = {\n              $set: true\n            };\n            return r;\n          }, {}))\n        });\n      } else {\n        this.setValuesInFilter(attribute, values);\n      }\n    }\n  }, {\n    key: 'removeValuesFromFilter',\n    value: function removeValuesFromFilter(attribute, values) {\n      this.sendPropUpdate({\n        valueFilter: _defineProperty({}, attribute, {\n          $unset: values\n        })\n      });\n    }\n  }, {\n    key: 'moveFilterBoxToTop',\n    value: function moveFilterBoxToTop(attribute) {\n      this.setState((0, _immutabilityHelper2.default)(this.state, {\n        maxZIndex: {\n          $set: this.state.maxZIndex + 1\n        },\n        zIndices: _defineProperty({}, attribute, {\n          $set: this.state.maxZIndex + 1\n        })\n      }));\n    }\n  }, {\n    key: 'isOpen',\n    value: function isOpen(dropdown) {\n      return this.state.openDropdown === dropdown;\n    }\n  }, {\n    key: 'makeDnDCell',\n    value: function makeDnDCell(items, onChange, classes) {\n      var _this7 = this;\n\n      return _react2.default.createElement(_reactSortablejs2.default, {\n        options: {\n          group: 'shared',\n          ghostClass: 'pvtPlaceholder',\n          filter: '.pvtFilterBox',\n          preventOnFilter: false\n        },\n        tag: 'td',\n        className: classes,\n        onChange: onChange\n      }, items.map(function (x) {\n        return _react2.default.createElement(DraggableAttribute, {\n          name: x,\n          key: x,\n          attrValues: _this7.attrValues[x],\n          valueFilter: _this7.props.valueFilter[x] || {},\n          sorter: (0, _Utilities.getSort)(_this7.props.sorters, x),\n          menuLimit: _this7.props.menuLimit,\n          setValuesInFilter: _this7.setValuesInFilter.bind(_this7),\n          addValuesToFilter: _this7.addValuesToFilter.bind(_this7),\n          moveFilterBoxToTop: _this7.moveFilterBoxToTop.bind(_this7),\n          removeValuesFromFilter: _this7.removeValuesFromFilter.bind(_this7),\n          zIndex: _this7.state.zIndices[x] || _this7.state.maxZIndex\n        });\n      }));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this8 = this;\n\n      var numValsAllowed = this.props.aggregators[this.props.aggregatorName]([])().numInputs || 0;\n      var rendererName = this.props.rendererName in this.props.renderers ? this.props.rendererName : Object.keys(this.props.renderers)[0];\n\n      var rendererCell = _react2.default.createElement('td', {\n        className: 'pvtRenderers'\n      }, _react2.default.createElement(Dropdown, {\n        current: rendererName,\n        values: Object.keys(this.props.renderers),\n        open: this.isOpen('renderer'),\n        zIndex: this.isOpen('renderer') ? this.state.maxZIndex + 1 : 1,\n        toggle: function toggle() {\n          return _this8.setState({\n            openDropdown: _this8.isOpen('renderer') ? false : 'renderer'\n          });\n        },\n        setValue: this.propUpdater('rendererName')\n      }));\n\n      var sortIcons = {\n        key_a_to_z: {\n          rowSymbol: '↕',\n          colSymbol: '↔',\n          next: 'value_a_to_z'\n        },\n        value_a_to_z: {\n          rowSymbol: '↓',\n          colSymbol: '→',\n          next: 'value_z_to_a'\n        },\n        value_z_to_a: {\n          rowSymbol: '↑',\n          colSymbol: '←',\n          next: 'key_a_to_z'\n        }\n      };\n\n      var aggregatorCell = _react2.default.createElement('td', {\n        className: 'pvtVals'\n      }, _react2.default.createElement(Dropdown, {\n        current: this.props.aggregatorName,\n        values: Object.keys(this.props.aggregators),\n        open: this.isOpen('aggregators'),\n        zIndex: this.isOpen('aggregators') ? this.state.maxZIndex + 1 : 1,\n        toggle: function toggle() {\n          return _this8.setState({\n            openDropdown: _this8.isOpen('aggregators') ? false : 'aggregators'\n          });\n        },\n        setValue: this.propUpdater('aggregatorName')\n      }), _react2.default.createElement('a', {\n        role: 'button',\n        className: 'pvtRowOrder',\n        onClick: function onClick() {\n          return _this8.propUpdater('rowOrder')(sortIcons[_this8.props.rowOrder].next);\n        }\n      }, sortIcons[this.props.rowOrder].rowSymbol), _react2.default.createElement('a', {\n        role: 'button',\n        className: 'pvtColOrder',\n        onClick: function onClick() {\n          return _this8.propUpdater('colOrder')(sortIcons[_this8.props.colOrder].next);\n        }\n      }, sortIcons[this.props.colOrder].colSymbol), numValsAllowed > 0 && _react2.default.createElement('br', null), new Array(numValsAllowed).fill().map(function (n, i) {\n        return [_react2.default.createElement(Dropdown, {\n          key: i,\n          current: _this8.props.vals[i],\n          values: Object.keys(_this8.attrValues).filter(function (e) {\n            return !_this8.props.hiddenAttributes.includes(e) && !_this8.props.hiddenFromAggregators.includes(e);\n          }),\n          open: _this8.isOpen('val' + i),\n          zIndex: _this8.isOpen('val' + i) ? _this8.state.maxZIndex + 1 : 1,\n          toggle: function toggle() {\n            return _this8.setState({\n              openDropdown: _this8.isOpen('val' + i) ? false : 'val' + i\n            });\n          },\n          setValue: function setValue(value) {\n            return _this8.sendPropUpdate({\n              vals: {\n                $splice: [[i, 1, value]]\n              }\n            });\n          }\n        }), i + 1 !== numValsAllowed ? _react2.default.createElement('br', {\n          key: 'br' + i\n        }) : null];\n      }));\n\n      var unusedAttrs = Object.keys(this.attrValues).filter(function (e) {\n        return !_this8.props.rows.includes(e) && !_this8.props.cols.includes(e) && !_this8.props.hiddenAttributes.includes(e) && !_this8.props.hiddenFromDragDrop.includes(e);\n      }).sort((0, _Utilities.sortAs)(this.state.unusedOrder));\n      var unusedLength = unusedAttrs.reduce(function (r, e) {\n        return r + e.length;\n      }, 0);\n      var horizUnused = unusedLength < this.props.unusedOrientationCutoff;\n      var unusedAttrsCell = this.makeDnDCell(unusedAttrs, function (order) {\n        return _this8.setState({\n          unusedOrder: order\n        });\n      }, 'pvtAxisContainer pvtUnused ' + (horizUnused ? 'pvtHorizList' : 'pvtVertList'));\n      var colAttrs = this.props.cols.filter(function (e) {\n        return !_this8.props.hiddenAttributes.includes(e) && !_this8.props.hiddenFromDragDrop.includes(e);\n      });\n      var colAttrsCell = this.makeDnDCell(colAttrs, this.propUpdater('cols'), 'pvtAxisContainer pvtHorizList pvtCols');\n      var rowAttrs = this.props.rows.filter(function (e) {\n        return !_this8.props.hiddenAttributes.includes(e) && !_this8.props.hiddenFromDragDrop.includes(e);\n      });\n      var rowAttrsCell = this.makeDnDCell(rowAttrs, this.propUpdater('rows'), 'pvtAxisContainer pvtVertList pvtRows');\n\n      var outputCell = _react2.default.createElement('td', {\n        className: 'pvtOutput'\n      }, _react2.default.createElement(_PivotTable2.default, (0, _immutabilityHelper2.default)(this.props, {\n        data: {\n          $set: this.materializedInput\n        }\n      })));\n\n      if (horizUnused) {\n        return _react2.default.createElement('table', {\n          className: 'pvtUi'\n        }, _react2.default.createElement('tbody', {\n          onClick: function onClick() {\n            return _this8.setState({\n              openDropdown: false\n            });\n          }\n        }, _react2.default.createElement('tr', null, rendererCell, unusedAttrsCell), _react2.default.createElement('tr', null, aggregatorCell, colAttrsCell), _react2.default.createElement('tr', null, rowAttrsCell, outputCell)));\n      }\n\n      return _react2.default.createElement('table', {\n        className: 'pvtUi'\n      }, _react2.default.createElement('tbody', {\n        onClick: function onClick() {\n          return _this8.setState({\n            openDropdown: false\n          });\n        }\n      }, _react2.default.createElement('tr', null, rendererCell, aggregatorCell, colAttrsCell), _react2.default.createElement('tr', null, unusedAttrsCell, rowAttrsCell, outputCell)));\n    }\n  }]);\n\n  return PivotTableUI;\n}(_react2.default.PureComponent);\n\nPivotTableUI.propTypes = Object.assign({}, _PivotTable2.default.propTypes, {\n  onChange: _propTypes2.default.func.isRequired,\n  hiddenAttributes: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  hiddenFromAggregators: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  hiddenFromDragDrop: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  unusedOrientationCutoff: _propTypes2.default.number,\n  menuLimit: _propTypes2.default.number\n});\nPivotTableUI.defaultProps = Object.assign({}, _PivotTable2.default.defaultProps, {\n  hiddenAttributes: [],\n  hiddenFromAggregators: [],\n  hiddenFromDragDrop: [],\n  unusedOrientationCutoff: 85,\n  menuLimit: 500\n});\nexports.default = PivotTableUI;","map":{"version":3,"sources":["src/PivotTableUI.jsx"],"names":["DraggableAttribute","Component","open","filterText","value","x","e","y","showMenu","Object","values","shown","display","cursor","zIndex","name","length","filtered","valueFilter","addValuesToFilter","removeValuesFromFilter","attrValues","moveFilterBoxToTop","sorter","menuLimit","number","Dropdown","PureComponent","r","PivotTableUI","unusedOrder","zIndices","maxZIndex","openDropdown","nextProps","nextData","materializedInput","recordsProcessed","attr","record","command","key","$set","attribute","$unset","dropdown","items","onChange","classes","group","ghostClass","filter","preventOnFilter","numValsAllowed","rendererName","rendererCell","sortIcons","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","aggregatorCell","i","vals","$splice","unusedAttrs","unusedLength","horizUnused","unusedAttrsCell","colAttrs","colAttrsCell","rowAttrs","rowAttrsCell","outputCell","data","hiddenAttributes","hiddenFromAggregators","hiddenFromDragDrop","unusedOrientationCutoff"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport {PivotData, sortAs, getSort} from './Utilities';\nimport PivotTable from './PivotTable';\nimport Sortable from 'react-sortablejs';\nimport Draggable from 'react-draggable';\n\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\nexport class DraggableAttribute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {open: false, filterText: ''};\n  }\n\n  toggleValue(value) {\n    if (value in this.props.valueFilter) {\n      this.props.removeValuesFromFilter(this.props.name, [value]);\n    } else {\n      this.props.addValuesToFilter(this.props.name, [value]);\n    }\n  }\n\n  matchesFilter(x) {\n    return x\n      .toLowerCase()\n      .trim()\n      .includes(this.state.filterText.toLowerCase().trim());\n  }\n\n  selectOnly(e, value) {\n    e.stopPropagation();\n    this.props.setValuesInFilter(\n      this.props.name,\n      Object.keys(this.props.attrValues).filter(y => y !== value)\n    );\n  }\n\n  getFilterBox() {\n    const showMenu =\n      Object.keys(this.props.attrValues).length < this.props.menuLimit;\n\n    const values = Object.keys(this.props.attrValues);\n    const shown = values\n      .filter(this.matchesFilter.bind(this))\n      .sort(this.props.sorter);\n\n    return (\n      <Draggable handle=\".pvtDragHandle\">\n        <div\n          className=\"pvtFilterBox\"\n          style={{\n            display: 'block',\n            cursor: 'initial',\n            zIndex: this.props.zIndex\n          }}\n          onClick={() => this.props.moveFilterBoxToTop(this.props.name)}\n        >\n          <a onClick={() => this.setState({open: false})} className=\"pvtCloseX\">\n            ×\n          </a>\n          <span className=\"pvtDragHandle\">☰</span>\n          <h4>{this.props.name}</h4>\n\n          {showMenu || <p>(too many values to show)</p>}\n\n          {showMenu && (\n            <p>\n              <input\n                type=\"text\"\n                placeholder=\"Filter values\"\n                className=\"pvtSearch\"\n                value={this.state.filterText}\n                onChange={e =>\n                  this.setState({\n                    filterText: e.target.value,\n                  })\n                }\n              />\n              <br />\n              <a\n                role=\"button\"\n                className=\"pvtButton\"\n                onClick={() =>\n                  this.props.removeValuesFromFilter(\n                    this.props.name,\n                    Object.keys(this.props.attrValues).filter(\n                      this.matchesFilter.bind(this)\n                    )\n                  )\n                }\n              >\n                Select {values.length === shown.length ? 'All' : shown.length}\n              </a>{' '}\n              <a\n                role=\"button\"\n                className=\"pvtButton\"\n                onClick={() =>\n                  this.props.addValuesToFilter(\n                    this.props.name,\n                    Object.keys(this.props.attrValues).filter(\n                      this.matchesFilter.bind(this)\n                    )\n                  )\n                }\n              >\n                Deselect {values.length === shown.length ? 'All' : shown.length}\n              </a>\n            </p>\n          )}\n\n          {showMenu && (\n            <div className=\"pvtCheckContainer\">\n              {shown.map(x => (\n                <p\n                  key={x}\n                  onClick={() => this.toggleValue(x)}\n                  className={x in this.props.valueFilter ? '' : 'selected'}\n                >\n                  <a className=\"pvtOnly\" onClick={e => this.selectOnly(e, x)}>\n                    only\n                  </a>\n                  <a className=\"pvtOnlySpacer\">&nbsp;</a>\n\n                  {x === '' ? <em>null</em> : x}\n                </p>\n              ))}\n            </div>\n          )}\n        </div>\n      </Draggable>\n    );\n  }\n\n  toggleFilterBox() {\n    this.setState({ open: !this.state.open});\n    this.props.moveFilterBoxToTop(this.props.name);\n  }\n\n  render() {\n    const filtered =\n      Object.keys(this.props.valueFilter).length !== 0\n        ? 'pvtFilteredAttribute'\n        : '';\n    return (\n      <li data-id={this.props.name}>\n        <span className={'pvtAttr ' + filtered}>\n          {this.props.name}\n          <span\n            className=\"pvtTriangle\"\n            onClick={this.toggleFilterBox.bind(this)}\n          >\n            {' '}\n            ▾\n          </span>\n        </span>\n\n        {this.state.open ? this.getFilterBox() : null}\n      </li>\n    );\n  }\n}\n\nDraggableAttribute.defaultProps = {\n  valueFilter: {},\n};\n\nDraggableAttribute.propTypes = {\n  name: PropTypes.string.isRequired,\n  addValuesToFilter: PropTypes.func.isRequired,\n  removeValuesFromFilter: PropTypes.func.isRequired,\n  attrValues: PropTypes.objectOf(PropTypes.number).isRequired,\n  valueFilter: PropTypes.objectOf(PropTypes.bool),\n  moveFilterBoxToTop: PropTypes.func.isRequired,\n  sorter: PropTypes.func.isRequired,\n  menuLimit: PropTypes.number,\n  zIndex: PropTypes.number,\n};\n\nexport class Dropdown extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"pvtDropdown\" style={{zIndex: this.props.zIndex}}>\n        <div\n          onClick={e => {\n            e.stopPropagation();\n            this.props.toggle();\n          }}\n          className={\n            'pvtDropdownValue pvtDropdownCurrent ' +\n            (this.props.open ? 'pvtDropdownCurrentOpen' : '')\n          }\n          role=\"button\"\n        >\n          <div className=\"pvtDropdownIcon\">{this.props.open ? '×' : '▾'}</div>\n          {this.props.current || <span>&nbsp;</span>}\n        </div>\n\n        {this.props.open && (\n          <div className=\"pvtDropdownMenu\">\n            {this.props.values.map(r => (\n              <div\n                key={r}\n                role=\"button\"\n                onClick={e => {\n                  e.stopPropagation();\n                  if (this.props.current === r) {\n                    this.props.toggle();\n                  } else {\n                    this.props.setValue(r);\n                  }\n                }}\n                className={\n                  'pvtDropdownValue ' +\n                  (r === this.props.current ? 'pvtDropdownActiveValue' : '')\n                }\n              >\n                {r}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass PivotTableUI extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unusedOrder: [],\n      zIndices: {},\n      maxZIndex: 1000,\n      openDropdown: false,\n    };\n  }\n\n  componentWillMount() {\n    this.materializeInput(this.props.data);\n  }\n\n  componentWillUpdate(nextProps) {\n    this.materializeInput(nextProps.data);\n  }\n\n  materializeInput(nextData) {\n    if (this.data === nextData) {\n      return;\n    }\n    this.data = nextData;\n    const attrValues = {};\n    const materializedInput = [];\n    let recordsProcessed = 0;\n    PivotData.forEachRecord(this.data, this.props.derivedAttributes, function(\n      record\n    ) {\n      materializedInput.push(record);\n      for (const attr of Object.keys(record)) {\n        if (!(attr in attrValues)) {\n          attrValues[attr] = {};\n          if (recordsProcessed > 0) {\n            attrValues[attr].null = recordsProcessed;\n          }\n        }\n      }\n      for (const attr in attrValues) {\n        const value = attr in record ? record[attr] : 'null';\n        if (!(value in attrValues[attr])) {\n          attrValues[attr][value] = 0;\n        }\n        attrValues[attr][value]++;\n      }\n      recordsProcessed++;\n    });\n\n    this.materializedInput = materializedInput;\n    this.attrValues = attrValues;\n  }\n\n  sendPropUpdate(command) {\n    this.props.onChange(update(this.props, command));\n  }\n\n  propUpdater(key) {\n    return value => this.sendPropUpdate({[key]: {$set: value}});\n  }\n\n  setValuesInFilter(attribute, values) {\n    this.sendPropUpdate({\n      valueFilter: {\n        [attribute]: {\n          $set: values.reduce((r, v) => {\n            r[v] = true;\n            return r;\n          }, {}),\n        },\n      },\n    });\n  }\n\n  addValuesToFilter(attribute, values) {\n    if (attribute in this.props.valueFilter) {\n      this.sendPropUpdate({\n        valueFilter: {\n          [attribute]: values.reduce((r, v) => {\n            r[v] = {$set: true};\n            return r;\n          }, {}),\n        },\n      });\n    } else {\n      this.setValuesInFilter(attribute, values);\n    }\n  }\n\n  removeValuesFromFilter(attribute, values) {\n    this.sendPropUpdate({\n      valueFilter: {[attribute]: {$unset: values}},\n    });\n  }\n\n  moveFilterBoxToTop(attribute) {\n    this.setState(\n      update(this.state, {\n        maxZIndex: {$set: this.state.maxZIndex + 1},\n        zIndices: {[attribute]: {$set: this.state.maxZIndex + 1}},\n      })\n    );\n  }\n\n  isOpen(dropdown) {\n    return this.state.openDropdown === dropdown;\n  }\n\n  makeDnDCell(items, onChange, classes) {\n    return (\n      <Sortable\n        options={{\n          group: 'shared',\n          ghostClass: 'pvtPlaceholder',\n          filter: '.pvtFilterBox',\n          preventOnFilter: false,\n        }}\n        tag=\"td\"\n        className={classes}\n        onChange={onChange}\n      >\n        {items.map(x => (\n          <DraggableAttribute\n            name={x}\n            key={x}\n            attrValues={this.attrValues[x]}\n            valueFilter={this.props.valueFilter[x] || {}}\n            sorter={getSort(this.props.sorters, x)}\n            menuLimit={this.props.menuLimit}\n            setValuesInFilter={this.setValuesInFilter.bind(this)}\n            addValuesToFilter={this.addValuesToFilter.bind(this)}\n            moveFilterBoxToTop={this.moveFilterBoxToTop.bind(this)}\n            removeValuesFromFilter={this.removeValuesFromFilter.bind(this)}\n            zIndex={this.state.zIndices[x] || this.state.maxZIndex}\n          />\n        ))}\n      </Sortable>\n    );\n  }\n\n  render() {\n    const numValsAllowed =\n      this.props.aggregators[this.props.aggregatorName]([])().numInputs || 0;\n\n    const rendererName =\n      this.props.rendererName in this.props.renderers\n        ? this.props.rendererName\n        : Object.keys(this.props.renderers)[0];\n\n    const rendererCell = (\n      <td className=\"pvtRenderers\">\n        <Dropdown\n          current={rendererName}\n          values={Object.keys(this.props.renderers)}\n          open={this.isOpen('renderer')}\n          zIndex={this.isOpen('renderer') ? this.state.maxZIndex + 1 : 1}\n          toggle={() =>\n            this.setState({\n              openDropdown: this.isOpen('renderer') ? false : 'renderer',\n            })\n          }\n          setValue={this.propUpdater('rendererName')}\n        />\n      </td>\n    );\n\n    const sortIcons = {\n      key_a_to_z: {\n        rowSymbol: '↕',\n        colSymbol: '↔',\n        next: 'value_a_to_z',\n      },\n      value_a_to_z: {\n        rowSymbol: '↓',\n        colSymbol: '→',\n        next: 'value_z_to_a',\n      },\n      value_z_to_a: {rowSymbol: '↑', colSymbol: '←', next: 'key_a_to_z'},\n    };\n\n    const aggregatorCell = (\n      <td className=\"pvtVals\">\n        <Dropdown\n          current={this.props.aggregatorName}\n          values={Object.keys(this.props.aggregators)}\n          open={this.isOpen('aggregators')}\n          zIndex={this.isOpen('aggregators') ? this.state.maxZIndex + 1 : 1}\n          toggle={() =>\n            this.setState({\n              openDropdown: this.isOpen('aggregators') ? false : 'aggregators',\n            })\n          }\n          setValue={this.propUpdater('aggregatorName')}\n        />\n        <a\n          role=\"button\"\n          className=\"pvtRowOrder\"\n          onClick={() =>\n            this.propUpdater('rowOrder')(sortIcons[this.props.rowOrder].next)\n          }\n        >\n          {sortIcons[this.props.rowOrder].rowSymbol}\n        </a>\n        <a\n          role=\"button\"\n          className=\"pvtColOrder\"\n          onClick={() =>\n            this.propUpdater('colOrder')(sortIcons[this.props.colOrder].next)\n          }\n        >\n          {sortIcons[this.props.colOrder].colSymbol}\n        </a>\n        {numValsAllowed > 0 && <br />}\n        {new Array(numValsAllowed).fill().map((n, i) => [\n          <Dropdown\n            key={i}\n            current={this.props.vals[i]}\n            values={Object.keys(this.attrValues).filter(\n              e =>\n                !this.props.hiddenAttributes.includes(e) &&\n                !this.props.hiddenFromAggregators.includes(e)\n            )}\n            open={this.isOpen(`val${i}`)}\n            zIndex={this.isOpen(`val${i}`) ? this.state.maxZIndex + 1 : 1}\n            toggle={() =>\n              this.setState({\n                openDropdown: this.isOpen(`val${i}`) ? false : `val${i}`,\n              })\n            }\n            setValue={value =>\n              this.sendPropUpdate({\n                vals: {$splice: [[i, 1, value]]},\n              })\n            }\n          />,\n          i + 1 !== numValsAllowed ? <br key={`br${i}`} /> : null,\n        ])}\n      </td>\n    );\n\n    const unusedAttrs = Object.keys(this.attrValues)\n      .filter(\n        e =>\n          !this.props.rows.includes(e) &&\n          !this.props.cols.includes(e) &&\n          !this.props.hiddenAttributes.includes(e) &&\n          !this.props.hiddenFromDragDrop.includes(e)\n      )\n      .sort(sortAs(this.state.unusedOrder));\n\n    const unusedLength = unusedAttrs.reduce((r, e) => r + e.length, 0);\n    const horizUnused = unusedLength < this.props.unusedOrientationCutoff;\n\n    const unusedAttrsCell = this.makeDnDCell(\n      unusedAttrs,\n      order => this.setState({unusedOrder: order}),\n      `pvtAxisContainer pvtUnused ${\n        horizUnused ? 'pvtHorizList' : 'pvtVertList'\n      }`\n    );\n\n    const colAttrs = this.props.cols.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n\n    const colAttrsCell = this.makeDnDCell(\n      colAttrs,\n      this.propUpdater('cols'),\n      'pvtAxisContainer pvtHorizList pvtCols'\n    );\n\n    const rowAttrs = this.props.rows.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n    const rowAttrsCell = this.makeDnDCell(\n      rowAttrs,\n      this.propUpdater('rows'),\n      'pvtAxisContainer pvtVertList pvtRows'\n    );\n    const outputCell = (\n      <td className=\"pvtOutput\">\n        <PivotTable\n          {...update(this.props, {\n            data: {$set: this.materializedInput},\n          })}\n        />\n      </td>\n    );\n\n    if (horizUnused) {\n      return (\n        <table className=\"pvtUi\">\n          <tbody onClick={() => this.setState({openDropdown: false})}>\n            <tr>\n              {rendererCell}\n              {unusedAttrsCell}\n            </tr>\n            <tr>\n              {aggregatorCell}\n              {colAttrsCell}\n            </tr>\n            <tr>\n              {rowAttrsCell}\n              {outputCell}\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <table className=\"pvtUi\">\n        <tbody onClick={() => this.setState({openDropdown: false})}>\n          <tr>\n            {rendererCell}\n            {aggregatorCell}\n            {colAttrsCell}\n          </tr>\n          <tr>\n            {unusedAttrsCell}\n            {rowAttrsCell}\n            {outputCell}\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPivotTableUI.propTypes = Object.assign({}, PivotTable.propTypes, {\n  onChange: PropTypes.func.isRequired,\n  hiddenAttributes: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromAggregators: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromDragDrop: PropTypes.arrayOf(PropTypes.string),\n  unusedOrientationCutoff: PropTypes.number,\n  menuLimit: PropTypes.number,\n});\n\nPivotTableUI.defaultProps = Object.assign({}, PivotTable.defaultProps, {\n  hiddenAttributes: [],\n  hiddenFromAggregators: [],\n  hiddenFromDragDrop: [],\n  unusedOrientationCutoff: 85,\n  menuLimit: 500,\n});\n\nexport default PivotTableUI;\n"]},"metadata":{},"sourceType":"script"}