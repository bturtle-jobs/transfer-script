{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\src\\\\main\\\\content\\\\include\\\\C0202002_tab07_tab01_tab03.js\";\nimport React, { Component } from 'react';\nimport { OwpButton, OwpSearchDateField, OwpSearchSelectField, OwpSearchTextField, OwpTextField, OwpTreeGrid } from 'owp/wrapper';\nimport Formsy from 'formsy-react';\nimport * as TGEvent from 'owp/TGEvent';\nimport moment from 'moment';\nimport { query } from 'owp/api';\nimport { setGridData, setRowAttribute } from 'main/GridUtill';\n\nvar Page = /*#__PURE__*/function (_Component) {\n  _inherits(Page, _Component);\n\n  var _super = _createSuper(Page);\n\n  function Page(props) {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _super.call(this, props); //TODO:load this from parent\n\n    _this.loadActiveGrid = function () {\n      //TODO:using another service\n      query({\n        url: '/listOWP_MBR_PROCESS_MAINActiveByUnitProcessID',\n        params: {\n          jsondata: JSON.stringify({\n            'OWP_MBR_PROCESS_MAIN.UNITPROCESSID': _this.state.UNITPROCESSID + ''\n          })\n        }\n      }).then(function (res) {\n        console.log(res);\n\n        if (res && res.length > 0) {\n          setGridData('C0202012', res);\n        }\n\n        _this.canEdit();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.canEdit = function () {\n      var G = TGEvent.getGridByID('C0202012');\n\n      var _rows = Object.values(G['Rows']).filter(function (item) {\n        return item.Kind == 'Data';\n      });\n\n      _rows.some(function (row) {\n        console.log(row);\n        var targetColumnName = 'OWP_MBR_PROCESS_MAIN.KPPCPP_ACTIVE';\n        setRowAttribute('C0202012', row, targetColumnName, 'BoolIcon', '4', 1);\n      });\n    };\n\n    _this.state = {\n      UNITPROCESSID: 140\n    };\n    return _this;\n  }\n  /**\r\n   * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n   * @param {Event} event 발생한 이벤트 객체\r\n   * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n   */\n\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _showApprovalDialog = this.showApprovalDialog;\n      this.loadActiveGrid();\n    } //날짜 디폴드값 설정 함수\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        style: {\n          padding: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(OwpTreeGrid, {\n        id: \"C0202012\",\n        LayoutUrl: \"assets/data/C0202012Def.xml\",\n        DataUrl: '/assets/data/C0202000Data.xml',\n        width: \"100%\" // height=\"21vh\"\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/src/main/content/include/C0202002_tab07_tab01_tab03.js"],"names":["React","Component","OwpButton","OwpSearchDateField","OwpSearchSelectField","OwpSearchTextField","OwpTextField","OwpTreeGrid","Formsy","TGEvent","moment","query","setGridData","setRowAttribute","Page","props","loadActiveGrid","url","params","jsondata","JSON","stringify","state","UNITPROCESSID","then","res","console","log","length","canEdit","catch","err","G","getGridByID","_rows","Object","values","filter","item","Kind","some","row","targetColumnName","_showApprovalDialog","showApprovalDialog","width","padding"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,SADJ,EAEIC,kBAFJ,EAGIC,oBAHJ,EAIIC,kBAJJ,EAKIC,YALJ,EAMIC,WANJ,QAOO,aAPP;AAQA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,gBAA7C;;IAEMC,I;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN,EADe,CAEf;;AAFe,UAkBnBC,cAlBmB,GAkBF,YAAM;AACnB;AACAL,MAAAA,KAAK,CAAC;AACFM,QAAAA,GAAG,EAAE,gDADH;AAEFC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrB,kDAAsC,MAAKC,KAAL,CAAWC,aAAX,GAA2B;AAD5C,WAAf;AADN;AAFN,OAAD,CAAL,CAQKC,IARL,CAQU,UAACC,GAAD,EAAS;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAIA,GAAG,IAAIA,GAAG,CAACG,MAAJ,GAAa,CAAxB,EAA2B;AACvBhB,UAAAA,WAAW,CAAC,UAAD,EAAaa,GAAb,CAAX;AACH;;AACD,cAAKI,OAAL;AACH,OAdL,EAeKC,KAfL,CAeW,UAACC,GAAD,EAAS;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,OAjBL;AAkBH,KAtCkB;;AAAA,UAwCnBF,OAxCmB,GAwCT,YAAM;AACZ,UAAMG,CAAC,GAAGvB,OAAO,CAACwB,WAAR,CAAoB,UAApB,CAAV;;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcJ,CAAC,CAAC,MAAD,CAAf,EAAyBK,MAAzB,CAAgC,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,IAAL,IAAa,MAAvB;AAAA,OAAhC,CAAd;;AACAL,MAAAA,KAAK,CAACM,IAAN,CAAW,UAACC,GAAD,EAAS;AAChBf,QAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACA,YAAIC,gBAAgB,GAAG,oCAAvB;AACA7B,QAAAA,eAAe,CAAC,UAAD,EAAa4B,GAAb,EAAkBC,gBAAlB,EAAoC,UAApC,EAAgD,GAAhD,EAAqD,CAArD,CAAf;AACH,OAJD;AAKH,KAhDkB;;AAGf,UAAKpB,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AADN,KAAb;AAHe;AAMlB;AACD;AACJ;AACA;AACA;AACA;;;;;WACI,6BAAoB;AAChB,UAAMoB,mBAAmB,GAAG,KAAKC,kBAAjC;AACA,WAAK5B,cAAL;AACH,K,CACD;;;;WAkCA,kBAAS;AACL,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAE;AAAE6B,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AACI,QAAA,EAAE,EAAC,UADP;AAEI,QAAA,SAAS,EAAC,6BAFd;AAGI,QAAA,OAAO,EAAE,+BAHb;AAII,QAAA,KAAK,EAAC,MAJV,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ,CADJ;AAiBH;;;;EArEc7C,S;;AAwEnB,eAAea,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    OwpButton,\r\n    OwpSearchDateField,\r\n    OwpSearchSelectField,\r\n    OwpSearchTextField,\r\n    OwpTextField,\r\n    OwpTreeGrid,\r\n} from 'owp/wrapper';\r\nimport Formsy from 'formsy-react';\r\nimport * as TGEvent from 'owp/TGEvent';\r\nimport moment from 'moment';\r\nimport { query } from 'owp/api';\r\nimport { setGridData, setRowAttribute } from 'main/GridUtill';\r\n\r\nclass Page extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //TODO:load this from parent\r\n        this.state = {\r\n            UNITPROCESSID: 140,\r\n        };\r\n    }\r\n    /**\r\n     * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n     * @param {Event} event 발생한 이벤트 객체\r\n     * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n     */\r\n    componentDidMount() {\r\n        const _showApprovalDialog = this.showApprovalDialog;\r\n        this.loadActiveGrid();\r\n    }\r\n    //날짜 디폴드값 설정 함수\r\n\r\n    loadActiveGrid = () => {\r\n        //TODO:using another service\r\n        query({\r\n            url: '/listOWP_MBR_PROCESS_MAINActiveByUnitProcessID',\r\n            params: {\r\n                jsondata: JSON.stringify({\r\n                    'OWP_MBR_PROCESS_MAIN.UNITPROCESSID': this.state.UNITPROCESSID + '',\r\n                }),\r\n            },\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res && res.length > 0) {\r\n                    setGridData('C0202012', res);\r\n                }\r\n                this.canEdit();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    canEdit = () => {\r\n        const G = TGEvent.getGridByID('C0202012');\r\n        const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n        _rows.some((row) => {\r\n            console.log(row);\r\n            let targetColumnName = 'OWP_MBR_PROCESS_MAIN.KPPCPP_ACTIVE';\r\n            setRowAttribute('C0202012', row, targetColumnName, 'BoolIcon', '4', 1);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\" style={{ padding: '0' }}>\r\n                            <OwpTreeGrid\r\n                                id=\"C0202012\"\r\n                                LayoutUrl=\"assets/data/C0202012Def.xml\"\r\n                                DataUrl={'/assets/data/C0202000Data.xml'}\r\n                                width=\"100%\"\r\n                                // height=\"21vh\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}