{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\wrapper\\\\OwpSelectField.js\";\nimport { Checkbox, FilledInput, FormControl, FormHelperText, Input, InputLabel, ListItemText, MenuItem, OutlinedInput, Select } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport { get, isEmpty, isEqual, join, noop, pick, toString } from 'lodash';\nimport { query } from 'owp/api';\nimport { depr } from 'owp/debug';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nvar SELECTED_ALL = 'SELECTED_ALL';\nvar VALUE_ALL = '@@@@@@';\nvar VALUE_ALL_TEXT = '전체';\n\nvar styles = function styles() {\n  return {\n    menuItem: {\n      justifyContent: 'center'\n    }\n  };\n};\n\nfunction usePreviousValue(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nfunction makeEvent(name, value) {\n  var changedEvent = new Event('change', {\n    bubbles: true\n  });\n  Object.defineProperty(changedEvent, 'target', {\n    writable: false,\n    value: {\n      name: name,\n      value: value\n    }\n  });\n  return changedEvent;\n}\n\nfunction OwpSelectField(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      classes = _ref.classes,\n      name = _ref.name,\n      label = _ref.label,\n      isMulti = _ref.isMulti,\n      required = _ref.required,\n      useAll = _ref.useAll,\n      useCheckboxMenuWithMenu = _ref.useCheckboxMenuWithMenu,\n      useReset = _ref.useReset,\n      isSearch = _ref.isSearch,\n      isReset = _ref.isReset,\n      disabled = _ref.disabled,\n      groupId = _ref.groupId,\n      commonCodes = _ref.commonCodes,\n      queryOptions = _ref.query,\n      mapper = _ref.mapper,\n      items = _ref.items,\n      options = _ref.options,\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      removeDefaultOption = _ref.removeDefaultOption,\n      emptyOptionLabel = _ref.emptyOptionLabel,\n      errorMessage = _ref.errorMessage,\n      onChange = _ref.onChange,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"classes\", \"name\", \"label\", \"isMulti\", \"required\", \"useAll\", \"useCheckboxMenuWithMenu\", \"useReset\", \"isSearch\", \"isReset\", \"disabled\", \"groupId\", \"commonCodes\", \"query\", \"mapper\", \"items\", \"options\", \"defaultValue\", \"value\", \"removeDefaultOption\", \"emptyOptionLabel\", \"errorMessage\", \"onChange\"]);\n\n  var useAllSingle = !isMulti && useAll;\n  var useAllMulti = isMulti && useAll;\n\n  var _useState = useState(useAllSingle ? VALUE_ALL : defaultValue || value),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentValue = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentOptions = _useState4[0],\n      setOptions = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentOptionsConvToObj = _useState6[0],\n      setOptionsConvToObj = _useState6[1];\n\n  var defaultValueRef = useRef(useAllSingle ? VALUE_ALL : useAllMulti ? null : defaultValue || value);\n  var selectRef = useRef(null);\n  var inputRef = useRef(null);\n  var prevQueryOptions = usePreviousValue(queryOptions);\n  var prevValue = usePreviousValue(value) || '';\n  var selectedValue = useMemo(function () {\n    return isMulti ? isEmpty(currentValue) ? [] : typeof currentValue === 'string' ? currentValue.indexOf(',') === -1 ? [currentValue] : currentValue.split(',') : currentValue : currentValue;\n  }, [currentValue]);\n  var useSelectedAll = useMemo(function () {\n    if (useAllMulti) {\n      return selectedValue.length === currentOptions.length;\n    }\n\n    return false;\n  }, [useAllMulti, selectedValue, currentOptions]);\n  useEffect(function () {\n    if (required && useAllSingle) {\n      inputRef.current.value = VALUE_ALL;\n      inputRef.current.setCustomValidity('');\n    }\n  }, []);\n  useEffect(function () {\n    if (!isSearch && !isEqual(prevValue, value)) {\n      setValue(value);\n    }\n  }, [isSearch, prevValue, value]);\n  useEffect(function () {\n    try {\n      if (!isEmpty(items) && !isEqual(currentOptions, items)) {\n        depr('[OwpSelectField]: `items` prop은 deprecate 되었습니다. `options` prop을 사용 바랍니다.');\n        setOptions(items);\n        return;\n      }\n\n      if (!isEmpty(options) && !isEqual(currentOptions, options)) {\n        setOptions(options);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [items, options]);\n  useEffect(function () {\n    if (!!groupId && !isEmpty(commonCodes) && isEmpty(currentOptions)) {\n      setOptions(commonCodes[groupId]);\n    }\n  }, [commonCodes]);\n  useEffect(function () {\n    if (!isEmpty(get(queryOptions, 'url')) && !isEqual(prevQueryOptions, queryOptions)) {\n      query(queryOptions).then(function () {\n        var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        return setOptions(data.map(function (item) {\n          return {\n            label: item[get(mapper, 'label', 'label')],\n            value: toString(item[toString(get(mapper, 'value', 'value'))] || ''),\n            data: item\n          };\n        }));\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }, [queryOptions, prevQueryOptions]);\n  useEffect(function () {\n    if (useReset && isReset) {\n      handleChange(makeEvent(name, defaultValueRef.current));\n    }\n  }, [useReset, isReset]);\n  useEffect(function () {\n    if (useAllMulti && !isEmpty(currentOptions) && isEmpty(defaultValueRef.current)) {\n      var values = currentOptions.map(function (_ref2) {\n        var value = _ref2.value;\n        return value;\n      });\n      defaultValueRef.current = values;\n      setValue(values);\n\n      if (onChange instanceof Function) {\n        var joindValue = join(values, ',');\n        onChange(makeEvent(name, joindValue), {\n          value: joindValue,\n          data: currentOptions\n        });\n      }\n\n      if (required) {\n        inputRef.current.value = values;\n        inputRef.current.setCustomValidity('');\n      }\n    }\n  }, [useAllMulti, currentOptions]);\n\n  var handleChange = function handleChange(evt) {\n    var isSelectedAllOfMulti = isMulti && evt.target.value.includes(SELECTED_ALL);\n    var changedValue = isMulti ? isSelectedAllOfMulti ? useSelectedAll ? '' : join(currentOptions.map(function (_ref3) {\n      var value = _ref3.value;\n      return value;\n    }), ',') : isEmpty(evt.target.value) ? '' : join(evt.target.value, ',') : evt.target.value;\n\n    if (onChange instanceof Function) {\n      var changedEvt = _objectSpread(_objectSpread({}, evt), {}, {\n        target: _objectSpread(_objectSpread({}, evt.target), {}, {\n          value: changedValue\n        })\n      });\n\n      var selectedOptionData = currentOptions.filter(function (_ref4) {\n        var value = _ref4.value;\n        return evt.target.value.includes(value);\n      });\n      onChange(changedEvt, {\n        value: changedValue,\n        data: isMulti ? selectedOptionData : get(selectedOptionData, '0', {})\n      });\n    }\n\n    if (required) {\n      inputRef.current.value = changedValue;\n      !isEmpty(changedValue) && inputRef.current.setCustomValidity('');\n    }\n\n    setValue(isSelectedAllOfMulti ? changedValue : evt.target.value);\n  };\n\n  var getInput = function getInput() {\n    switch (restProps.variant) {\n      case 'outlined':\n        return /*#__PURE__*/React.createElement(OutlinedInput, {\n          labelWidth: label.length * 8,\n          id: name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 24\n          }\n        });\n\n      case 'filled':\n        return /*#__PURE__*/React.createElement(FilledInput, {\n          id: name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(Input, {\n          id: name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  var selectProps = pick(restProps, ['autoWidth', 'children', 'classes', 'displayEmpty', 'input', 'inputProps', 'MenuProps', 'native', 'onClose', 'onOpen', 'open', 'renderValue', 'SelectDisplayProps', 'variant', 'style']);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    error: Boolean(errorMessage),\n    required: required,\n    className: classNames(className, 'min-w-160', {\n      'mr-20': isSearch\n    }),\n    variant: restProps.variant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, label && /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 23\n    }\n  }, label), /*#__PURE__*/React.createElement(Select, Object.assign({}, selectProps, {\n    renderValue: function renderValue(selected) {\n      return (isMulti ? selected : [selected]).map(function (v) {\n        return v === VALUE_ALL ? VALUE_ALL_TEXT : get(currentOptions.find(function () {\n          var o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return o.value === v;\n        }), 'label');\n      }).join(', ');\n    },\n    name: name,\n    value: selectedValue,\n    multiple: isMulti,\n    onChange: handleChange,\n    input: getInput(),\n    inputProps: {\n      inputRef: selectRef\n    },\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }), useAllMulti && /*#__PURE__*/React.createElement(MenuItem, {\n    classes: {\n      root: classes.menuItem\n    },\n    value: SELECTED_ALL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, \"\".concat(VALUE_ALL_TEXT, \"\\uC120\\uD0DD \").concat(useSelectedAll ? '해제' : '')), (isMulti || removeDefaultOption ? currentOptions || [] : [useAll ? {\n    label: VALUE_ALL_TEXT,\n    value: VALUE_ALL\n  } : {\n    label: emptyOptionLabel,\n    value: ''\n  }].concat(_toConsumableArray(currentOptions || []))).map(function (item, index) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"owp-select-item-\".concat(index),\n      disabled: Boolean(item.disabled),\n      value: item.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, useCheckboxMenuWithMenu && !isEmpty(item.value) && /*#__PURE__*/React.createElement(Checkbox, {\n      checked: selectedValue.indexOf(item.value) > -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: item.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    }));\n  })), required && /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    tabIndex: -1,\n    autoComplete: \"off\",\n    style: {\n      opacity: 0,\n      height: 0\n    },\n    value: get(inputRef.current, 'value', selectedValue),\n    onFocus: function onFocus() {\n      return selectRef.current.focus();\n    },\n    onChange: noop,\n    onInvalid: function onInvalid(e) {\n      e.target.setCustomValidity('목록에서 항목을 선택하세요.');\n    },\n    required: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }), Boolean(errorMessage) && /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 39\n    }\n  }, errorMessage));\n}\n\nOwpSelectField.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.any,\n  query: PropTypes.shape({\n    url: PropTypes.string,\n    params: PropTypes.object\n  }),\n  mapper: PropTypes.object,\n  useCheckboxMenuWithMenu: PropTypes.bool,\n  useAll: PropTypes.bool,\n  items: PropTypes.array,\n  options: PropTypes.array,\n  defaultValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.number]),\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.number]),\n  groupId: PropTypes.string,\n  commonCodes: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  isMulti: PropTypes.bool,\n  required: PropTypes.bool,\n  useReset: PropTypes.bool,\n  isReset: PropTypes.bool,\n  isSearch: PropTypes.bool,\n  disabled: PropTypes.bool,\n  removeDefaultOption: PropTypes.bool,\n  emptyOptionLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  errorMessage: PropTypes.string,\n  onChange: PropTypes.func\n};\nOwpSelectField.defaultProps = {\n  className: '',\n  classes: {},\n  name: 'owp-select-field',\n  value: '',\n  query: {},\n  mapper: {\n    label: 'label',\n    value: 'value'\n  },\n  groupId: '',\n  items: [],\n  options: [],\n  commonCodes: [],\n  isMulti: false,\n  required: false,\n  useReset: false,\n  isReset: false,\n  useAll: false,\n  useCheckboxMenuWithMenu: true,\n  isSearch: false,\n  disabled: false,\n  removeDefaultOption: false,\n  emptyOptionLabel: '',\n  errorMessage: '',\n  onChange: function onChange(event, value) {},\n  setValue: function setValue() {}\n};\n\nfunction mapStateToProps(_ref5) {\n  var owp = _ref5.owp,\n      auth = _ref5.auth;\n  return {\n    isReset: owp.wrapper.isReset,\n    commonCodes: get(auth, 'common.codes')\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(OwpSelectField));","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/wrapper/OwpSelectField.js"],"names":["Checkbox","FilledInput","FormControl","FormHelperText","Input","InputLabel","ListItemText","MenuItem","OutlinedInput","Select","withStyles","classNames","get","isEmpty","isEqual","join","noop","pick","toString","query","depr","PropTypes","React","useEffect","useMemo","useRef","useState","connect","SELECTED_ALL","VALUE_ALL","VALUE_ALL_TEXT","styles","menuItem","justifyContent","usePreviousValue","value","ref","current","makeEvent","name","changedEvent","Event","bubbles","Object","defineProperty","writable","OwpSelectField","className","classes","label","isMulti","required","useAll","useCheckboxMenuWithMenu","useReset","isSearch","isReset","disabled","groupId","commonCodes","queryOptions","mapper","items","options","defaultValue","removeDefaultOption","emptyOptionLabel","errorMessage","onChange","restProps","useAllSingle","useAllMulti","currentValue","setValue","currentOptions","setOptions","currentOptionsConvToObj","setOptionsConvToObj","defaultValueRef","selectRef","inputRef","prevQueryOptions","prevValue","selectedValue","indexOf","split","useSelectedAll","length","setCustomValidity","error","console","then","data","map","item","catch","handleChange","values","Function","joindValue","evt","isSelectedAllOfMulti","target","includes","changedValue","changedEvt","selectedOptionData","filter","getInput","variant","selectProps","Boolean","selected","v","find","o","root","index","opacity","height","focus","e","propTypes","string","any","shape","url","params","object","bool","array","oneOfType","number","node","func","defaultProps","event","mapStateToProps","owp","auth","wrapper"],"mappings":";;;;;AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,KALJ,EAMIC,UANJ,EAOIC,YAPJ,EAQIC,QARJ,EASIC,aATJ,EAUIC,MAVJ,QAWO,mBAXP;AAYA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,IAAtC,EAA4CC,IAA5C,EAAkDC,QAAlD,QAAkE,QAAlE;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,IAAMC,YAAY,GAAG,cAArB;AACA,IAAMC,SAAS,GAAG,QAAlB;AACA,IAAMC,cAAc,GAAG,IAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SAAO;AAClBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,cAAc,EAAE;AADV;AADQ,GAAP;AAAA,CAAf;;AAKA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,MAAMC,GAAG,GAAGX,MAAM,EAAlB;AACAF,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACH,GAFQ,CAAT;AAGA,SAAOC,GAAG,CAACC,OAAX;AACH;;AAED,SAASC,SAAT,CAAmBC,IAAnB,EAAyBJ,KAAzB,EAAgC;AAC5B,MAAMK,YAAY,GAAG,IAAIC,KAAJ,CAAU,QAAV,EAAoB;AACrCC,IAAAA,OAAO,EAAE;AAD4B,GAApB,CAArB;AAIAC,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,YAAtB,EAAoC,QAApC,EAA8C;AAC1CK,IAAAA,QAAQ,EAAE,KADgC;AAE1CV,IAAAA,KAAK,EAAE;AACHI,MAAAA,IAAI,EAAJA,IADG;AAEHJ,MAAAA,KAAK,EAALA;AAFG;AAFmC,GAA9C;AAQA,SAAOK,YAAP;AACH;;AAED,SAASM,cAAT,OA0BG;AAAA;;AAAA,MAzBCC,SAyBD,QAzBCA,SAyBD;AAAA,MAxBCC,OAwBD,QAxBCA,OAwBD;AAAA,MAvBCT,IAuBD,QAvBCA,IAuBD;AAAA,MAtBCU,KAsBD,QAtBCA,KAsBD;AAAA,MArBCC,OAqBD,QArBCA,OAqBD;AAAA,MApBCC,QAoBD,QApBCA,QAoBD;AAAA,MAnBCC,MAmBD,QAnBCA,MAmBD;AAAA,MAlBCC,uBAkBD,QAlBCA,uBAkBD;AAAA,MAjBCC,QAiBD,QAjBCA,QAiBD;AAAA,MAhBCC,QAgBD,QAhBCA,QAgBD;AAAA,MAfCC,OAeD,QAfCA,OAeD;AAAA,MAdCC,QAcD,QAdCA,QAcD;AAAA,MAbCC,OAaD,QAbCA,OAaD;AAAA,MAZCC,WAYD,QAZCA,WAYD;AAAA,MAXQC,YAWR,QAXCzC,KAWD;AAAA,MAVC0C,MAUD,QAVCA,MAUD;AAAA,MATCC,KASD,QATCA,KASD;AAAA,MARCC,OAQD,QARCA,OAQD;AAAA,MAPCC,YAOD,QAPCA,YAOD;AAAA,MANC7B,KAMD,QANCA,KAMD;AAAA,MALC8B,mBAKD,QALCA,mBAKD;AAAA,MAJCC,gBAID,QAJCA,gBAID;AAAA,MAHCC,YAGD,QAHCA,YAGD;AAAA,MAFCC,QAED,QAFCA,QAED;AAAA,MADIC,SACJ;;AACC,MAAMC,YAAY,GAAG,CAACpB,OAAD,IAAYE,MAAjC;AACA,MAAMmB,WAAW,GAAGrB,OAAO,IAAIE,MAA/B;;AAFD,kBAIkC1B,QAAQ,CAAC4C,YAAY,GAAGzC,SAAH,GAAemC,YAAY,IAAI7B,KAA5C,CAJ1C;AAAA;AAAA,MAIQqC,YAJR;AAAA,MAIsBC,QAJtB;;AAAA,mBAKsC/C,QAAQ,CAAC,EAAD,CAL9C;AAAA;AAAA,MAKQgD,cALR;AAAA,MAKwBC,UALxB;;AAAA,mBAMwDjD,QAAQ,CAAC,EAAD,CANhE;AAAA;AAAA,MAMQkD,uBANR;AAAA,MAMiCC,mBANjC;;AAQC,MAAMC,eAAe,GAAGrD,MAAM,CAC1B6C,YAAY,GAAGzC,SAAH,GAAe0C,WAAW,GAAG,IAAH,GAAUP,YAAY,IAAI7B,KADtC,CAA9B;AAGA,MAAM4C,SAAS,GAAGtD,MAAM,CAAC,IAAD,CAAxB;AACA,MAAMuD,QAAQ,GAAGvD,MAAM,CAAC,IAAD,CAAvB;AAEA,MAAMwD,gBAAgB,GAAG/C,gBAAgB,CAAC0B,YAAD,CAAzC;AACA,MAAMsB,SAAS,GAAGhD,gBAAgB,CAACC,KAAD,CAAhB,IAA2B,EAA7C;AAEA,MAAMgD,aAAa,GAAG3D,OAAO,CAAC,YAAM;AAChC,WAAO0B,OAAO,GACRrC,OAAO,CAAC2D,YAAD,CAAP,GACI,EADJ,GAEI,OAAOA,YAAP,KAAwB,QAAxB,GACAA,YAAY,CAACY,OAAb,CAAqB,GAArB,MAA8B,CAAC,CAA/B,GACI,CAACZ,YAAD,CADJ,GAEIA,YAAY,CAACa,KAAb,CAAmB,GAAnB,CAHJ,GAIAb,YAPI,GAQRA,YARN;AASH,GAV4B,EAU1B,CAACA,YAAD,CAV0B,CAA7B;AAYA,MAAMc,cAAc,GAAG9D,OAAO,CAAC,YAAM;AACjC,QAAI+C,WAAJ,EAAiB;AACb,aAAOY,aAAa,CAACI,MAAd,KAAyBb,cAAc,CAACa,MAA/C;AACH;;AAED,WAAO,KAAP;AACH,GAN6B,EAM3B,CAAChB,WAAD,EAAcY,aAAd,EAA6BT,cAA7B,CAN2B,CAA9B;AAQAnD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI4B,QAAQ,IAAImB,YAAhB,EAA8B;AAC1BU,MAAAA,QAAQ,CAAC3C,OAAT,CAAiBF,KAAjB,GAAyBN,SAAzB;AACAmD,MAAAA,QAAQ,CAAC3C,OAAT,CAAiBmD,iBAAjB,CAAmC,EAAnC;AACH;AACJ,GALQ,EAKN,EALM,CAAT;AAOAjE,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACgC,QAAD,IAAa,CAACzC,OAAO,CAACoE,SAAD,EAAY/C,KAAZ,CAAzB,EAA6C;AACzCsC,MAAAA,QAAQ,CAACtC,KAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACoB,QAAD,EAAW2B,SAAX,EAAsB/C,KAAtB,CAJM,CAAT;AAMAZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI;AACA,UAAI,CAACV,OAAO,CAACiD,KAAD,CAAR,IAAmB,CAAChD,OAAO,CAAC4D,cAAD,EAAiBZ,KAAjB,CAA/B,EAAwD;AACpD1C,QAAAA,IAAI,CACA,2EADA,CAAJ;AAGAuD,QAAAA,UAAU,CAACb,KAAD,CAAV;AACA;AACH;;AAED,UAAI,CAACjD,OAAO,CAACkD,OAAD,CAAR,IAAqB,CAACjD,OAAO,CAAC4D,cAAD,EAAiBX,OAAjB,CAAjC,EAA4D;AACxDY,QAAAA,UAAU,CAACZ,OAAD,CAAV;AACH;AACJ,KAZD,CAYE,OAAO0B,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,GAhBQ,EAgBN,CAAC3B,KAAD,EAAQC,OAAR,CAhBM,CAAT;AAkBAxC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAAC,CAACmC,OAAF,IAAa,CAAC7C,OAAO,CAAC8C,WAAD,CAArB,IAAsC9C,OAAO,CAAC6D,cAAD,CAAjD,EAAmE;AAC/DC,MAAAA,UAAU,CAAChB,WAAW,CAACD,OAAD,CAAZ,CAAV;AACH;AACJ,GAJQ,EAIN,CAACC,WAAD,CAJM,CAAT;AAMApC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACV,OAAO,CAACD,GAAG,CAACgD,YAAD,EAAe,KAAf,CAAJ,CAAR,IAAsC,CAAC9C,OAAO,CAACmE,gBAAD,EAAmBrB,YAAnB,CAAlD,EAAoF;AAChFzC,MAAAA,KAAK,CAACyC,YAAD,CAAL,CACK+B,IADL,CACU;AAAA,YAACC,IAAD,uEAAQ,EAAR;AAAA,eACFjB,UAAU,CACNiB,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD;AAAA,iBAAW;AAChB7C,YAAAA,KAAK,EAAE6C,IAAI,CAAClF,GAAG,CAACiD,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAJ,CADK;AAEhB1B,YAAAA,KAAK,EAAEjB,QAAQ,CAAC4E,IAAI,CAAC5E,QAAQ,CAACN,GAAG,CAACiD,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAJ,CAAT,CAAJ,IAAiD,EAAlD,CAFC;AAGhB+B,YAAAA,IAAI,EAAEE;AAHU,WAAX;AAAA,SAAT,CADM,CADR;AAAA,OADV,EAUKC,KAVL,CAUW,UAACN,KAAD;AAAA,eAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,OAVX;AAWH;AACJ,GAdQ,EAcN,CAAC7B,YAAD,EAAeqB,gBAAf,CAdM,CAAT;AAgBA1D,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI+B,QAAQ,IAAIE,OAAhB,EAAyB;AACrBwC,MAAAA,YAAY,CAAC1D,SAAS,CAACC,IAAD,EAAOuC,eAAe,CAACzC,OAAvB,CAAV,CAAZ;AACH;AACJ,GAJQ,EAIN,CAACiB,QAAD,EAAWE,OAAX,CAJM,CAAT;AAMAjC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIgD,WAAW,IAAI,CAAC1D,OAAO,CAAC6D,cAAD,CAAvB,IAA2C7D,OAAO,CAACiE,eAAe,CAACzC,OAAjB,CAAtD,EAAiF;AAC7E,UAAM4D,MAAM,GAAGvB,cAAc,CAACmB,GAAf,CAAmB;AAAA,YAAG1D,KAAH,SAAGA,KAAH;AAAA,eAAeA,KAAf;AAAA,OAAnB,CAAf;AACA2C,MAAAA,eAAe,CAACzC,OAAhB,GAA0B4D,MAA1B;AACAxB,MAAAA,QAAQ,CAACwB,MAAD,CAAR;;AAEA,UAAI7B,QAAQ,YAAY8B,QAAxB,EAAkC;AAC9B,YAAMC,UAAU,GAAGpF,IAAI,CAACkF,MAAD,EAAS,GAAT,CAAvB;AACA7B,QAAAA,QAAQ,CAAC9B,SAAS,CAACC,IAAD,EAAO4D,UAAP,CAAV,EAA8B;AAAEhE,UAAAA,KAAK,EAAEgE,UAAT;AAAqBP,UAAAA,IAAI,EAAElB;AAA3B,SAA9B,CAAR;AACH;;AAED,UAAIvB,QAAJ,EAAc;AACV6B,QAAAA,QAAQ,CAAC3C,OAAT,CAAiBF,KAAjB,GAAyB8D,MAAzB;AACAjB,QAAAA,QAAQ,CAAC3C,OAAT,CAAiBmD,iBAAjB,CAAmC,EAAnC;AACH;AACJ;AACJ,GAhBQ,EAgBN,CAACjB,WAAD,EAAcG,cAAd,CAhBM,CAAT;;AAkBA,MAAMsB,YAAY,GAAG,SAAfA,YAAe,CAACI,GAAD,EAAS;AAC1B,QAAMC,oBAAoB,GAAGnD,OAAO,IAAIkD,GAAG,CAACE,MAAJ,CAAWnE,KAAX,CAAiBoE,QAAjB,CAA0B3E,YAA1B,CAAxC;AAEA,QAAM4E,YAAY,GAAGtD,OAAO,GACtBmD,oBAAoB,GAChBf,cAAc,GACV,EADU,GAEVvE,IAAI,CACA2D,cAAc,CAACmB,GAAf,CAAmB;AAAA,UAAG1D,KAAH,SAAGA,KAAH;AAAA,aAAeA,KAAf;AAAA,KAAnB,CADA,EAEA,GAFA,CAHQ,GAOhBtB,OAAO,CAACuF,GAAG,CAACE,MAAJ,CAAWnE,KAAZ,CAAP,GACA,EADA,GAEApB,IAAI,CAACqF,GAAG,CAACE,MAAJ,CAAWnE,KAAZ,EAAmB,GAAnB,CAVc,GAWtBiE,GAAG,CAACE,MAAJ,CAAWnE,KAXjB;;AAaA,QAAIiC,QAAQ,YAAY8B,QAAxB,EAAkC;AAC9B,UAAMO,UAAU,mCACTL,GADS;AAEZE,QAAAA,MAAM,kCACCF,GAAG,CAACE,MADL;AAEFnE,UAAAA,KAAK,EAAEqE;AAFL;AAFM,QAAhB;;AAOA,UAAME,kBAAkB,GAAGhC,cAAc,CAACiC,MAAf,CAAsB;AAAA,YAAGxE,KAAH,SAAGA,KAAH;AAAA,eAC7CiE,GAAG,CAACE,MAAJ,CAAWnE,KAAX,CAAiBoE,QAAjB,CAA0BpE,KAA1B,CAD6C;AAAA,OAAtB,CAA3B;AAIAiC,MAAAA,QAAQ,CAACqC,UAAD,EAAa;AACjBtE,QAAAA,KAAK,EAAEqE,YADU;AAEjBZ,QAAAA,IAAI,EAAE1C,OAAO,GAAGwD,kBAAH,GAAwB9F,GAAG,CAAC8F,kBAAD,EAAqB,GAArB,EAA0B,EAA1B;AAFvB,OAAb,CAAR;AAIH;;AAED,QAAIvD,QAAJ,EAAc;AACV6B,MAAAA,QAAQ,CAAC3C,OAAT,CAAiBF,KAAjB,GAAyBqE,YAAzB;AACA,OAAC3F,OAAO,CAAC2F,YAAD,CAAR,IAA0BxB,QAAQ,CAAC3C,OAAT,CAAiBmD,iBAAjB,CAAmC,EAAnC,CAA1B;AACH;;AAEDf,IAAAA,QAAQ,CAAC4B,oBAAoB,GAAGG,YAAH,GAAkBJ,GAAG,CAACE,MAAJ,CAAWnE,KAAlD,CAAR;AACH,GAxCD;;AA0CA,MAAMyE,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,YAAQvC,SAAS,CAACwC,OAAlB;AACI,WAAK,UAAL;AACI,4BAAO,oBAAC,aAAD;AAAe,UAAA,UAAU,EAAE5D,KAAK,CAACsC,MAAN,GAAe,CAA1C;AAA6C,UAAA,EAAE,EAAEhD,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,QAAL;AACI,4BAAO,oBAAC,WAAD;AAAa,UAAA,EAAE,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ;AACI,4BAAO,oBAAC,KAAD;AAAO,UAAA,EAAE,EAAEA,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AANR;AAQH,GATD;;AAWA,MAAMuE,WAAW,GAAG7F,IAAI,CAACoD,SAAD,EAAY,CAChC,WADgC,EAEhC,UAFgC,EAGhC,SAHgC,EAIhC,cAJgC,EAKhC,OALgC,EAMhC,YANgC,EAOhC,WAPgC,EAQhC,QARgC,EAShC,SATgC,EAUhC,QAVgC,EAWhC,MAXgC,EAYhC,aAZgC,EAahC,oBAbgC,EAchC,SAdgC,EAehC,OAfgC,CAAZ,CAAxB;AAkBA,sBACI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAE0C,OAAO,CAAC5C,YAAD,CADlB;AAEI,IAAA,QAAQ,EAAEhB,QAFd;AAGI,IAAA,SAAS,EAAExC,UAAU,CAACoC,SAAD,EAAY,WAAZ,EAAyB;AAC1C,eAASQ;AADiC,KAAzB,CAHzB;AAMI,IAAA,OAAO,EAAEc,SAAS,CAACwC,OANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQK5D,KAAK,iBAAI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,KAAb,CARd,eASI,oBAAC,MAAD,oBACQ6D,WADR;AAEI,IAAA,WAAW,EAAE,qBAACE,QAAD,EAAc;AACvB,aAAO,CAAC9D,OAAO,GAAG8D,QAAH,GAAc,CAACA,QAAD,CAAtB,EACFnB,GADE,CACE,UAACoB,CAAD;AAAA,eACDA,CAAC,KAAKpF,SAAN,GACMC,cADN,GAEMlB,GAAG,CACC8D,cAAc,CAACwC,IAAf,CAAoB;AAAA,cAACC,CAAD,uEAAK,EAAL;AAAA,iBAAYA,CAAC,CAAChF,KAAF,KAAY8E,CAAxB;AAAA,SAApB,CADD,EAEC,OAFD,CAHR;AAAA,OADF,EASFlG,IATE,CASG,IATH,CAAP;AAUH,KAbL;AAcI,IAAA,IAAI,EAAEwB,IAdV;AAeI,IAAA,KAAK,EAAE4C,aAfX;AAgBI,IAAA,QAAQ,EAAEjC,OAhBd;AAiBI,IAAA,QAAQ,EAAE8C,YAjBd;AAkBI,IAAA,KAAK,EAAEY,QAAQ,EAlBnB;AAmBI,IAAA,UAAU,EAAE;AACR5B,MAAAA,QAAQ,EAAED;AADF,KAnBhB;AAsBI,IAAA,QAAQ,EAAEtB,QAtBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAwBKc,WAAW,iBACR,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAE6C,MAAAA,IAAI,EAAEpE,OAAO,CAAChB;AAAhB,KAAnB;AAA+C,IAAA,KAAK,EAAEJ,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQE,cADR,0BAC4BwD,cAAc,GAAG,IAAH,GAAU,EADpD,EAzBR,EA6BK,CAACpC,OAAO,IAAIe,mBAAX,GACIS,cAAc,IAAI,EADtB,IAGQtB,MAAM,GACA;AAAEH,IAAAA,KAAK,EAAEnB,cAAT;AAAyBK,IAAAA,KAAK,EAAEN;AAAhC,GADA,GAEA;AAAEoB,IAAAA,KAAK,EAAEiB,gBAAT;AAA2B/B,IAAAA,KAAK,EAAE;AAAlC,GALd,4BAMYuC,cAAc,IAAI,EAN9B,EAAD,EAQCmB,GARD,CAQK,UAACC,IAAD,EAAOuB,KAAP;AAAA,wBACF,oBAAC,QAAD;AAAU,MAAA,GAAG,4BAAqBA,KAArB,CAAb;AAA2C,MAAA,QAAQ,EAAEN,OAAO,CAACjB,IAAI,CAACrC,QAAN,CAA5D;AAA6E,MAAA,KAAK,EAAEqC,IAAI,CAAC3D,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKkB,uBAAuB,IAAI,CAACxC,OAAO,CAACiF,IAAI,CAAC3D,KAAN,CAAnC,iBACG,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEgD,aAAa,CAACC,OAAd,CAAsBU,IAAI,CAAC3D,KAA3B,IAAoC,CAAC,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,eAII,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE2D,IAAI,CAAC7C,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADE;AAAA,GARL,CA7BL,CATJ,EAuDKE,QAAQ,iBACL;AACI,IAAA,GAAG,EAAE6B,QADT;AAEI,IAAA,QAAQ,EAAE,CAAC,CAFf;AAGI,IAAA,YAAY,EAAC,KAHjB;AAII,IAAA,KAAK,EAAE;AAAEsC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAJX;AAKI,IAAA,KAAK,EAAE3G,GAAG,CAACoE,QAAQ,CAAC3C,OAAV,EAAmB,OAAnB,EAA4B8C,aAA5B,CALd;AAMI,IAAA,OAAO,EAAE;AAAA,aAAMJ,SAAS,CAAC1C,OAAV,CAAkBmF,KAAlB,EAAN;AAAA,KANb;AAOI,IAAA,QAAQ,EAAExG,IAPd;AAQI,IAAA,SAAS,EAAE,mBAACyG,CAAD,EAAO;AACdA,MAAAA,CAAC,CAACnB,MAAF,CAASd,iBAAT,CAA2B,iBAA3B;AACH,KAVL;AAWI,IAAA,QAAQ,EAAErC,QAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDR,EAsEK4D,OAAO,CAAC5C,YAAD,CAAP,iBAAyB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,YAAjB,CAtE9B,CADJ;AA0EH;;AAEDrB,cAAc,CAAC4E,SAAf,GAA2B;AACvB3E,EAAAA,SAAS,EAAE1B,SAAS,CAACsG,MADE;AAEvB3E,EAAAA,OAAO,EAAE3B,SAAS,CAACuG,GAFI;AAGvBzG,EAAAA,KAAK,EAAEE,SAAS,CAACwG,KAAV,CAAgB;AACnBC,IAAAA,GAAG,EAAEzG,SAAS,CAACsG,MADI;AAEnBI,IAAAA,MAAM,EAAE1G,SAAS,CAAC2G;AAFC,GAAhB,CAHgB;AAOvBnE,EAAAA,MAAM,EAAExC,SAAS,CAAC2G,MAPK;AAQvB3E,EAAAA,uBAAuB,EAAEhC,SAAS,CAAC4G,IARZ;AASvB7E,EAAAA,MAAM,EAAE/B,SAAS,CAAC4G,IATK;AAUvBnE,EAAAA,KAAK,EAAEzC,SAAS,CAAC6G,KAVM;AAWvBnE,EAAAA,OAAO,EAAE1C,SAAS,CAAC6G,KAXI;AAYvBlE,EAAAA,YAAY,EAAE3C,SAAS,CAAC8G,SAAV,CAAoB,CAAC9G,SAAS,CAAC6G,KAAX,EAAkB7G,SAAS,CAACsG,MAA5B,EAAoCtG,SAAS,CAAC+G,MAA9C,CAApB,CAZS;AAavBjG,EAAAA,KAAK,EAAEd,SAAS,CAAC8G,SAAV,CAAoB,CAAC9G,SAAS,CAAC6G,KAAX,EAAkB7G,SAAS,CAACsG,MAA5B,EAAoCtG,SAAS,CAAC+G,MAA9C,CAApB,CAbgB;AAcvB1E,EAAAA,OAAO,EAAErC,SAAS,CAACsG,MAdI;AAevBhE,EAAAA,WAAW,EAAEtC,SAAS,CAAC8G,SAAV,CAAoB,CAAC9G,SAAS,CAAC6G,KAAX,EAAkB7G,SAAS,CAAC2G,MAA5B,CAApB,CAfU;AAgBvB9E,EAAAA,OAAO,EAAE7B,SAAS,CAAC4G,IAhBI;AAiBvB9E,EAAAA,QAAQ,EAAE9B,SAAS,CAAC4G,IAjBG;AAkBvB3E,EAAAA,QAAQ,EAAEjC,SAAS,CAAC4G,IAlBG;AAmBvBzE,EAAAA,OAAO,EAAEnC,SAAS,CAAC4G,IAnBI;AAoBvB1E,EAAAA,QAAQ,EAAElC,SAAS,CAAC4G,IApBG;AAqBvBxE,EAAAA,QAAQ,EAAEpC,SAAS,CAAC4G,IArBG;AAsBvBhE,EAAAA,mBAAmB,EAAE5C,SAAS,CAAC4G,IAtBR;AAuBvB/D,EAAAA,gBAAgB,EAAE7C,SAAS,CAAC8G,SAAV,CAAoB,CAAC9G,SAAS,CAACsG,MAAX,EAAmBtG,SAAS,CAACgH,IAA7B,CAApB,CAvBK;AAwBvBlE,EAAAA,YAAY,EAAE9C,SAAS,CAACsG,MAxBD;AAyBvBvD,EAAAA,QAAQ,EAAE/C,SAAS,CAACiH;AAzBG,CAA3B;AA4BAxF,cAAc,CAACyF,YAAf,GAA8B;AAC1BxF,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,OAAO,EAAE,EAFiB;AAG1BT,EAAAA,IAAI,EAAE,kBAHoB;AAI1BJ,EAAAA,KAAK,EAAE,EAJmB;AAK1BhB,EAAAA,KAAK,EAAE,EALmB;AAM1B0C,EAAAA,MAAM,EAAE;AAAEZ,IAAAA,KAAK,EAAE,OAAT;AAAkBd,IAAAA,KAAK,EAAE;AAAzB,GANkB;AAO1BuB,EAAAA,OAAO,EAAE,EAPiB;AAQ1BI,EAAAA,KAAK,EAAE,EARmB;AAS1BC,EAAAA,OAAO,EAAE,EATiB;AAU1BJ,EAAAA,WAAW,EAAE,EAVa;AAW1BT,EAAAA,OAAO,EAAE,KAXiB;AAY1BC,EAAAA,QAAQ,EAAE,KAZgB;AAa1BG,EAAAA,QAAQ,EAAE,KAbgB;AAc1BE,EAAAA,OAAO,EAAE,KAdiB;AAe1BJ,EAAAA,MAAM,EAAE,KAfkB;AAgB1BC,EAAAA,uBAAuB,EAAE,IAhBC;AAiB1BE,EAAAA,QAAQ,EAAE,KAjBgB;AAkB1BE,EAAAA,QAAQ,EAAE,KAlBgB;AAmB1BQ,EAAAA,mBAAmB,EAAE,KAnBK;AAoB1BC,EAAAA,gBAAgB,EAAE,EApBQ;AAqB1BC,EAAAA,YAAY,EAAE,EArBY;AAsB1BC,EAAAA,QAAQ,EAAE,kBAACoE,KAAD,EAAQrG,KAAR,EAAkB,CAAE,CAtBJ;AAuB1BsC,EAAAA,QAAQ,EAAE,oBAAM,CAAE;AAvBQ,CAA9B;;AA0BA,SAASgE,eAAT,QAAwC;AAAA,MAAbC,GAAa,SAAbA,GAAa;AAAA,MAARC,IAAQ,SAARA,IAAQ;AACpC,SAAO;AACHnF,IAAAA,OAAO,EAAEkF,GAAG,CAACE,OAAJ,CAAYpF,OADlB;AAEHG,IAAAA,WAAW,EAAE/C,GAAG,CAAC+H,IAAD,EAAO,cAAP;AAFb,GAAP;AAIH;;AAED,eAAehH,OAAO,CAAC8G,eAAD,CAAP,CAAyB/H,UAAU,CAACqB,MAAD,CAAV,CAAmBe,cAAnB,CAAzB,CAAf","sourcesContent":["import {\r\n    Checkbox,\r\n    FilledInput,\r\n    FormControl,\r\n    FormHelperText,\r\n    Input,\r\n    InputLabel,\r\n    ListItemText,\r\n    MenuItem,\r\n    OutlinedInput,\r\n    Select,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { get, isEmpty, isEqual, join, noop, pick, toString } from 'lodash';\r\nimport { query } from 'owp/api';\r\nimport { depr } from 'owp/debug';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SELECTED_ALL = 'SELECTED_ALL';\r\nconst VALUE_ALL = '@@@@@@';\r\nconst VALUE_ALL_TEXT = '전체';\r\n\r\nconst styles = () => ({\r\n    menuItem: {\r\n        justifyContent: 'center',\r\n    },\r\n});\r\nfunction usePreviousValue(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nfunction makeEvent(name, value) {\r\n    const changedEvent = new Event('change', {\r\n        bubbles: true,\r\n    });\r\n\r\n    Object.defineProperty(changedEvent, 'target', {\r\n        writable: false,\r\n        value: {\r\n            name,\r\n            value,\r\n        },\r\n    });\r\n\r\n    return changedEvent;\r\n}\r\n\r\nfunction OwpSelectField({\r\n    className,\r\n    classes,\r\n    name,\r\n    label,\r\n    isMulti,\r\n    required,\r\n    useAll,\r\n    useCheckboxMenuWithMenu,\r\n    useReset,\r\n    isSearch,\r\n    isReset,\r\n    disabled,\r\n    groupId,\r\n    commonCodes,\r\n    query: queryOptions,\r\n    mapper,\r\n    items,\r\n    options,\r\n    defaultValue,\r\n    value,\r\n    removeDefaultOption,\r\n    emptyOptionLabel,\r\n    errorMessage,\r\n    onChange,\r\n    ...restProps\r\n}) {\r\n    const useAllSingle = !isMulti && useAll;\r\n    const useAllMulti = isMulti && useAll;\r\n\r\n    const [currentValue, setValue] = useState(useAllSingle ? VALUE_ALL : defaultValue || value);\r\n    const [currentOptions, setOptions] = useState([]);\r\n    const [currentOptionsConvToObj, setOptionsConvToObj] = useState({});\r\n\r\n    const defaultValueRef = useRef(\r\n        useAllSingle ? VALUE_ALL : useAllMulti ? null : defaultValue || value\r\n    );\r\n    const selectRef = useRef(null);\r\n    const inputRef = useRef(null);\r\n\r\n    const prevQueryOptions = usePreviousValue(queryOptions);\r\n    const prevValue = usePreviousValue(value) || '';\r\n\r\n    const selectedValue = useMemo(() => {\r\n        return isMulti\r\n            ? isEmpty(currentValue)\r\n                ? []\r\n                : typeof currentValue === 'string'\r\n                ? currentValue.indexOf(',') === -1\r\n                    ? [currentValue]\r\n                    : currentValue.split(',')\r\n                : currentValue\r\n            : currentValue;\r\n    }, [currentValue]);\r\n\r\n    const useSelectedAll = useMemo(() => {\r\n        if (useAllMulti) {\r\n            return selectedValue.length === currentOptions.length;\r\n        }\r\n\r\n        return false;\r\n    }, [useAllMulti, selectedValue, currentOptions]);\r\n\r\n    useEffect(() => {\r\n        if (required && useAllSingle) {\r\n            inputRef.current.value = VALUE_ALL;\r\n            inputRef.current.setCustomValidity('');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isSearch && !isEqual(prevValue, value)) {\r\n            setValue(value);\r\n        }\r\n    }, [isSearch, prevValue, value]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            if (!isEmpty(items) && !isEqual(currentOptions, items)) {\r\n                depr(\r\n                    '[OwpSelectField]: `items` prop은 deprecate 되었습니다. `options` prop을 사용 바랍니다.'\r\n                );\r\n                setOptions(items);\r\n                return;\r\n            }\r\n\r\n            if (!isEmpty(options) && !isEqual(currentOptions, options)) {\r\n                setOptions(options);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }, [items, options]);\r\n\r\n    useEffect(() => {\r\n        if (!!groupId && !isEmpty(commonCodes) && isEmpty(currentOptions)) {\r\n            setOptions(commonCodes[groupId]);\r\n        }\r\n    }, [commonCodes]);\r\n\r\n    useEffect(() => {\r\n        if (!isEmpty(get(queryOptions, 'url')) && !isEqual(prevQueryOptions, queryOptions)) {\r\n            query(queryOptions)\r\n                .then((data = []) =>\r\n                    setOptions(\r\n                        data.map((item) => ({\r\n                            label: item[get(mapper, 'label', 'label')],\r\n                            value: toString(item[toString(get(mapper, 'value', 'value'))] || ''),\r\n                            data: item,\r\n                        }))\r\n                    )\r\n                )\r\n                .catch((error) => console.error(error));\r\n        }\r\n    }, [queryOptions, prevQueryOptions]);\r\n\r\n    useEffect(() => {\r\n        if (useReset && isReset) {\r\n            handleChange(makeEvent(name, defaultValueRef.current));\r\n        }\r\n    }, [useReset, isReset]);\r\n\r\n    useEffect(() => {\r\n        if (useAllMulti && !isEmpty(currentOptions) && isEmpty(defaultValueRef.current)) {\r\n            const values = currentOptions.map(({ value }) => value);\r\n            defaultValueRef.current = values;\r\n            setValue(values);\r\n\r\n            if (onChange instanceof Function) {\r\n                const joindValue = join(values, ',');\r\n                onChange(makeEvent(name, joindValue), { value: joindValue, data: currentOptions });\r\n            }\r\n\r\n            if (required) {\r\n                inputRef.current.value = values;\r\n                inputRef.current.setCustomValidity('');\r\n            }\r\n        }\r\n    }, [useAllMulti, currentOptions]);\r\n\r\n    const handleChange = (evt) => {\r\n        const isSelectedAllOfMulti = isMulti && evt.target.value.includes(SELECTED_ALL);\r\n\r\n        const changedValue = isMulti\r\n            ? isSelectedAllOfMulti\r\n                ? useSelectedAll\r\n                    ? ''\r\n                    : join(\r\n                          currentOptions.map(({ value }) => value),\r\n                          ','\r\n                      )\r\n                : isEmpty(evt.target.value)\r\n                ? ''\r\n                : join(evt.target.value, ',')\r\n            : evt.target.value;\r\n\r\n        if (onChange instanceof Function) {\r\n            const changedEvt = {\r\n                ...evt,\r\n                target: {\r\n                    ...evt.target,\r\n                    value: changedValue,\r\n                },\r\n            };\r\n            const selectedOptionData = currentOptions.filter(({ value }) =>\r\n                evt.target.value.includes(value)\r\n            );\r\n\r\n            onChange(changedEvt, {\r\n                value: changedValue,\r\n                data: isMulti ? selectedOptionData : get(selectedOptionData, '0', {}),\r\n            });\r\n        }\r\n\r\n        if (required) {\r\n            inputRef.current.value = changedValue;\r\n            !isEmpty(changedValue) && inputRef.current.setCustomValidity('');\r\n        }\r\n\r\n        setValue(isSelectedAllOfMulti ? changedValue : evt.target.value);\r\n    };\r\n\r\n    const getInput = () => {\r\n        switch (restProps.variant) {\r\n            case 'outlined':\r\n                return <OutlinedInput labelWidth={label.length * 8} id={name} />;\r\n            case 'filled':\r\n                return <FilledInput id={name} />;\r\n            default:\r\n                return <Input id={name} />;\r\n        }\r\n    };\r\n\r\n    const selectProps = pick(restProps, [\r\n        'autoWidth',\r\n        'children',\r\n        'classes',\r\n        'displayEmpty',\r\n        'input',\r\n        'inputProps',\r\n        'MenuProps',\r\n        'native',\r\n        'onClose',\r\n        'onOpen',\r\n        'open',\r\n        'renderValue',\r\n        'SelectDisplayProps',\r\n        'variant',\r\n        'style',\r\n    ]);\r\n\r\n    return (\r\n        <FormControl\r\n            error={Boolean(errorMessage)}\r\n            required={required}\r\n            className={classNames(className, 'min-w-160', {\r\n                'mr-20': isSearch,\r\n            })}\r\n            variant={restProps.variant}\r\n        >\r\n            {label && <InputLabel>{label}</InputLabel>}\r\n            <Select\r\n                {...selectProps}\r\n                renderValue={(selected) => {\r\n                    return (isMulti ? selected : [selected])\r\n                        .map((v) =>\r\n                            v === VALUE_ALL\r\n                                ? VALUE_ALL_TEXT\r\n                                : get(\r\n                                      currentOptions.find((o = {}) => o.value === v),\r\n                                      'label'\r\n                                  )\r\n                        )\r\n                        .join(', ');\r\n                }}\r\n                name={name}\r\n                value={selectedValue}\r\n                multiple={isMulti}\r\n                onChange={handleChange}\r\n                input={getInput()}\r\n                inputProps={{\r\n                    inputRef: selectRef,\r\n                }}\r\n                disabled={disabled}\r\n            >\r\n                {useAllMulti && (\r\n                    <MenuItem classes={{ root: classes.menuItem }} value={SELECTED_ALL}>\r\n                        {`${VALUE_ALL_TEXT}선택 ${useSelectedAll ? '해제' : ''}`}\r\n                    </MenuItem>\r\n                )}\r\n                {(isMulti || removeDefaultOption\r\n                    ? currentOptions || []\r\n                    : [\r\n                          useAll\r\n                              ? { label: VALUE_ALL_TEXT, value: VALUE_ALL }\r\n                              : { label: emptyOptionLabel, value: '' },\r\n                          ...(currentOptions || []),\r\n                      ]\r\n                ).map((item, index) => (\r\n                    <MenuItem key={`owp-select-item-${index}`} disabled={Boolean(item.disabled)} value={item.value}>\r\n                        {useCheckboxMenuWithMenu && !isEmpty(item.value) && (\r\n                            <Checkbox checked={selectedValue.indexOf(item.value) > -1} />\r\n                        )}\r\n                        <ListItemText primary={item.label} />\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            {required && (\r\n                <input\r\n                    ref={inputRef}\r\n                    tabIndex={-1}\r\n                    autoComplete=\"off\"\r\n                    style={{ opacity: 0, height: 0 }}\r\n                    value={get(inputRef.current, 'value', selectedValue)}\r\n                    onFocus={() => selectRef.current.focus()}\r\n                    onChange={noop}\r\n                    onInvalid={(e) => {\r\n                        e.target.setCustomValidity('목록에서 항목을 선택하세요.');\r\n                    }}\r\n                    required={required}\r\n                />\r\n            )}\r\n            {Boolean(errorMessage) && <FormHelperText>{errorMessage}</FormHelperText>}\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nOwpSelectField.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.any,\r\n    query: PropTypes.shape({\r\n        url: PropTypes.string,\r\n        params: PropTypes.object,\r\n    }),\r\n    mapper: PropTypes.object,\r\n    useCheckboxMenuWithMenu: PropTypes.bool,\r\n    useAll: PropTypes.bool,\r\n    items: PropTypes.array,\r\n    options: PropTypes.array,\r\n    defaultValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.number]),\r\n    value: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.number]),\r\n    groupId: PropTypes.string,\r\n    commonCodes: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    isMulti: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    useReset: PropTypes.bool,\r\n    isReset: PropTypes.bool,\r\n    isSearch: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    removeDefaultOption: PropTypes.bool,\r\n    emptyOptionLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n    errorMessage: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nOwpSelectField.defaultProps = {\r\n    className: '',\r\n    classes: {},\r\n    name: 'owp-select-field',\r\n    value: '',\r\n    query: {},\r\n    mapper: { label: 'label', value: 'value' },\r\n    groupId: '',\r\n    items: [],\r\n    options: [],\r\n    commonCodes: [],\r\n    isMulti: false,\r\n    required: false,\r\n    useReset: false,\r\n    isReset: false,\r\n    useAll: false,\r\n    useCheckboxMenuWithMenu: true,\r\n    isSearch: false,\r\n    disabled: false,\r\n    removeDefaultOption: false,\r\n    emptyOptionLabel: '',\r\n    errorMessage: '',\r\n    onChange: (event, value) => {},\r\n    setValue: () => {},\r\n};\r\n\r\nfunction mapStateToProps({ owp, auth }) {\r\n    return {\r\n        isReset: owp.wrapper.isReset,\r\n        commonCodes: get(auth, 'common.codes'),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(OwpSelectField));\r\n"]},"metadata":{},"sourceType":"module"}