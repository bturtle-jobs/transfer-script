{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\src\\\\main\\\\content\\\\include\\\\C0202002_tab07_tab01_tab02.js\";\nimport React, { Component } from 'react';\nimport { OwpButton, OwpSearchDateField, OwpSearchSelectField, OwpSearchTextField, OwpTextField, OwpTreeGrid, OwpMessage } from 'owp/wrapper';\nimport Formsy from 'formsy-react';\nimport * as TGEvent from 'owp/TGEvent';\nimport moment from 'moment';\nimport { query } from 'owp/api';\nimport { setGridData, setRowAttribute, restoreGridSelect, setRowAttributes } from 'main/GridUtill';\nvar MAX_ROW = 6;\nvar FACILITY = 'FACILITY';\nvar MATERIAL = 'MATERIAL';\n\nvar Page = /*#__PURE__*/function (_Component) {\n  _inherits(Page, _Component);\n\n  var _super = _createSuper(Page);\n\n  function Page(props) {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _super.call(this, props);\n\n    _this.loadStdMainConfig = function () {\n      var mock = \"[{\\\"FACILITY\\\":\\\"28\\\",\\\"MATERIAL\\\":\\\"Three\\\",\\\"CONFIG_TYPE\\\":\\\"Three\\\",\\\"TOTAL_INPUT\\\":\\\"Three\\\",\\\"INPUT_SPEED\\\":\\\"Three\\\",\\\"MESASURING_EQUIPMENT\\\":\\\"Three\\\"},{\\\"FACILITY\\\":\\\"29\\\",\\\"MATERIAL\\\":\\\"Three\\\",\\\"CONFIG_TYPE\\\":\\\"Three\\\",\\\"TOTAL_INPUT\\\":\\\"Three\\\",\\\"INPUT_SPEED\\\":\\\"Three\\\",\\\"MESASURING_EQUIPMENT\\\":\\\"Three\\\"}]\";\n      query({\n        url: 'loadOwpMbrUnitProcessMainConfig/' + 139\n      }).then(function (res) {\n        if (res['OWP_MBR_UNIT_PROCESS.MAIN_CONFIG']) {\n          var gridData = JSON.parse(mock);\n          setGridData('C0202011', gridData);\n          window.setTimeout(function () {\n            _this.setGridDynamicColumnType();\n          }, 100);\n        }\n      });\n    };\n\n    _this.handleAddRow = function () {\n      if (_this.state.gridLength >= MAX_ROW) {\n        OwpMessage({\n          message: '6 미만',\n          variant: 'error'\n        });\n      } else {\n        var G = TGEvent.getGridByID('C0202011');\n        G.ActionAcceptEdit();\n        TGEvent.OWPTGAddRow('C0202011', function (row) {\n          _this.setState(function (state) {\n            return _objectSpread(_objectSpread({}, state), {}, {\n              gridLength: state.gridLength + 1\n            });\n          });\n        });\n      }\n    };\n\n    _this.handleUpdate = function () {\n      //TODO:remove this\n      _this.setGridDynamicColumnType();\n\n      _this.fillGridData();\n    };\n\n    _this.handleDeleteRow = function () {\n      _this.fillGridData(true);\n    };\n\n    _this.setGridDynamicColumnType = function () {\n      var gridId = 'C0202011';\n      var G = TGEvent.getGridByID(gridId);\n\n      var _rows = Object.values(G['Rows']).filter(function (item) {\n        return item.Kind == 'Data';\n      });\n\n      var facilityColumn = 'FACILITY';\n\n      var facilityEnum = _this.loadFacilityEnum();\n\n      _rows.forEach(function (row) {\n        setRowAttributes(gridId, row, facilityColumn, facilityEnum);\n      });\n    };\n\n    _this.fillGridData = function (isDelete) {\n      var G = TGEvent.getGridByID('C0202011');\n\n      if (G) {\n        var _rows = Object.values(G['Rows']).filter(function (item) {\n          return item.Kind == 'Data';\n        });\n\n        var arrData = [];\n\n        _rows.some(function (row) {\n          if (isDelete && row['Selected'] === 1) {\n            return false;\n          } else {\n            arrData.push({\n              FACILITY: row['FACILITY'],\n              MATERIAL: row['MATERIAL'],\n              CONFIG_TYPE: row['CONFIG_TYPE'],\n              TOTAL_INPUT: row['TOTAL_INPUT'],\n              INPUT_SPEED: row['INPUT_SPEED'],\n              MESASURING_EQUIPMENT: row['MESASURING_EQUIPMENT']\n            });\n          }\n        });\n\n        setGridData('C0202011', arrData);\n\n        _this.setState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            gridLength: arrData.length\n          });\n        });\n      }\n    };\n\n    _this.loadFacilityEnum = function () {\n      //TODO:load from server\n      //TODO: write new service to get facility from parent of unit process id=\n      var facilityDummy = [{\n        'OWP_FACILITIES.FACILITY_NAME': 'R-1117',\n        'OWP_FACILITIES.FACILITY_SEQ': '28'\n      }, {\n        'OWP_FACILITIES.FACILITY_NAME': 'AC-1105',\n        'OWP_FACILITIES.FACILITY_SEQ': '29'\n      }];\n      var res = facilityDummy;\n\n      if (res) {\n        var enums = '';\n        var enumKeys = '';\n        res.forEach(function (item) {\n          enums = enums + '|' + item['OWP_FACILITIES.FACILITY_NAME'];\n          enumKeys = enumKeys + '|' + item['OWP_FACILITIES.FACILITY_SEQ'];\n        });\n        return {\n          Type: 'Enum',\n          Enum: enums,\n          EnumKeys: enumKeys\n        };\n      }\n\n      return null;\n    };\n\n    _this.state = {\n      gridLength: 0\n    };\n    return _this;\n  }\n  /**\r\n   * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n   * @param {Event} event 발생한 이벤트 객체\r\n   * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n   */\n\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _showApprovalDialog = this.showApprovalDialog;\n      this.loadStdMainConfig();\n    } //날짜 디폴드값 설정 함수\n    //load master data and first rowData\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 b\",\n        style: {\n          padding: '13px 0 0 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }, \"Std \\uB300\\uC2DC\\uBCF4\\uB4DC \\uC124\\uC815\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          textAlign: 'right',\n          paddingRight: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'contained',\n        onClick: function onClick() {\n          return _this2.handleAddRow();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }\n      }, \"\\uCD94\\uAC00\"), /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'contained',\n        onClick: function onClick() {\n          return _this2.handleUpdate();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'outlined',\n        onClick: function onClick() {\n          return _this2.handleDeleteRow();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }\n      }, \"\\uC0AD\\uC81C\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        style: {\n          padding: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(OwpTreeGrid, {\n        id: \"C0202011\",\n        LayoutUrl: \"assets/data/C0202011Def.xml\" // DataUrl={'/assets/data/C0202000Data.xml'}\n        ,\n        width: \"100%\" // height=\"17vh\"\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/src/main/content/include/C0202002_tab07_tab01_tab02.js"],"names":["React","Component","OwpButton","OwpSearchDateField","OwpSearchSelectField","OwpSearchTextField","OwpTextField","OwpTreeGrid","OwpMessage","Formsy","TGEvent","moment","query","setGridData","setRowAttribute","restoreGridSelect","setRowAttributes","MAX_ROW","FACILITY","MATERIAL","Page","props","loadStdMainConfig","mock","url","then","res","gridData","JSON","parse","window","setTimeout","setGridDynamicColumnType","handleAddRow","state","gridLength","message","variant","G","getGridByID","ActionAcceptEdit","OWPTGAddRow","row","setState","handleUpdate","fillGridData","handleDeleteRow","gridId","_rows","Object","values","filter","item","Kind","facilityColumn","facilityEnum","loadFacilityEnum","forEach","isDelete","arrData","some","push","CONFIG_TYPE","TOTAL_INPUT","INPUT_SPEED","MESASURING_EQUIPMENT","length","facilityDummy","enums","enumKeys","Type","Enum","EnumKeys","_showApprovalDialog","showApprovalDialog","width","padding","textAlign","paddingRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    OwpButton,\r\n    OwpSearchDateField,\r\n    OwpSearchSelectField,\r\n    OwpSearchTextField,\r\n    OwpTextField,\r\n    OwpTreeGrid,\r\n    OwpMessage,\r\n} from 'owp/wrapper';\r\nimport Formsy from 'formsy-react';\r\nimport * as TGEvent from 'owp/TGEvent';\r\nimport moment from 'moment';\r\nimport { query } from 'owp/api';\r\nimport { setGridData, setRowAttribute, restoreGridSelect, setRowAttributes } from 'main/GridUtill';\r\n\r\nconst MAX_ROW = 6;\r\nconst FACILITY = 'FACILITY';\r\nconst MATERIAL = 'MATERIAL';\r\nclass Page extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridLength: 0,\r\n        };\r\n    }\r\n    /**\r\n     * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n     * @param {Event} event 발생한 이벤트 객체\r\n     * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n     */\r\n    componentDidMount() {\r\n        const _showApprovalDialog = this.showApprovalDialog;\r\n        this.loadStdMainConfig();\r\n    }\r\n    //날짜 디폴드값 설정 함수\r\n    //load master data and first rowData\r\n    loadStdMainConfig = () => {\r\n        let mock = `[{\"FACILITY\":\"28\",\"MATERIAL\":\"Three\",\"CONFIG_TYPE\":\"Three\",\"TOTAL_INPUT\":\"Three\",\"INPUT_SPEED\":\"Three\",\"MESASURING_EQUIPMENT\":\"Three\"},{\"FACILITY\":\"29\",\"MATERIAL\":\"Three\",\"CONFIG_TYPE\":\"Three\",\"TOTAL_INPUT\":\"Three\",\"INPUT_SPEED\":\"Three\",\"MESASURING_EQUIPMENT\":\"Three\"}]`;\r\n\r\n        query({\r\n            url: 'loadOwpMbrUnitProcessMainConfig/' + 139,\r\n        }).then((res) => {\r\n            if (res['OWP_MBR_UNIT_PROCESS.MAIN_CONFIG']) {\r\n                let gridData = JSON.parse(mock);\r\n                setGridData('C0202011', gridData);\r\n                window.setTimeout(() => {\r\n                    this.setGridDynamicColumnType();\r\n                }, 100);\r\n            }\r\n        });\r\n    };\r\n\r\n    handleAddRow = () => {\r\n        if (this.state.gridLength >= MAX_ROW) {\r\n            OwpMessage({\r\n                message: '6 미만',\r\n                variant: 'error',\r\n            });\r\n        } else {\r\n            const G = TGEvent.getGridByID('C0202011');\r\n            G.ActionAcceptEdit();\r\n            TGEvent.OWPTGAddRow('C0202011', (row) => {\r\n                this.setState((state) => {\r\n                    return {\r\n                        ...state,\r\n                        gridLength: state.gridLength + 1,\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        //TODO:remove this\r\n        this.setGridDynamicColumnType();\r\n        this.fillGridData();\r\n    };\r\n\r\n    handleDeleteRow = () => {\r\n        this.fillGridData(true);\r\n    };\r\n\r\n    setGridDynamicColumnType = () => {\r\n        let gridId = 'C0202011';\r\n        const G = TGEvent.getGridByID(gridId);\r\n        const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n        const facilityColumn = 'FACILITY';\r\n        const facilityEnum = this.loadFacilityEnum();\r\n        _rows.forEach((row) => {\r\n            setRowAttributes(gridId, row, facilityColumn, facilityEnum);\r\n        });\r\n    };\r\n\r\n    fillGridData = (isDelete) => {\r\n        const G = TGEvent.getGridByID('C0202011');\r\n        if (G) {\r\n            const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n            let arrData = [];\r\n            _rows.some((row) => {\r\n                if (isDelete && row['Selected'] === 1) {\r\n                    return false;\r\n                } else {\r\n                    arrData.push({\r\n                        FACILITY: row['FACILITY'],\r\n                        MATERIAL: row['MATERIAL'],\r\n                        CONFIG_TYPE: row['CONFIG_TYPE'],\r\n                        TOTAL_INPUT: row['TOTAL_INPUT'],\r\n                        INPUT_SPEED: row['INPUT_SPEED'],\r\n                        MESASURING_EQUIPMENT: row['MESASURING_EQUIPMENT'],\r\n                    });\r\n                }\r\n            });\r\n            setGridData('C0202011', arrData);\r\n            this.setState((state) => {\r\n                return { ...state, gridLength: arrData.length };\r\n            });\r\n        }\r\n    };\r\n\r\n    loadFacilityEnum = () => {\r\n        //TODO:load from server\r\n        //TODO: write new service to get facility from parent of unit process id=\r\n        let facilityDummy = [\r\n            { 'OWP_FACILITIES.FACILITY_NAME': 'R-1117', 'OWP_FACILITIES.FACILITY_SEQ': '28' },\r\n            { 'OWP_FACILITIES.FACILITY_NAME': 'AC-1105', 'OWP_FACILITIES.FACILITY_SEQ': '29' },\r\n        ];\r\n\r\n        let res = facilityDummy;\r\n        if (res) {\r\n            let enums = '';\r\n            let enumKeys = '';\r\n            res.forEach((item) => {\r\n                enums = enums + '|' + item['OWP_FACILITIES.FACILITY_NAME'];\r\n                enumKeys = enumKeys + '|' + item['OWP_FACILITIES.FACILITY_SEQ'];\r\n            });\r\n\r\n            return {\r\n                Type: 'Enum',\r\n                Enum: enums,\r\n                EnumKeys: enumKeys,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 b\" style={{ padding: '13px 0 0 0' }}>\r\n                            Std 대시보드 설정\r\n                        </div>\r\n                        <div className=\"col-md-6\" style={{ textAlign: 'right', paddingRight: '0' }}>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'contained'}\r\n                                onClick={() => this.handleAddRow()}\r\n                            >\r\n                                추가\r\n                            </OwpButton>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'contained'}\r\n                                onClick={() => this.handleUpdate()}\r\n                            >\r\n                                수정\r\n                            </OwpButton>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'outlined'}\r\n                                onClick={() => this.handleDeleteRow()}\r\n                            >\r\n                                삭제\r\n                            </OwpButton>\r\n                        </div>\r\n                        <div className=\"col-md-12\" style={{ padding: '0' }}>\r\n                            <OwpTreeGrid\r\n                                id=\"C0202011\"\r\n                                LayoutUrl=\"assets/data/C0202011Def.xml\"\r\n                                // DataUrl={'/assets/data/C0202000Data.xml'}\r\n                                width=\"100%\"\r\n                                // height=\"17vh\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}