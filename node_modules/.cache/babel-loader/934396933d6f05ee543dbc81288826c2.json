{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\components\\\\File\\\\FileDndZone.js\";\n\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport classNames from 'classnames';\nimport every from 'lodash/every';\nimport last from 'lodash/last';\nimport PropTypes from 'prop-types';\nimport { path } from 'ramda';\nimport React, { useRef, useState } from 'react';\n\nvar _stop = function _stop(event) {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\nvar onDragOver = function onDragOver(event) {\n  _stop(event);\n};\n\nvar FileDndZone = function FileDndZone(_ref) {\n  var style = _ref.style,\n      className = _ref.className,\n      onDrop = _ref.onDrop,\n      onChange = _ref.onChange,\n      isUploading = _ref.isUploading,\n      accept = _ref.accept,\n      label = _ref.label,\n      multiple = _ref.multiple,\n      useClickButtonEvent = _ref.useClickButtonEvent,\n      dispatch = _ref.dispatch,\n      restProps = _objectWithoutProperties(_ref, [\"style\", \"className\", \"onDrop\", \"onChange\", \"isUploading\", \"accept\", \"label\", \"multiple\", \"useClickButtonEvent\", \"dispatch\"]);\n\n  var fileInputButtonInstance = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dragging = _useState2[0],\n      setDragging = _useState2[1];\n\n  var onDragEnter = function onDragEnter(event) {\n    _stop(event);\n\n    setDragging(true);\n  };\n\n  var onDragLeave = function onDragLeave(event) {\n    _stop(event);\n\n    setDragging(false);\n  };\n\n  var validateFileType = function validateFileType() {\n    var file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return accept.indexOf(last(file.name.split('.')).toLowerCase()) !== -1;\n  };\n\n  var handleDrop = function handleDrop(event) {\n    _stop(event);\n\n    setDragging(false);\n\n    if (!isUploading && path(['dataTransfer', 'files', 'length'], event)) {\n      var arrayFiles = Array.from(event.dataTransfer.files);\n\n      if (!!accept && !(multiple ? every(arrayFiles.map(validateFileType)) : validateFileType(arrayFiles[0]))) {\n        onDrop();\n        return;\n      }\n\n      onDrop(arrayFiles);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isUploading && path(['target', 'files'], event)) {\n      onChange(Array.from(event.target.files));\n    }\n  };\n\n  var classes = classNames('w-full h-full flex justify-center items-center', {\n    'border-4 border-dashed opacity-50': dragging\n  }, className);\n  return /*#__PURE__*/React.createElement(Paper, Object.assign({}, restProps, {\n    style: _objectSpread({\n      width: 400,\n      height: 300\n    }, style),\n    className: classes,\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    onDragOver: onDragOver,\n    onClick: function onClick() {\n      return useClickButtonEvent && fileInputButtonInstance.current.click();\n    },\n    onDrop: handleDrop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    multiple: multiple,\n    type: \"file\",\n    accept: accept,\n    ref: fileInputButtonInstance,\n    onClick: function onClick(evt) {\n      return evt.target.value = '';\n    },\n    onChange: handleChange,\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    className: \"pointer-events-none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, isUploading ? '파일을 업로드 중입니다.' : label));\n};\n\nFileDndZone.propTypes = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n\n  /**\r\n   * Drop Event 인 경우\r\n   */\n  onDrop: PropTypes.func,\n\n  /**\r\n   * Click Event 인 경우\r\n   */\n  onChange: PropTypes.func,\n  isUploading: PropTypes.bool,\n\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\r\n   */\n  accept: PropTypes.string,\n\n  /**\r\n   * Drop Zone label\r\n   */\n  label: PropTypes.string,\n\n  /**\r\n   * N개 파일을 업로드 하려면 true\r\n   */\n  multiple: PropTypes.bool,\n\n  /**\r\n   * Click Event 허용 여부\r\n   */\n  useClickButtonEvent: PropTypes.bool\n};\nFileDndZone.defaultProps = {\n  style: {},\n  onDrop: function onDrop(files) {},\n  onChange: function onChange(files) {},\n  isUploading: false,\n  accept: '',\n  label: '이곳에 파일을 끌어놓으세요.,',\n  multiple: true,\n  useClickButtonEvent: false\n};\nexport default FileDndZone;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/components/File/FileDndZone.js"],"names":["Typography","Paper","classNames","every","last","PropTypes","path","React","useRef","useState","_stop","event","preventDefault","stopPropagation","onDragOver","FileDndZone","style","className","onDrop","onChange","isUploading","accept","label","multiple","useClickButtonEvent","dispatch","restProps","fileInputButtonInstance","dragging","setDragging","onDragEnter","onDragLeave","validateFileType","file","indexOf","name","split","toLowerCase","handleDrop","arrayFiles","Array","from","dataTransfer","files","map","handleChange","target","classes","width","height","current","click","evt","value","propTypes","object","string","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport classNames from 'classnames';\r\nimport every from 'lodash/every';\r\nimport last from 'lodash/last';\r\nimport PropTypes from 'prop-types';\r\nimport { path } from 'ramda';\r\nimport React, { useRef, useState } from 'react';\r\n\r\nconst _stop = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n};\r\n\r\nconst onDragOver = event => {\r\n    _stop(event);\r\n};\r\n\r\nconst FileDndZone = ({\r\n    style,\r\n    className,\r\n    onDrop,\r\n    onChange,\r\n    isUploading,\r\n    accept,\r\n    label,\r\n    multiple,\r\n    useClickButtonEvent,\r\n    dispatch, // eslint-disable-line no-unused-vars\r\n    ...restProps\r\n}) => {\r\n    const fileInputButtonInstance = useRef(null);\r\n    const [dragging, setDragging] = useState(false);\r\n    const onDragEnter = event => {\r\n        _stop(event);\r\n        setDragging(true);\r\n    };\r\n\r\n    const onDragLeave = event => {\r\n        _stop(event);\r\n        setDragging(false);\r\n    };\r\n\r\n    const validateFileType = (file = {}) =>\r\n        accept.indexOf(last(file.name.split('.')).toLowerCase()) !== -1;\r\n\r\n    const handleDrop = event => {\r\n        _stop(event);\r\n\r\n        setDragging(false);\r\n\r\n        if (!isUploading && path(['dataTransfer', 'files', 'length'], event)) {\r\n            const arrayFiles = Array.from(event.dataTransfer.files);\r\n\r\n            if (\r\n                !!accept &&\r\n                !(multiple\r\n                    ? every(arrayFiles.map(validateFileType))\r\n                    : validateFileType(arrayFiles[0]))\r\n            ) {\r\n                onDrop();\r\n                return;\r\n            }\r\n\r\n            onDrop(arrayFiles);\r\n        }\r\n    };\r\n\r\n    const handleChange = event => {\r\n        if (!isUploading && path(['target', 'files'], event)) {\r\n            onChange(Array.from(event.target.files));\r\n        }\r\n    };\r\n\r\n    const classes = classNames(\r\n        'w-full h-full flex justify-center items-center',\r\n        {\r\n            'border-4 border-dashed opacity-50': dragging,\r\n        },\r\n        className\r\n    );\r\n\r\n    return (\r\n        <Paper\r\n            {...restProps}\r\n            style={{ width: 400, height: 300, ...style }}\r\n            className={classes}\r\n            onDragEnter={onDragEnter}\r\n            onDragLeave={onDragLeave}\r\n            onDragOver={onDragOver}\r\n            onClick={() =>\r\n                useClickButtonEvent && fileInputButtonInstance.current.click()\r\n            }\r\n            onDrop={handleDrop}\r\n        >\r\n            <input\r\n                multiple={multiple}\r\n                type=\"file\"\r\n                accept={accept}\r\n                ref={fileInputButtonInstance}\r\n                onClick={evt => (evt.target.value = '')}\r\n                onChange={handleChange}\r\n                hidden\r\n            />\r\n            <Typography\r\n                variant=\"subtitle1\"\r\n                color=\"textSecondary\"\r\n                className=\"pointer-events-none\"\r\n            >\r\n                {isUploading ? '파일을 업로드 중입니다.' : label}\r\n            </Typography>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nFileDndZone.propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    /**\r\n     * Drop Event 인 경우\r\n     */\r\n    onDrop: PropTypes.func,\r\n    /**\r\n     * Click Event 인 경우\r\n     */\r\n    onChange: PropTypes.func,\r\n    isUploading: PropTypes.bool,\r\n    /**\r\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\r\n     */\r\n    accept: PropTypes.string,\r\n    /**\r\n     * Drop Zone label\r\n     */\r\n    label: PropTypes.string,\r\n    /**\r\n     * N개 파일을 업로드 하려면 true\r\n     */\r\n    multiple: PropTypes.bool,\r\n    /**\r\n     * Click Event 허용 여부\r\n     */\r\n    useClickButtonEvent: PropTypes.bool,\r\n};\r\n\r\nFileDndZone.defaultProps = {\r\n    style: {},\r\n    onDrop: files => {},\r\n    onChange: files => {},\r\n    isUploading: false,\r\n    accept: '',\r\n    label: '이곳에 파일을 끌어놓으세요.,',\r\n    multiple: true,\r\n    useClickButtonEvent: false,\r\n};\r\n\r\nexport default FileDndZone;\r\n"]},"metadata":{},"sourceType":"module"}