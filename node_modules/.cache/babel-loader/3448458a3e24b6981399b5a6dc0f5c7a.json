{"ast":null,"code":"\"use strict\";\n\nvar utils = require('./utils');\n\nvar OldValue = /*#__PURE__*/function () {\n  function OldValue(unprefixed, prefixed, string, regexp) {\n    this.unprefixed = unprefixed;\n    this.prefixed = prefixed;\n    this.string = string || prefixed;\n    this.regexp = regexp || utils.regexp(prefixed);\n  }\n  /**\n     * Check, that value contain old value\n     */\n\n\n  var _proto = OldValue.prototype;\n\n  _proto.check = function check(value) {\n    if (value.indexOf(this.string) !== -1) {\n      return !!value.match(this.regexp);\n    }\n\n    return false;\n  };\n\n  return OldValue;\n}();\n\nmodule.exports = OldValue;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/autoprefixer/lib/old-value.js"],"names":["utils","require","OldValue","unprefixed","prefixed","string","regexp","_proto","prototype","check","value","indexOf","match","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIC,QAAQ,GACZ,aACA,YAAY;AACV,WAASA,QAAT,CAAkBC,UAAlB,EAA8BC,QAA9B,EAAwCC,MAAxC,EAAgDC,MAAhD,EAAwD;AACtD,SAAKH,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAM,IAAID,QAAxB;AACA,SAAKE,MAAL,GAAcA,MAAM,IAAIN,KAAK,CAACM,MAAN,CAAaF,QAAb,CAAxB;AACD;AACD;AACF;AACA;;;AAGE,MAAIG,MAAM,GAAGL,QAAQ,CAACM,SAAtB;;AAEAD,EAAAA,MAAM,CAACE,KAAP,GAAe,SAASA,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAIA,KAAK,CAACC,OAAN,CAAc,KAAKN,MAAnB,MAA+B,CAAC,CAApC,EAAuC;AACrC,aAAO,CAAC,CAACK,KAAK,CAACE,KAAN,CAAY,KAAKN,MAAjB,CAAT;AACD;;AAED,WAAO,KAAP;AACD,GAND;;AAQA,SAAOJ,QAAP;AACD,CAvBD,EAFA;;AA2BAW,MAAM,CAACC,OAAP,GAAiBZ,QAAjB","sourcesContent":["\"use strict\";\n\nvar utils = require('./utils');\n\nvar OldValue =\n/*#__PURE__*/\nfunction () {\n  function OldValue(unprefixed, prefixed, string, regexp) {\n    this.unprefixed = unprefixed;\n    this.prefixed = prefixed;\n    this.string = string || prefixed;\n    this.regexp = regexp || utils.regexp(prefixed);\n  }\n  /**\n     * Check, that value contain old value\n     */\n\n\n  var _proto = OldValue.prototype;\n\n  _proto.check = function check(value) {\n    if (value.indexOf(this.string) !== -1) {\n      return !!value.match(this.regexp);\n    }\n\n    return false;\n  };\n\n  return OldValue;\n}();\n\nmodule.exports = OldValue;"]},"metadata":{},"sourceType":"script"}