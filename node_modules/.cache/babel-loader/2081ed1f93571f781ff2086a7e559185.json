{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\wrapper\\\\OwpTreeGrid.js\";\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef } from 'react';\nvar TREE_GRID_TEXT_CONFIG_URL = '/assets/vendors/Grid/Text.xml';\n\nfunction OwpTreeGrid(_ref) {\n  var id = _ref.id,\n      className = _ref.className,\n      style = _ref.style,\n      height = _ref.height,\n      width = _ref.width,\n      LayoutUrl = _ref.LayoutUrl,\n      DataUrl = _ref.DataUrl,\n      data = _ref.data,\n      onMount = _ref.onMount;\n  var gridInstanceRef = useRef(null);\n  useEffect(function () {\n    var gridInstance = window.TreeGrid({\n      id: id,\n      Layout: {\n        Url: LayoutUrl\n      },\n      Data: isEmpty(data) ? {\n        Url: DataUrl.includes('assets') ? DataUrl : \"\".concat(process.env.REACT_APP_REST_API_URL, \"/\").concat(DataUrl)\n      } : {\n        Data: {\n          Body: [data]\n        }\n      },\n      Text: {\n        Url: TREE_GRID_TEXT_CONFIG_URL\n      },\n      width: width,\n      height: height,\n      Debug: 'Error'\n    }, id, id);\n    gridInstance.TmpFocus = 0;\n    gridInstanceRef.current = gridInstance;\n    onMount(gridInstance);\n    return function () {\n      if (!!gridInstance) {\n        gridInstance.Dispose();\n      }\n    };\n  }, []);\n  useEffect(function () {\n    var bodyData = get(gridInstanceRef.current, 'Data.Data.Data.Body');\n\n    if (!isEmpty(bodyData) && !isEqual(get(bodyData, 0), data)) {\n      gridInstanceRef.current.Data.Data.Body = [data || []];\n      gridInstanceRef.current.ReloadBody();\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: height,\n      width: width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: className,\n    style: omit(style, ['height', 'width']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n}\n\nOwpTreeGrid.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  LayoutUrl: PropTypes.string,\n  DataUrl: PropTypes.string,\n  data: PropTypes.array,\n  style: PropTypes.object,\n  height: PropTypes.string,\n  width: PropTypes.string,\n  onMount: PropTypes.func\n};\nOwpTreeGrid.defaultProps = {\n  id: 'treeGridWrapper',\n  className: '',\n  LayoutUrl: '/assets/data/owp_000000Def.xml',\n  DataUrl: '/assets/data/owp_000000Data.xml',\n  style: {},\n  height: '100%',\n  width: '100%',\n  onMount: function onMount() {}\n};\nexport default OwpTreeGrid;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/wrapper/OwpTreeGrid.js"],"names":["get","isEmpty","isEqual","omit","PropTypes","React","useEffect","useRef","TREE_GRID_TEXT_CONFIG_URL","OwpTreeGrid","id","className","style","height","width","LayoutUrl","DataUrl","data","onMount","gridInstanceRef","gridInstance","window","TreeGrid","Layout","Url","Data","includes","process","env","REACT_APP_REST_API_URL","Body","Text","Debug","TmpFocus","current","Dispose","bodyData","ReloadBody","propTypes","string","array","object","func","defaultProps"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AAEA,IAAMC,yBAAyB,GAAG,+BAAlC;;AAEA,SAASC,WAAT,OAAiG;AAAA,MAA1EC,EAA0E,QAA1EA,EAA0E;AAAA,MAAtEC,SAAsE,QAAtEA,SAAsE;AAAA,MAA3DC,KAA2D,QAA3DA,KAA2D;AAAA,MAApDC,MAAoD,QAApDA,MAAoD;AAAA,MAA5CC,KAA4C,QAA5CA,KAA4C;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC7F,MAAMC,eAAe,GAAGZ,MAAM,CAAC,IAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMc,YAAY,GAAGC,MAAM,CAACC,QAAP,CACjB;AACIZ,MAAAA,EAAE,EAAFA,EADJ;AAEIa,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAET;AAAP,OAFZ;AAGIU,MAAAA,IAAI,EAAExB,OAAO,CAACgB,IAAD,CAAP,GACA;AACIO,QAAAA,GAAG,EAAER,OAAO,CAACU,QAAR,CAAiB,QAAjB,IACCV,OADD,aAEIW,OAAO,CAACC,GAAR,CAAYC,sBAFhB,cAE0Cb,OAF1C;AADT,OADA,GAMA;AAAES,QAAAA,IAAI,EAAE;AAAEK,UAAAA,IAAI,EAAE,CAACb,IAAD;AAAR;AAAR,OATV;AAUIc,MAAAA,IAAI,EAAE;AAAEP,QAAAA,GAAG,EAAEhB;AAAP,OAVV;AAWIM,MAAAA,KAAK,EAALA,KAXJ;AAYID,MAAAA,MAAM,EAANA,MAZJ;AAaImB,MAAAA,KAAK,EAAE;AAbX,KADiB,EAgBjBtB,EAhBiB,EAiBjBA,EAjBiB,CAArB;AAoBAU,IAAAA,YAAY,CAACa,QAAb,GAAwB,CAAxB;AACAd,IAAAA,eAAe,CAACe,OAAhB,GAA0Bd,YAA1B;AACAF,IAAAA,OAAO,CAACE,YAAD,CAAP;AAEA,WAAO,YAAM;AACT,UAAI,CAAC,CAACA,YAAN,EAAoB;AAChBA,QAAAA,YAAY,CAACe,OAAb;AACH;AACJ,KAJD;AAKH,GA9BQ,EA8BN,EA9BM,CAAT;AAgCA7B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAM8B,QAAQ,GAAGpC,GAAG,CAACmB,eAAe,CAACe,OAAjB,EAA0B,qBAA1B,CAApB;;AAEA,QAAI,CAACjC,OAAO,CAACmC,QAAD,CAAR,IAAsB,CAAClC,OAAO,CAACF,GAAG,CAACoC,QAAD,EAAW,CAAX,CAAJ,EAAmBnB,IAAnB,CAAlC,EAA4D;AACxDE,MAAAA,eAAe,CAACe,OAAhB,CAAwBT,IAAxB,CAA6BA,IAA7B,CAAkCK,IAAlC,GAAyC,CAACb,IAAI,IAAI,EAAT,CAAzC;AACAE,MAAAA,eAAe,CAACe,OAAhB,CAAwBG,UAAxB;AACH;AACJ,GAPQ,EAON,CAACpB,IAAD,CAPM,CAAT;AASA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,KAAK,EAALA;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAEJ,EAAT;AAAa,IAAA,SAAS,EAAEC,SAAxB;AAAmC,IAAA,KAAK,EAAER,IAAI,CAACS,KAAD,EAAQ,CAAC,QAAD,EAAW,OAAX,CAAR,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAEDH,WAAW,CAAC6B,SAAZ,GAAwB;AACpB5B,EAAAA,EAAE,EAAEN,SAAS,CAACmC,MADM;AAEpB5B,EAAAA,SAAS,EAAEP,SAAS,CAACmC,MAFD;AAGpBxB,EAAAA,SAAS,EAAEX,SAAS,CAACmC,MAHD;AAIpBvB,EAAAA,OAAO,EAAEZ,SAAS,CAACmC,MAJC;AAKpBtB,EAAAA,IAAI,EAAEb,SAAS,CAACoC,KALI;AAMpB5B,EAAAA,KAAK,EAAER,SAAS,CAACqC,MANG;AAOpB5B,EAAAA,MAAM,EAAET,SAAS,CAACmC,MAPE;AAQpBzB,EAAAA,KAAK,EAAEV,SAAS,CAACmC,MARG;AASpBrB,EAAAA,OAAO,EAAEd,SAAS,CAACsC;AATC,CAAxB;AAYAjC,WAAW,CAACkC,YAAZ,GAA2B;AACvBjC,EAAAA,EAAE,EAAE,iBADmB;AAEvBC,EAAAA,SAAS,EAAE,EAFY;AAGvBI,EAAAA,SAAS,EAAE,gCAHY;AAIvBC,EAAAA,OAAO,EAAE,iCAJc;AAKvBJ,EAAAA,KAAK,EAAE,EALgB;AAMvBC,EAAAA,MAAM,EAAE,MANe;AAOvBC,EAAAA,KAAK,EAAE,MAPgB;AAQvBI,EAAAA,OAAO,EAAE,mBAAM,CAAE;AARM,CAA3B;AAWA,eAAeT,WAAf","sourcesContent":["import get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport isEqual from 'lodash/isEqual';\r\nimport omit from 'lodash/omit';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst TREE_GRID_TEXT_CONFIG_URL = '/assets/vendors/Grid/Text.xml';\r\n\r\nfunction OwpTreeGrid({ id, className, style, height, width, LayoutUrl, DataUrl, data, onMount }) {\r\n    const gridInstanceRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const gridInstance = window.TreeGrid(\r\n            {\r\n                id,\r\n                Layout: { Url: LayoutUrl },\r\n                Data: isEmpty(data)\r\n                    ? {\r\n                          Url: DataUrl.includes('assets')\r\n                              ? DataUrl\r\n                              : `${process.env.REACT_APP_REST_API_URL}/${DataUrl}`,\r\n                      }\r\n                    : { Data: { Body: [data] } },\r\n                Text: { Url: TREE_GRID_TEXT_CONFIG_URL },\r\n                width,\r\n                height,\r\n                Debug: 'Error',\r\n            },\r\n            id,\r\n            id\r\n        );\r\n\r\n        gridInstance.TmpFocus = 0;\r\n        gridInstanceRef.current = gridInstance;\r\n        onMount(gridInstance);\r\n\r\n        return () => {\r\n            if (!!gridInstance) {\r\n                gridInstance.Dispose();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const bodyData = get(gridInstanceRef.current, 'Data.Data.Data.Body');\r\n\r\n        if (!isEmpty(bodyData) && !isEqual(get(bodyData, 0), data)) {\r\n            gridInstanceRef.current.Data.Data.Body = [data || []];\r\n            gridInstanceRef.current.ReloadBody();\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <div style={{ height, width }}>\r\n            <div id={id} className={className} style={omit(style, ['height', 'width'])} />\r\n        </div>\r\n    );\r\n}\r\n\r\nOwpTreeGrid.propTypes = {\r\n    id: PropTypes.string,\r\n    className: PropTypes.string,\r\n    LayoutUrl: PropTypes.string,\r\n    DataUrl: PropTypes.string,\r\n    data: PropTypes.array,\r\n    style: PropTypes.object,\r\n    height: PropTypes.string,\r\n    width: PropTypes.string,\r\n    onMount: PropTypes.func,\r\n};\r\n\r\nOwpTreeGrid.defaultProps = {\r\n    id: 'treeGridWrapper',\r\n    className: '',\r\n    LayoutUrl: '/assets/data/owp_000000Def.xml',\r\n    DataUrl: '/assets/data/owp_000000Data.xml',\r\n    style: {},\r\n    height: '100%',\r\n    width: '100%',\r\n    onMount: () => {},\r\n};\r\n\r\nexport default OwpTreeGrid;\r\n"]},"metadata":{},"sourceType":"module"}