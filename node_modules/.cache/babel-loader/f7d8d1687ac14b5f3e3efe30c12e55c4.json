{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\components\\\\Go\\\\GoTimeline.js\";\nimport { addHours, format, parse } from 'date-fns';\nimport * as go from 'gojs';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport { path } from 'ramda';\nimport React, { useEffect } from 'react';\nvar myDiagram;\nvar TICK_UNIT = 2;\n\nfunction init(id) {\n  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    size: 800\n  };\n  var $ = go.GraphObject.make;\n  myDiagram = $(go.Diagram, id, {\n    layout: $(TimelineLayout),\n    isTreePathToChildren: false\n  });\n  myDiagram.nodeTemplate = $(go.Node, 'Table', {\n    locationSpot: go.Spot.Center,\n    movable: false\n  }, $(go.Panel, 'Auto', $(go.Shape, 'RoundedRectangle', {\n    strokeWidth: 3\n  }, new go.Binding('fill', 'color', function (color) {\n    return path(['shape', 'fill'], color) || '#519ABA';\n  }), new go.Binding('stroke', 'color', function (color) {\n    return path(['shape', 'stroke'], color) || path(['shape', 'fill'], color) || '#519ABA';\n  })), $(go.Panel, 'Table', $(go.TextBlock, {\n    row: 0,\n    wrap: go.TextBlock.WrapFit,\n    font: 'Italic 10pt sans-serif',\n    textAlign: 'center',\n    margin: 4\n  }, new go.Binding('stroke', 'color', function (color) {\n    return path(['event', 'stroke'], color) || '#FFFFFF';\n  }), new go.Binding('text', 'event')), $(go.TextBlock, {\n    row: 1,\n    stroke: '#fff',\n    textAlign: 'center',\n    margin: 4\n  }, new go.Binding('stroke', 'color', function (color) {\n    return path(['event', 'stroke'], color) || '#FFFFFF';\n  }), new go.Binding('text', 'date', function (d) {\n    return format(d, 'HH:mm:ss');\n  })))));\n  myDiagram.nodeTemplateMap.add('Line', $(go.Node, 'Graduated', {\n    movable: false,\n    copyable: false,\n    resizable: false,\n    background: 'transparent',\n    graduatedMin: 0,\n    graduatedMax: 24 * TICK_UNIT,\n    graduatedTickUnit: TICK_UNIT\n  }, new go.Binding('graduatedMax', '', model.length), $(go.Shape, {\n    geometryString: 'M0 0 H400',\n    desiredSize: new go.Size(options.size, options.size)\n  }), $(go.Shape, {\n    geometryString: 'M0 0 V12',\n    interval: 1,\n    strokeWidth: 2 // alignmentFocus: go.Spot.Bottom,\n\n  }), $(go.TextBlock, {\n    interval: 1,\n    alignmentFocus: go.Spot.MiddleRight,\n    segmentOrientation: go.Link.OrientMinus90,\n    segmentOffset: new go.Point(0, 16),\n    graduatedFunction: function graduatedFunction(n) {\n      return format(addHours(options.start, n / TICK_UNIT), 'YYYY.MM.DD HH:mm');\n    }\n  }))); // The template for the link connecting the event node with the timeline bar node:\n\n  myDiagram.linkTemplate = $(BarLink, // defined below\n  {\n    toShortLength: 2,\n    layerName: 'Background'\n  }, $(go.Shape, {\n    stroke: '#BBBBBB',\n    strokeWidth: 2\n  })); // Setup the model data -- an object describing the timeline bar node\n  // and an object for each event node:\n\n  var data = [_objectSpread({\n    // this defines the actual time \"Line\" bar\n    key: 'timeline',\n    category: 'Line',\n    // lineSpacing: 30, // distance between timeline and event nodes\n    length: options.size\n  }, options)].concat(_toConsumableArray(model)); // prepare the model by adding links to the Line\n\n  for (var i = 0; i < data.length; i++) {\n    var d = data[i];\n    if (d.key !== 'timeline') d.parent = 'timeline';\n  }\n\n  myDiagram.model = $(go.TreeModel, {\n    nodeDataArray: data\n  });\n  return myDiagram;\n} // This custom Layout locates the timeline bar at (0,0)\n// and alternates the event Nodes above and below the bar at\n// the X-coordinate locations determined by their data.date values.\n\n\nfunction TimelineLayout() {\n  go.Layout.call(this);\n}\n\ngo.Diagram.inherit(TimelineLayout, go.Layout);\n\nTimelineLayout.prototype.doLayout = function (coll) {\n  var diagram = this.diagram;\n  if (diagram === null) return;\n  coll = this.collectParts(coll);\n  diagram.startTransaction('TimelineLayout');\n  var parts = [];\n  var it = coll.iterator;\n  var line = null;\n\n  while (it.next()) {\n    var part = it.value;\n    if (part instanceof go.Link) continue;\n\n    if (part.category === 'Line') {\n      line = part;\n      continue;\n    }\n\n    parts.push(part);\n    var x = part.data.date;\n\n    if (x === undefined) {\n      x = new Date();\n      part.data.date = x;\n    }\n  }\n\n  if (!line) throw Error(\"No node of category 'Line' for TimelineLayout\");\n  line.location = new go.Point(0, 0); // lay out the events above the timeline\n\n  if (parts.length > 0) {\n    // determine the offset from the main shape to the timeline's boundaries\n    // const main = line.findMainElement();\n    // const sw = main.strokeWidth;\n    // const mainOffX = main.actualBounds.x;\n    // const mainOffY = main.actualBounds.y;\n    // spacing is between the Line and the closest Nodes, defaults to 30\n    var spacing = line.data.lineSpacing;\n    if (!spacing) spacing = 30;\n\n    for (var i = 0; i < parts.length; i++) {\n      var _part = parts[i];\n      var bnds = _part.actualBounds;\n      var dt = _part.data.date;\n      var val = dateToValue(dt, parts);\n      var pt = line.graduatedPointForValue(val);\n      var tempLoc = new go.Point(pt.x, pt.y - bnds.height / 2 - spacing); // check if this node will overlap with previously placed events, and offset if needed\n\n      for (var j = 0; j < i; j++) {\n        var partRect = new go.Rect(tempLoc.x, tempLoc.y, bnds.width, bnds.height);\n        var otherLoc = parts[j].location;\n        var otherBnds = parts[j].actualBounds;\n        var otherRect = new go.Rect(otherLoc.x, otherLoc.y, otherBnds.width, otherBnds.height);\n\n        if (partRect.intersectsRect(otherRect)) {\n          tempLoc.offset(0, -otherBnds.height - 10);\n          j = 0; // now that we have a new location, we need to recheck in case we overlap with an event we didn't overlap before\n        }\n      }\n\n      _part.location = tempLoc;\n    }\n  }\n\n  diagram.commitTransaction('TimelineLayout');\n}; // end TimelineLayout class\n// This custom Link class was adapted from several of the samples\n\n\nfunction BarLink() {\n  go.Link.call(this);\n}\n\ngo.Diagram.inherit(BarLink, go.Link);\n\nBarLink.prototype.getLinkPoint = function (node, port, spot, from, ortho, othernode, otherport) {\n  var r = port.getDocumentBounds();\n  var op = otherport.getDocumentPoint(go.Spot.Center);\n  var main = node.category === 'Line' ? node.findMainElement() : othernode.findMainElement();\n  var mainOffY = main.actualBounds.y;\n  var y = r.top;\n\n  if (node.category === 'Line') {\n    y += mainOffY;\n    if (op.x < r.left) return new go.Point(r.left, y);\n    if (op.x > r.right) return new go.Point(r.right, y);\n    return new go.Point(op.x, y);\n  } else {\n    return new go.Point(r.centerX, r.bottom);\n  }\n}; // end BarLink class\n\n\nfunction dateToValue(d, parts) {\n  var timeline = myDiagram.model.findNodeDataForKey('timeline');\n  var startDate = timeline.start;\n  var startDateMs = startDate.getTime() + startDate.getTimezoneOffset() * 60000;\n  var dateInMs = d.getTime() + d.getTimezoneOffset() * 60000;\n  var msSinceStart = dateInMs - startDateMs;\n  var msPerHour = 60 * 60 * 1000 / TICK_UNIT;\n  return msSinceStart / msPerHour;\n}\n\nfunction GoTimeline(_ref) {\n  var model = _ref.model,\n      options = _ref.options,\n      id = _ref.id,\n      style = _ref.style,\n      onLoad = _ref.onLoad,\n      domProps = _objectWithoutProperties(_ref, [\"model\", \"options\", \"id\", \"style\", \"onLoad\"]);\n\n  useEffect(function () {\n    var parsedModel = model.map(function (item) {\n      return _objectSpread(_objectSpread({}, item), {}, {\n        date: parse(item.date)\n      });\n    });\n    var canOptions = typeof options === 'object';\n    var parsedModelDate = !canOptions && !isEmpty(parsedModel) && path(['0', 'date'], parsedModel).toLocaleDateString();\n    var parsedOptions = canOptions ? _objectSpread(_objectSpread({}, options), {}, {\n      start: parse(options.start),\n      end: parse(options.end)\n    }) : {\n      // default without options\n      size: 900,\n      start: parse(\"\".concat(parsedModelDate, \" 00:00:00\")),\n      end: parse(\"\".concat(parsedModelDate, \" 23:59:59\"))\n    };\n    var diagram = init(id, parsedModel, parsedOptions);\n    onLoad(diagram);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    id: id,\n    style: _objectSpread({\n      border: 'solid 1px black',\n      background: '#FFFFFF',\n      width: '100%',\n      height: '1200px'\n    }, style)\n  }, domProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }));\n}\n\nGoTimeline.propTypes = {\n  model: PropTypes.array.isRequired,\n  id: PropTypes.string,\n  onLoad: PropTypes.func\n};\nGoTimeline.defaultProps = {\n  model: {},\n  id: 'go-timeline-1',\n  onLoad: function onLoad() {}\n};\nexport default GoTimeline;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/components/Go/GoTimeline.js"],"names":["addHours","format","parse","go","isEmpty","PropTypes","path","React","useEffect","myDiagram","TICK_UNIT","init","id","model","options","size","$","GraphObject","make","Diagram","layout","TimelineLayout","isTreePathToChildren","nodeTemplate","Node","locationSpot","Spot","Center","movable","Panel","Shape","strokeWidth","Binding","color","TextBlock","row","wrap","WrapFit","font","textAlign","margin","stroke","d","nodeTemplateMap","add","copyable","resizable","background","graduatedMin","graduatedMax","graduatedTickUnit","length","geometryString","desiredSize","Size","interval","alignmentFocus","MiddleRight","segmentOrientation","Link","OrientMinus90","segmentOffset","Point","graduatedFunction","n","start","linkTemplate","BarLink","toShortLength","layerName","data","key","category","i","parent","TreeModel","nodeDataArray","Layout","call","inherit","prototype","doLayout","coll","diagram","collectParts","startTransaction","parts","it","iterator","line","next","part","value","push","x","date","undefined","Date","Error","location","spacing","lineSpacing","bnds","actualBounds","dt","val","dateToValue","pt","graduatedPointForValue","tempLoc","y","height","j","partRect","Rect","width","otherLoc","otherBnds","otherRect","intersectsRect","offset","commitTransaction","getLinkPoint","node","port","spot","from","ortho","othernode","otherport","r","getDocumentBounds","op","getDocumentPoint","main","findMainElement","mainOffY","top","left","right","centerX","bottom","timeline","findNodeDataForKey","startDate","startDateMs","getTime","getTimezoneOffset","dateInMs","msSinceStart","msPerHour","GoTimeline","style","onLoad","domProps","parsedModel","map","item","canOptions","parsedModelDate","toLocaleDateString","parsedOptions","end","border","propTypes","array","isRequired","string","func","defaultProps"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,QAAwC,UAAxC;AACA,OAAO,KAAKC,EAAZ,MAAoB,MAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,SAAJ;AAEA,IAAMC,SAAS,GAAG,CAAlB;;AAEA,SAASC,IAAT,CAAcC,EAAd,EAAuD;AAAA,MAArCC,KAAqC,uEAA7B,EAA6B;AAAA,MAAzBC,OAAyB,uEAAf;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAe;AACnD,MAAMC,CAAC,GAAGb,EAAE,CAACc,WAAH,CAAeC,IAAzB;AAEAT,EAAAA,SAAS,GAAGO,CAAC,CAACb,EAAE,CAACgB,OAAJ,EAAaP,EAAb,EAAiB;AAC1BQ,IAAAA,MAAM,EAAEJ,CAAC,CAACK,cAAD,CADiB;AAE1BC,IAAAA,oBAAoB,EAAE;AAFI,GAAjB,CAAb;AAKAb,EAAAA,SAAS,CAACc,YAAV,GAAyBP,CAAC,CACtBb,EAAE,CAACqB,IADmB,EAEtB,OAFsB,EAGtB;AAAEC,IAAAA,YAAY,EAAEtB,EAAE,CAACuB,IAAH,CAAQC,MAAxB;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAHsB,EAItBZ,CAAC,CACGb,EAAE,CAAC0B,KADN,EAEG,MAFH,EAGGb,CAAC,CACGb,EAAE,CAAC2B,KADN,EAEG,kBAFH,EAGG;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAHH,EAIG,IAAI5B,EAAE,CAAC6B,OAAP,CAAe,MAAf,EAAuB,OAAvB,EAAgC,UAASC,KAAT,EAAgB;AAC5C,WAAO3B,IAAI,CAAC,CAAC,OAAD,EAAU,MAAV,CAAD,EAAoB2B,KAApB,CAAJ,IAAkC,SAAzC;AACH,GAFD,CAJH,EAOG,IAAI9B,EAAE,CAAC6B,OAAP,CAAe,QAAf,EAAyB,OAAzB,EAAkC,UAASC,KAAT,EAAgB;AAC9C,WACI3B,IAAI,CAAC,CAAC,OAAD,EAAU,QAAV,CAAD,EAAsB2B,KAAtB,CAAJ,IACA3B,IAAI,CAAC,CAAC,OAAD,EAAU,MAAV,CAAD,EAAoB2B,KAApB,CADJ,IAEA,SAHJ;AAKH,GAND,CAPH,CAHJ,EAkBGjB,CAAC,CACGb,EAAE,CAAC0B,KADN,EAEG,OAFH,EAGGb,CAAC,CACGb,EAAE,CAAC+B,SADN,EAEG;AACIC,IAAAA,GAAG,EAAE,CADT;AAEIC,IAAAA,IAAI,EAAEjC,EAAE,CAAC+B,SAAH,CAAaG,OAFvB;AAGIC,IAAAA,IAAI,EAAE,wBAHV;AAIIC,IAAAA,SAAS,EAAE,QAJf;AAKIC,IAAAA,MAAM,EAAE;AALZ,GAFH,EASG,IAAIrC,EAAE,CAAC6B,OAAP,CAAe,QAAf,EAAyB,OAAzB,EAAkC,UAASC,KAAT,EAAgB;AAC9C,WAAO3B,IAAI,CAAC,CAAC,OAAD,EAAU,QAAV,CAAD,EAAsB2B,KAAtB,CAAJ,IAAoC,SAA3C;AACH,GAFD,CATH,EAYG,IAAI9B,EAAE,CAAC6B,OAAP,CAAe,MAAf,EAAuB,OAAvB,CAZH,CAHJ,EAiBGhB,CAAC,CACGb,EAAE,CAAC+B,SADN,EAEG;AACIC,IAAAA,GAAG,EAAE,CADT;AAEIM,IAAAA,MAAM,EAAE,MAFZ;AAGIF,IAAAA,SAAS,EAAE,QAHf;AAIIC,IAAAA,MAAM,EAAE;AAJZ,GAFH,EAQG,IAAIrC,EAAE,CAAC6B,OAAP,CAAe,QAAf,EAAyB,OAAzB,EAAkC,UAASC,KAAT,EAAgB;AAC9C,WAAO3B,IAAI,CAAC,CAAC,OAAD,EAAU,QAAV,CAAD,EAAsB2B,KAAtB,CAAJ,IAAoC,SAA3C;AACH,GAFD,CARH,EAWG,IAAI9B,EAAE,CAAC6B,OAAP,CAAe,MAAf,EAAuB,MAAvB,EAA+B,UAASU,CAAT,EAAY;AACvC,WAAOzC,MAAM,CAACyC,CAAD,EAAI,UAAJ,CAAb;AACH,GAFD,CAXH,CAjBJ,CAlBJ,CAJqB,CAA1B;AA0DAjC,EAAAA,SAAS,CAACkC,eAAV,CAA0BC,GAA1B,CACI,MADJ,EAEI5B,CAAC,CACGb,EAAE,CAACqB,IADN,EAEG,WAFH,EAGG;AACII,IAAAA,OAAO,EAAE,KADb;AAEIiB,IAAAA,QAAQ,EAAE,KAFd;AAGIC,IAAAA,SAAS,EAAE,KAHf;AAIIC,IAAAA,UAAU,EAAE,aAJhB;AAKIC,IAAAA,YAAY,EAAE,CALlB;AAMIC,IAAAA,YAAY,EAAE,KAAKvC,SANvB;AAOIwC,IAAAA,iBAAiB,EAAExC;AAPvB,GAHH,EAYG,IAAIP,EAAE,CAAC6B,OAAP,CAAe,cAAf,EAA+B,EAA/B,EAAmCnB,KAAK,CAACsC,MAAzC,CAZH,EAaGnC,CAAC,CAACb,EAAE,CAAC2B,KAAJ,EAAW;AACRsB,IAAAA,cAAc,EAAE,WADR;AAERC,IAAAA,WAAW,EAAE,IAAIlD,EAAE,CAACmD,IAAP,CAAYxC,OAAO,CAACC,IAApB,EAA0BD,OAAO,CAACC,IAAlC;AAFL,GAAX,CAbJ,EAiBGC,CAAC,CAACb,EAAE,CAAC2B,KAAJ,EAAW;AACRsB,IAAAA,cAAc,EAAE,UADR;AAERG,IAAAA,QAAQ,EAAE,CAFF;AAGRxB,IAAAA,WAAW,EAAE,CAHL,CAIR;;AAJQ,GAAX,CAjBJ,EAuBGf,CAAC,CAACb,EAAE,CAAC+B,SAAJ,EAAe;AACZqB,IAAAA,QAAQ,EAAE,CADE;AAEZC,IAAAA,cAAc,EAAErD,EAAE,CAACuB,IAAH,CAAQ+B,WAFZ;AAGZC,IAAAA,kBAAkB,EAAEvD,EAAE,CAACwD,IAAH,CAAQC,aAHhB;AAIZC,IAAAA,aAAa,EAAE,IAAI1D,EAAE,CAAC2D,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAJH;AAKZC,IAAAA,iBAAiB,EAAE,2BAAAC,CAAC,EAAI;AACpB,aAAO/D,MAAM,CACTD,QAAQ,CAACc,OAAO,CAACmD,KAAT,EAAgBD,CAAC,GAAGtD,SAApB,CADC,EAET,kBAFS,CAAb;AAIH;AAVW,GAAf,CAvBJ,CAFL,EAlEmD,CA0GnD;;AACAD,EAAAA,SAAS,CAACyD,YAAV,GAAyBlD,CAAC,CACtBmD,OADsB,EACb;AACT;AAAEC,IAAAA,aAAa,EAAE,CAAjB;AAAoBC,IAAAA,SAAS,EAAE;AAA/B,GAFsB,EAGtBrD,CAAC,CAACb,EAAE,CAAC2B,KAAJ,EAAW;AAAEW,IAAAA,MAAM,EAAE,SAAV;AAAqBV,IAAAA,WAAW,EAAE;AAAlC,GAAX,CAHqB,CAA1B,CA3GmD,CAgHnD;AACA;;AACA,MAAMuC,IAAI;AAEF;AACAC,IAAAA,GAAG,EAAE,UAHH;AAIFC,IAAAA,QAAQ,EAAE,MAJR;AAKF;AACArB,IAAAA,MAAM,EAAErC,OAAO,CAACC;AANd,KAOCD,OAPD,6BAYHD,KAZG,EAAV,CAlHmD,CAgInD;;AACA,OAAK,IAAI4D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACnB,MAAzB,EAAiCsB,CAAC,EAAlC,EAAsC;AAClC,QAAM/B,CAAC,GAAG4B,IAAI,CAACG,CAAD,CAAd;AACA,QAAI/B,CAAC,CAAC6B,GAAF,KAAU,UAAd,EAA0B7B,CAAC,CAACgC,MAAF,GAAW,UAAX;AAC7B;;AACDjE,EAAAA,SAAS,CAACI,KAAV,GAAkBG,CAAC,CAACb,EAAE,CAACwE,SAAJ,EAAe;AAAEC,IAAAA,aAAa,EAAEN;AAAjB,GAAf,CAAnB;AAEA,SAAO7D,SAAP;AACH,C,CAED;AACA;AACA;;;AACA,SAASY,cAAT,GAA0B;AACtBlB,EAAAA,EAAE,CAAC0E,MAAH,CAAUC,IAAV,CAAe,IAAf;AACH;;AACD3E,EAAE,CAACgB,OAAH,CAAW4D,OAAX,CAAmB1D,cAAnB,EAAmClB,EAAE,CAAC0E,MAAtC;;AACAxD,cAAc,CAAC2D,SAAf,CAAyBC,QAAzB,GAAoC,UAASC,IAAT,EAAe;AAC/C,MAAMC,OAAO,GAAG,KAAKA,OAArB;AACA,MAAIA,OAAO,KAAK,IAAhB,EAAsB;AAEtBD,EAAAA,IAAI,GAAG,KAAKE,YAAL,CAAkBF,IAAlB,CAAP;AACAC,EAAAA,OAAO,CAACE,gBAAR,CAAyB,gBAAzB;AAEA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,EAAE,GAAGL,IAAI,CAACM,QAAhB;AAEA,MAAIC,IAAI,GAAG,IAAX;;AAEA,SAAOF,EAAE,CAACG,IAAH,EAAP,EAAkB;AACd,QAAMC,IAAI,GAAGJ,EAAE,CAACK,KAAhB;AACA,QAAID,IAAI,YAAYxF,EAAE,CAACwD,IAAvB,EAA6B;;AAC7B,QAAIgC,IAAI,CAACnB,QAAL,KAAkB,MAAtB,EAA8B;AAC1BiB,MAAAA,IAAI,GAAGE,IAAP;AACA;AACH;;AACDL,IAAAA,KAAK,CAACO,IAAN,CAAWF,IAAX;AACA,QAAIG,CAAC,GAAGH,IAAI,CAACrB,IAAL,CAAUyB,IAAlB;;AACA,QAAID,CAAC,KAAKE,SAAV,EAAqB;AACjBF,MAAAA,CAAC,GAAG,IAAIG,IAAJ,EAAJ;AACAN,MAAAA,IAAI,CAACrB,IAAL,CAAUyB,IAAV,GAAiBD,CAAjB;AACH;AACJ;;AACD,MAAI,CAACL,IAAL,EAAW,MAAMS,KAAK,CAAC,+CAAD,CAAX;AACXT,EAAAA,IAAI,CAACU,QAAL,GAAgB,IAAIhG,EAAE,CAAC2D,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAhB,CA3B+C,CA4B/C;;AACA,MAAIwB,KAAK,CAACnC,MAAN,GAAe,CAAnB,EAAsB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,QAAIiD,OAAO,GAAGX,IAAI,CAACnB,IAAL,CAAU+B,WAAxB;AACA,QAAI,CAACD,OAAL,EAAcA,OAAO,GAAG,EAAV;;AACd,SAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,KAAK,CAACnC,MAA1B,EAAkCsB,CAAC,EAAnC,EAAuC;AACnC,UAAMkB,KAAI,GAAGL,KAAK,CAACb,CAAD,CAAlB;AACA,UAAM6B,IAAI,GAAGX,KAAI,CAACY,YAAlB;AACA,UAAMC,EAAE,GAAGb,KAAI,CAACrB,IAAL,CAAUyB,IAArB;AACA,UAAMU,GAAG,GAAGC,WAAW,CAACF,EAAD,EAAKlB,KAAL,CAAvB;AACA,UAAMqB,EAAE,GAAGlB,IAAI,CAACmB,sBAAL,CAA4BH,GAA5B,CAAX;AACA,UAAMI,OAAO,GAAG,IAAI1G,EAAE,CAAC2D,KAAP,CACZ6C,EAAE,CAACb,CADS,EAEZa,EAAE,CAACG,CAAH,GAAOR,IAAI,CAACS,MAAL,GAAc,CAArB,GAAyBX,OAFb,CAAhB,CANmC,CAUnC;;AACA,WAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvC,CAApB,EAAuBuC,CAAC,EAAxB,EAA4B;AACxB,YAAMC,QAAQ,GAAG,IAAI9G,EAAE,CAAC+G,IAAP,CACbL,OAAO,CAACf,CADK,EAEbe,OAAO,CAACC,CAFK,EAGbR,IAAI,CAACa,KAHQ,EAIbb,IAAI,CAACS,MAJQ,CAAjB;AAMA,YAAMK,QAAQ,GAAG9B,KAAK,CAAC0B,CAAD,CAAL,CAASb,QAA1B;AACA,YAAMkB,SAAS,GAAG/B,KAAK,CAAC0B,CAAD,CAAL,CAAST,YAA3B;AACA,YAAMe,SAAS,GAAG,IAAInH,EAAE,CAAC+G,IAAP,CACdE,QAAQ,CAACtB,CADK,EAEdsB,QAAQ,CAACN,CAFK,EAGdO,SAAS,CAACF,KAHI,EAIdE,SAAS,CAACN,MAJI,CAAlB;;AAMA,YAAIE,QAAQ,CAACM,cAAT,CAAwBD,SAAxB,CAAJ,EAAwC;AACpCT,UAAAA,OAAO,CAACW,MAAR,CAAe,CAAf,EAAkB,CAACH,SAAS,CAACN,MAAX,GAAoB,EAAtC;AACAC,UAAAA,CAAC,GAAG,CAAJ,CAFoC,CAE7B;AACV;AACJ;;AACDrB,MAAAA,KAAI,CAACQ,QAAL,GAAgBU,OAAhB;AACH;AACJ;;AACD1B,EAAAA,OAAO,CAACsC,iBAAR,CAA0B,gBAA1B;AACH,CAzED,C,CA2EA;AACA;;;AACA,SAAStD,OAAT,GAAmB;AACfhE,EAAAA,EAAE,CAACwD,IAAH,CAAQmB,IAAR,CAAa,IAAb;AACH;;AACD3E,EAAE,CAACgB,OAAH,CAAW4D,OAAX,CAAmBZ,OAAnB,EAA4BhE,EAAE,CAACwD,IAA/B;;AACAQ,OAAO,CAACa,SAAR,CAAkB0C,YAAlB,GAAiC,UAC7BC,IAD6B,EAE7BC,IAF6B,EAG7BC,IAH6B,EAI7BC,IAJ6B,EAK7BC,KAL6B,EAM7BC,SAN6B,EAO7BC,SAP6B,EAQ/B;AACE,MAAMC,CAAC,GAAGN,IAAI,CAACO,iBAAL,EAAV;AACA,MAAMC,EAAE,GAAGH,SAAS,CAACI,gBAAV,CAA2BlI,EAAE,CAACuB,IAAH,CAAQC,MAAnC,CAAX;AACA,MAAM2G,IAAI,GACNX,IAAI,CAACnD,QAAL,KAAkB,MAAlB,GACMmD,IAAI,CAACY,eAAL,EADN,GAEMP,SAAS,CAACO,eAAV,EAHV;AAIA,MAAMC,QAAQ,GAAGF,IAAI,CAAC/B,YAAL,CAAkBO,CAAnC;AACA,MAAIA,CAAC,GAAGoB,CAAC,CAACO,GAAV;;AACA,MAAId,IAAI,CAACnD,QAAL,KAAkB,MAAtB,EAA8B;AAC1BsC,IAAAA,CAAC,IAAI0B,QAAL;AACA,QAAIJ,EAAE,CAACtC,CAAH,GAAOoC,CAAC,CAACQ,IAAb,EAAmB,OAAO,IAAIvI,EAAE,CAAC2D,KAAP,CAAaoE,CAAC,CAACQ,IAAf,EAAqB5B,CAArB,CAAP;AACnB,QAAIsB,EAAE,CAACtC,CAAH,GAAOoC,CAAC,CAACS,KAAb,EAAoB,OAAO,IAAIxI,EAAE,CAAC2D,KAAP,CAAaoE,CAAC,CAACS,KAAf,EAAsB7B,CAAtB,CAAP;AACpB,WAAO,IAAI3G,EAAE,CAAC2D,KAAP,CAAasE,EAAE,CAACtC,CAAhB,EAAmBgB,CAAnB,CAAP;AACH,GALD,MAKO;AACH,WAAO,IAAI3G,EAAE,CAAC2D,KAAP,CAAaoE,CAAC,CAACU,OAAf,EAAwBV,CAAC,CAACW,MAA1B,CAAP;AACH;AACJ,CAzBD,C,CA0BA;;;AAEA,SAASnC,WAAT,CAAqBhE,CAArB,EAAwB4C,KAAxB,EAA+B;AAC3B,MAAMwD,QAAQ,GAAGrI,SAAS,CAACI,KAAV,CAAgBkI,kBAAhB,CAAmC,UAAnC,CAAjB;AACA,MAAMC,SAAS,GAAGF,QAAQ,CAAC7E,KAA3B;AACA,MAAMgF,WAAW,GACbD,SAAS,CAACE,OAAV,KAAsBF,SAAS,CAACG,iBAAV,KAAgC,KAD1D;AAEA,MAAMC,QAAQ,GAAG1G,CAAC,CAACwG,OAAF,KAAcxG,CAAC,CAACyG,iBAAF,KAAwB,KAAvD;AACA,MAAME,YAAY,GAAGD,QAAQ,GAAGH,WAAhC;AACA,MAAMK,SAAS,GAAI,KAAK,EAAL,GAAU,IAAX,GAAmB5I,SAArC;AAEA,SAAO2I,YAAY,GAAGC,SAAtB;AACH;;AAED,SAASC,UAAT,OAAwE;AAAA,MAAlD1I,KAAkD,QAAlDA,KAAkD;AAAA,MAA3CC,OAA2C,QAA3CA,OAA2C;AAAA,MAAlCF,EAAkC,QAAlCA,EAAkC;AAAA,MAA9B4I,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAZC,QAAY;;AACpElJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMmJ,WAAW,GAAG9I,KAAK,CAAC+I,GAAN,CAAU,UAAAC,IAAI,EAAI;AAClC,6CACOA,IADP;AAEI9D,QAAAA,IAAI,EAAE7F,KAAK,CAAC2J,IAAI,CAAC9D,IAAN;AAFf;AAIH,KALmB,CAApB;AAOA,QAAM+D,UAAU,GAAG,OAAOhJ,OAAP,KAAmB,QAAtC;AACA,QAAMiJ,eAAe,GACjB,CAACD,UAAD,IACA,CAAC1J,OAAO,CAACuJ,WAAD,CADR,IAEArJ,IAAI,CAAC,CAAC,GAAD,EAAM,MAAN,CAAD,EAAgBqJ,WAAhB,CAAJ,CAAiCK,kBAAjC,EAHJ;AAKA,QAAMC,aAAa,GAAGH,UAAU,mCAEnBhJ,OAFmB;AAGtBmD,MAAAA,KAAK,EAAE/D,KAAK,CAACY,OAAO,CAACmD,KAAT,CAHU;AAItBiG,MAAAA,GAAG,EAAEhK,KAAK,CAACY,OAAO,CAACoJ,GAAT;AAJY,SAM1B;AACI;AACAnJ,MAAAA,IAAI,EAAE,GAFV;AAGIkD,MAAAA,KAAK,EAAE/D,KAAK,WAAI6J,eAAJ,eAHhB;AAIIG,MAAAA,GAAG,EAAEhK,KAAK,WAAI6J,eAAJ;AAJd,KANN;AAYA,QAAM5E,OAAO,GAAGxE,IAAI,CAACC,EAAD,EAAK+I,WAAL,EAAkBM,aAAlB,CAApB;AACAR,IAAAA,MAAM,CAACtE,OAAD,CAAN;AACH,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,sBACI;AACI,IAAA,EAAE,EAAEvE,EADR;AAEI,IAAA,KAAK;AACDuJ,MAAAA,MAAM,EAAE,iBADP;AAEDpH,MAAAA,UAAU,EAAE,SAFX;AAGDoE,MAAAA,KAAK,EAAE,MAHN;AAIDJ,MAAAA,MAAM,EAAE;AAJP,OAKEyC,KALF;AAFT,KASQE,QATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAaH;;AAEDH,UAAU,CAACa,SAAX,GAAuB;AACnBvJ,EAAAA,KAAK,EAAER,SAAS,CAACgK,KAAV,CAAgBC,UADJ;AAEnB1J,EAAAA,EAAE,EAAEP,SAAS,CAACkK,MAFK;AAGnBd,EAAAA,MAAM,EAAEpJ,SAAS,CAACmK;AAHC,CAAvB;AAMAjB,UAAU,CAACkB,YAAX,GAA0B;AACtB5J,EAAAA,KAAK,EAAE,EADe;AAEtBD,EAAAA,EAAE,EAAE,eAFkB;AAGtB6I,EAAAA,MAAM,EAAE,kBAAM,CAAE;AAHM,CAA1B;AAMA,eAAeF,UAAf","sourcesContent":["import { addHours, format, parse } from 'date-fns';\r\nimport * as go from 'gojs';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport PropTypes from 'prop-types';\r\nimport { path } from 'ramda';\r\nimport React, { useEffect } from 'react';\r\n\r\nlet myDiagram;\r\n\r\nconst TICK_UNIT = 2;\r\n\r\nfunction init(id, model = [], options = { size: 800 }) {\r\n    const $ = go.GraphObject.make;\r\n\r\n    myDiagram = $(go.Diagram, id, {\r\n        layout: $(TimelineLayout),\r\n        isTreePathToChildren: false,\r\n    });\r\n\r\n    myDiagram.nodeTemplate = $(\r\n        go.Node,\r\n        'Table',\r\n        { locationSpot: go.Spot.Center, movable: false },\r\n        $(\r\n            go.Panel,\r\n            'Auto',\r\n            $(\r\n                go.Shape,\r\n                'RoundedRectangle',\r\n                { strokeWidth: 3 },\r\n                new go.Binding('fill', 'color', function(color) {\r\n                    return path(['shape', 'fill'], color) || '#519ABA';\r\n                }),\r\n                new go.Binding('stroke', 'color', function(color) {\r\n                    return (\r\n                        path(['shape', 'stroke'], color) ||\r\n                        path(['shape', 'fill'], color) ||\r\n                        '#519ABA'\r\n                    );\r\n                })\r\n            ),\r\n            $(\r\n                go.Panel,\r\n                'Table',\r\n                $(\r\n                    go.TextBlock,\r\n                    {\r\n                        row: 0,\r\n                        wrap: go.TextBlock.WrapFit,\r\n                        font: 'Italic 10pt sans-serif',\r\n                        textAlign: 'center',\r\n                        margin: 4,\r\n                    },\r\n                    new go.Binding('stroke', 'color', function(color) {\r\n                        return path(['event', 'stroke'], color) || '#FFFFFF';\r\n                    }),\r\n                    new go.Binding('text', 'event')\r\n                ),\r\n                $(\r\n                    go.TextBlock,\r\n                    {\r\n                        row: 1,\r\n                        stroke: '#fff',\r\n                        textAlign: 'center',\r\n                        margin: 4,\r\n                    },\r\n                    new go.Binding('stroke', 'color', function(color) {\r\n                        return path(['event', 'stroke'], color) || '#FFFFFF';\r\n                    }),\r\n                    new go.Binding('text', 'date', function(d) {\r\n                        return format(d, 'HH:mm:ss');\r\n                    })\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n        'Line',\r\n        $(\r\n            go.Node,\r\n            'Graduated',\r\n            {\r\n                movable: false,\r\n                copyable: false,\r\n                resizable: false,\r\n                background: 'transparent',\r\n                graduatedMin: 0,\r\n                graduatedMax: 24 * TICK_UNIT,\r\n                graduatedTickUnit: TICK_UNIT,\r\n            },\r\n            new go.Binding('graduatedMax', '', model.length),\r\n            $(go.Shape, {\r\n                geometryString: 'M0 0 H400',\r\n                desiredSize: new go.Size(options.size, options.size),\r\n            }),\r\n            $(go.Shape, {\r\n                geometryString: 'M0 0 V12',\r\n                interval: 1,\r\n                strokeWidth: 2,\r\n                // alignmentFocus: go.Spot.Bottom,\r\n            }),\r\n            $(go.TextBlock, {\r\n                interval: 1,\r\n                alignmentFocus: go.Spot.MiddleRight,\r\n                segmentOrientation: go.Link.OrientMinus90,\r\n                segmentOffset: new go.Point(0, 16),\r\n                graduatedFunction: n => {\r\n                    return format(\r\n                        addHours(options.start, n / TICK_UNIT),\r\n                        'YYYY.MM.DD HH:mm'\r\n                    );\r\n                },\r\n            })\r\n        )\r\n    );\r\n\r\n    // The template for the link connecting the event node with the timeline bar node:\r\n    myDiagram.linkTemplate = $(\r\n        BarLink, // defined below\r\n        { toShortLength: 2, layerName: 'Background' },\r\n        $(go.Shape, { stroke: '#BBBBBB', strokeWidth: 2 })\r\n    );\r\n    // Setup the model data -- an object describing the timeline bar node\r\n    // and an object for each event node:\r\n    const data = [\r\n        {\r\n            // this defines the actual time \"Line\" bar\r\n            key: 'timeline',\r\n            category: 'Line',\r\n            // lineSpacing: 30, // distance between timeline and event nodes\r\n            length: options.size, // the width of the timeline\r\n            ...options,\r\n        },\r\n        // the rest are just \"events\" --\r\n        // you can add as much information as you want on each and extend the\r\n        // default nodeTemplate to show as much information as you want\r\n        ...model,\r\n    ];\r\n    // prepare the model by adding links to the Line\r\n    for (let i = 0; i < data.length; i++) {\r\n        const d = data[i];\r\n        if (d.key !== 'timeline') d.parent = 'timeline';\r\n    }\r\n    myDiagram.model = $(go.TreeModel, { nodeDataArray: data });\r\n\r\n    return myDiagram;\r\n}\r\n\r\n// This custom Layout locates the timeline bar at (0,0)\r\n// and alternates the event Nodes above and below the bar at\r\n// the X-coordinate locations determined by their data.date values.\r\nfunction TimelineLayout() {\r\n    go.Layout.call(this);\r\n}\r\ngo.Diagram.inherit(TimelineLayout, go.Layout);\r\nTimelineLayout.prototype.doLayout = function(coll) {\r\n    const diagram = this.diagram;\r\n    if (diagram === null) return;\r\n\r\n    coll = this.collectParts(coll);\r\n    diagram.startTransaction('TimelineLayout');\r\n\r\n    const parts = [];\r\n    const it = coll.iterator;\r\n\r\n    let line = null;\r\n\r\n    while (it.next()) {\r\n        const part = it.value;\r\n        if (part instanceof go.Link) continue;\r\n        if (part.category === 'Line') {\r\n            line = part;\r\n            continue;\r\n        }\r\n        parts.push(part);\r\n        let x = part.data.date;\r\n        if (x === undefined) {\r\n            x = new Date();\r\n            part.data.date = x;\r\n        }\r\n    }\r\n    if (!line) throw Error(\"No node of category 'Line' for TimelineLayout\");\r\n    line.location = new go.Point(0, 0);\r\n    // lay out the events above the timeline\r\n    if (parts.length > 0) {\r\n        // determine the offset from the main shape to the timeline's boundaries\r\n        // const main = line.findMainElement();\r\n        // const sw = main.strokeWidth;\r\n        // const mainOffX = main.actualBounds.x;\r\n        // const mainOffY = main.actualBounds.y;\r\n        // spacing is between the Line and the closest Nodes, defaults to 30\r\n        let spacing = line.data.lineSpacing;\r\n        if (!spacing) spacing = 30;\r\n        for (let i = 0; i < parts.length; i++) {\r\n            const part = parts[i];\r\n            const bnds = part.actualBounds;\r\n            const dt = part.data.date;\r\n            const val = dateToValue(dt, parts);\r\n            const pt = line.graduatedPointForValue(val);\r\n            const tempLoc = new go.Point(\r\n                pt.x,\r\n                pt.y - bnds.height / 2 - spacing\r\n            );\r\n            // check if this node will overlap with previously placed events, and offset if needed\r\n            for (let j = 0; j < i; j++) {\r\n                const partRect = new go.Rect(\r\n                    tempLoc.x,\r\n                    tempLoc.y,\r\n                    bnds.width,\r\n                    bnds.height\r\n                );\r\n                const otherLoc = parts[j].location;\r\n                const otherBnds = parts[j].actualBounds;\r\n                const otherRect = new go.Rect(\r\n                    otherLoc.x,\r\n                    otherLoc.y,\r\n                    otherBnds.width,\r\n                    otherBnds.height\r\n                );\r\n                if (partRect.intersectsRect(otherRect)) {\r\n                    tempLoc.offset(0, -otherBnds.height - 10);\r\n                    j = 0; // now that we have a new location, we need to recheck in case we overlap with an event we didn't overlap before\r\n                }\r\n            }\r\n            part.location = tempLoc;\r\n        }\r\n    }\r\n    diagram.commitTransaction('TimelineLayout');\r\n};\r\n\r\n// end TimelineLayout class\r\n// This custom Link class was adapted from several of the samples\r\nfunction BarLink() {\r\n    go.Link.call(this);\r\n}\r\ngo.Diagram.inherit(BarLink, go.Link);\r\nBarLink.prototype.getLinkPoint = function(\r\n    node,\r\n    port,\r\n    spot,\r\n    from,\r\n    ortho,\r\n    othernode,\r\n    otherport\r\n) {\r\n    const r = port.getDocumentBounds();\r\n    const op = otherport.getDocumentPoint(go.Spot.Center);\r\n    const main =\r\n        node.category === 'Line'\r\n            ? node.findMainElement()\r\n            : othernode.findMainElement();\r\n    const mainOffY = main.actualBounds.y;\r\n    let y = r.top;\r\n    if (node.category === 'Line') {\r\n        y += mainOffY;\r\n        if (op.x < r.left) return new go.Point(r.left, y);\r\n        if (op.x > r.right) return new go.Point(r.right, y);\r\n        return new go.Point(op.x, y);\r\n    } else {\r\n        return new go.Point(r.centerX, r.bottom);\r\n    }\r\n};\r\n// end BarLink class\r\n\r\nfunction dateToValue(d, parts) {\r\n    const timeline = myDiagram.model.findNodeDataForKey('timeline');\r\n    const startDate = timeline.start;\r\n    const startDateMs =\r\n        startDate.getTime() + startDate.getTimezoneOffset() * 60000;\r\n    const dateInMs = d.getTime() + d.getTimezoneOffset() * 60000;\r\n    const msSinceStart = dateInMs - startDateMs;\r\n    const msPerHour = (60 * 60 * 1000) / TICK_UNIT;\r\n\r\n    return msSinceStart / msPerHour;\r\n}\r\n\r\nfunction GoTimeline({ model, options, id, style, onLoad, ...domProps }) {\r\n    useEffect(() => {\r\n        const parsedModel = model.map(item => {\r\n            return {\r\n                ...item,\r\n                date: parse(item.date),\r\n            };\r\n        });\r\n\r\n        const canOptions = typeof options === 'object';\r\n        const parsedModelDate =\r\n            !canOptions &&\r\n            !isEmpty(parsedModel) &&\r\n            path(['0', 'date'], parsedModel).toLocaleDateString();\r\n\r\n        const parsedOptions = canOptions\r\n            ? {\r\n                  ...options,\r\n                  start: parse(options.start),\r\n                  end: parse(options.end),\r\n              }\r\n            : {\r\n                  // default without options\r\n                  size: 900,\r\n                  start: parse(`${parsedModelDate} 00:00:00`),\r\n                  end: parse(`${parsedModelDate} 23:59:59`),\r\n              };\r\n        const diagram = init(id, parsedModel, parsedOptions);\r\n        onLoad(diagram);\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            id={id}\r\n            style={{\r\n                border: 'solid 1px black',\r\n                background: '#FFFFFF',\r\n                width: '100%',\r\n                height: '1200px',\r\n                ...style,\r\n            }}\r\n            {...domProps}\r\n        />\r\n    );\r\n}\r\n\r\nGoTimeline.propTypes = {\r\n    model: PropTypes.array.isRequired,\r\n    id: PropTypes.string,\r\n    onLoad: PropTypes.func,\r\n};\r\n\r\nGoTimeline.defaultProps = {\r\n    model: {},\r\n    id: 'go-timeline-1',\r\n    onLoad: () => {},\r\n};\r\n\r\nexport default GoTimeline;\r\n"]},"metadata":{},"sourceType":"module"}