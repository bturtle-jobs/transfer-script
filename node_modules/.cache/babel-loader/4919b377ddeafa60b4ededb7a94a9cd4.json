{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\owp\\\\src\\\\@fuse\\\\components\\\\FuseHighlight\\\\FuseHighlight.js\";\nimport React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport * as Prism from 'prismjs';\nimport './prism-languages';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  component: PropTypes.node\n};\nvar defaultProps = {\n  component: \"code\"\n};\n\nvar styles = function styles(theme) {\n  return {\n    root: {}\n  };\n};\n\nvar FuseHighlight = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FuseHighlight, _PureComponent);\n\n  var _super = _createSuper(FuseHighlight);\n\n  function FuseHighlight(props) {\n    var _this;\n\n    _classCallCheck(this, FuseHighlight);\n\n    _this = _super.call(this, props);\n\n    _this.handleRefMount = function (domNode) {\n      _this.domNode = domNode;\n    };\n\n    _this.trimCode();\n\n    return _this;\n  }\n\n  _createClass(FuseHighlight, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.highlight();\n    }\n  }, {\n    key: \"trimCode\",\n    value: function trimCode() {\n      // Split the source into lines\n      var sourceLines = this.props.children.split('\\n'); // Remove the first and the last line of the source\n      // code if they are blank lines. This way, the html\n      // can be formatted properly while using fuse-highlight\n      // component\n\n      if (!sourceLines[0].trim()) {\n        sourceLines.shift();\n      }\n\n      if (!sourceLines[sourceLines.length - 1].trim()) {\n        sourceLines.pop();\n      } // Find the first non-whitespace char index in\n      // the first line of the source code\n\n\n      var indexOfFirstChar = sourceLines[0].search(/\\S|$/); // Generate the trimmed source\n\n      var source = ''; // Iterate through all the lines\n\n      sourceLines.forEach(function (line, index) {\n        // Trim the beginning white space depending on the index\n        // and concat the source code\n        source = source + line.substr(indexOfFirstChar, line.length); // If it's not the last line...\n\n        if (index !== sourceLines.length - 1) {\n          // Add a line break at the end\n          source = source + '\\n';\n        }\n      });\n      this.source = source;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.highlight();\n    }\n  }, {\n    key: \"highlight\",\n    value: function highlight() {\n      Prism.highlightElement(this.domNode, this.props.async);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          Wrapper = _this$props.component;\n      return /*#__PURE__*/React.createElement(Wrapper, {\n        ref: this.handleRefMount,\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, this.source);\n    }\n  }]);\n\n  return FuseHighlight;\n}(PureComponent);\n\nFuseHighlight.propTypes = propTypes;\nFuseHighlight.defaultProps = defaultProps;\nexport default withStyles(styles)(FuseHighlight);","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/@fuse/components/FuseHighlight/FuseHighlight.js"],"names":["React","PureComponent","withStyles","Prism","PropTypes","propTypes","component","node","defaultProps","styles","theme","root","FuseHighlight","props","handleRefMount","domNode","trimCode","highlight","sourceLines","children","split","trim","shift","length","pop","indexOfFirstChar","search","source","forEach","line","index","substr","highlightElement","async","className","Wrapper"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAEF,SAAS,CAACG;AADP,CAAlB;AAIA,IAAMC,YAAY,GAAG;AACjBF,EAAAA,SAAS;AADQ,CAArB;;AAIA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AADe,GAAL;AAAA,CAApB;;IAIMC,a;;;;;AAEF,yBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,8BAAMA,KAAN;;AADJ,UA+DAC,cA/DA,GA+DiB,UAAAC,OAAO,EAAI;AACxB,YAAKA,OAAL,GAAeA,OAAf;AACH,KAjED;;AAEI,UAAKC,QAAL;;AAFJ;AAGC;;;;WAED,6BACA;AACI,WAAKC,SAAL;AACH;;;WAED,oBACA;AACI;AACA,UAAMC,WAAW,GAAG,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,KAApB,CAA0B,IAA1B,CAApB,CAFJ,CAII;AACA;AACA;AACA;;AACA,UAAK,CAACF,WAAW,CAAC,CAAD,CAAX,CAAeG,IAAf,EAAN,EACA;AACIH,QAAAA,WAAW,CAACI,KAAZ;AACH;;AAED,UAAK,CAACJ,WAAW,CAACA,WAAW,CAACK,MAAZ,GAAqB,CAAtB,CAAX,CAAoCF,IAApC,EAAN,EACA;AACIH,QAAAA,WAAW,CAACM,GAAZ;AACH,OAhBL,CAkBI;AACA;;;AACA,UAAMC,gBAAgB,GAAGP,WAAW,CAAC,CAAD,CAAX,CAAeQ,MAAf,CAAsB,MAAtB,CAAzB,CApBJ,CAsBI;;AACA,UAAIC,MAAM,GAAG,EAAb,CAvBJ,CAyBI;;AACAT,MAAAA,WAAW,CAACU,OAAZ,CAAoB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAEjC;AACA;AACAH,QAAAA,MAAM,GAAGA,MAAM,GAAGE,IAAI,CAACE,MAAL,CAAYN,gBAAZ,EAA8BI,IAAI,CAACN,MAAnC,CAAlB,CAJiC,CAMjC;;AACA,YAAKO,KAAK,KAAKZ,WAAW,CAACK,MAAZ,GAAqB,CAApC,EACA;AACI;AACAI,UAAAA,MAAM,GAAGA,MAAM,GAAG,IAAlB;AACH;AACJ,OAZD;AAaA,WAAKA,MAAL,GAAcA,MAAd;AACH;;;WAED,8BACA;AACI,WAAKV,SAAL;AACH;;;WAED,qBACA;AACId,MAAAA,KAAK,CAAC6B,gBAAN,CAAuB,KAAKjB,OAA5B,EAAqC,KAAKF,KAAL,CAAWoB,KAAhD;AACH;;;WAMD,kBACA;AAAA,wBAC4C,KAAKpB,KADjD;AAAA,UACWqB,SADX,eACWA,SADX;AAAA,UACiCC,OADjC,eACsB7B,SADtB;AAGI,0BACI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAE,KAAKQ,cAAnB;AAAmC,QAAA,SAAS,EAAEoB,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKP,MADV,CADJ;AAKH;;;;EA/EuB1B,a;;AAkF5BW,aAAa,CAACP,SAAd,GAA0BA,SAA1B;AACAO,aAAa,CAACJ,YAAd,GAA6BA,YAA7B;AAEA,eAAeN,UAAU,CAACO,MAAD,CAAV,CAAmBG,aAAnB,CAAf","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport {withStyles} from '@material-ui/core';\r\nimport * as Prism from 'prismjs';\r\nimport './prism-languages';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    component: PropTypes.node\r\n};\r\n\r\nconst defaultProps = {\r\n    component: `code`\r\n};\r\n\r\nconst styles = theme => ({\r\n    root: {}\r\n});\r\n\r\nclass FuseHighlight extends PureComponent {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.trimCode();\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.highlight()\r\n    }\r\n\r\n    trimCode()\r\n    {\r\n        // Split the source into lines\r\n        const sourceLines = this.props.children.split('\\n');\r\n\r\n        // Remove the first and the last line of the source\r\n        // code if they are blank lines. This way, the html\r\n        // can be formatted properly while using fuse-highlight\r\n        // component\r\n        if ( !sourceLines[0].trim() )\r\n        {\r\n            sourceLines.shift();\r\n        }\r\n\r\n        if ( !sourceLines[sourceLines.length - 1].trim() )\r\n        {\r\n            sourceLines.pop();\r\n        }\r\n\r\n        // Find the first non-whitespace char index in\r\n        // the first line of the source code\r\n        const indexOfFirstChar = sourceLines[0].search(/\\S|$/);\r\n\r\n        // Generate the trimmed source\r\n        let source = '';\r\n\r\n        // Iterate through all the lines\r\n        sourceLines.forEach((line, index) => {\r\n\r\n            // Trim the beginning white space depending on the index\r\n            // and concat the source code\r\n            source = source + line.substr(indexOfFirstChar, line.length);\r\n\r\n            // If it's not the last line...\r\n            if ( index !== sourceLines.length - 1 )\r\n            {\r\n                // Add a line break at the end\r\n                source = source + '\\n';\r\n            }\r\n        });\r\n        this.source = source;\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        this.highlight()\r\n    }\r\n\r\n    highlight()\r\n    {\r\n        Prism.highlightElement(this.domNode, this.props.async)\r\n    }\r\n\r\n    handleRefMount = domNode => {\r\n        this.domNode = domNode\r\n    };\r\n\r\n    render()\r\n    {\r\n        const {className, component: Wrapper} = this.props;\r\n\r\n        return (\r\n            <Wrapper ref={this.handleRefMount} className={className}>\r\n                {this.source}\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nFuseHighlight.propTypes = propTypes;\r\nFuseHighlight.defaultProps = defaultProps;\r\n\r\nexport default withStyles(styles)(FuseHighlight);\r\n"]},"metadata":{},"sourceType":"module"}