{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport throttle from 'lodash/throttle';\nimport { useEffect, useState } from 'react';\nvar defaultEvents = ['load', 'mousemove', 'mousedown', 'resize', 'keydown', 'touchstart', 'wheel'];\nvar TEN_MIN = 1000 * 60 * 10;\n\nvar useIdle = function useIdle() {\n  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TEN_MIN;\n  var shouldRun = arguments.length > 1 ? arguments[1] : undefined;\n  var onIdle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n  var events = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaultEvents;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isIdle = _useState2[0],\n      setIsIdle = _useState2[1];\n\n  useEffect(function () {\n    var timeoutId = null;\n    var handleEvent = throttle(function () {\n      setIsIdle(false);\n\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(function () {\n        setIsIdle(function () {\n          onIdle(true);\n          return true;\n        });\n      }, timeout);\n    }, 10000);\n\n    if (shouldRun) {\n      events.forEach(function (event) {\n        window.addEventListener(event, handleEvent, false);\n      });\n    } else {\n      events.forEach(function (event) {\n        window.removeEventListener(event, handleEvent);\n      });\n    }\n\n    return function () {\n      events.forEach(function (event) {\n        window.removeEventListener(event, handleEvent);\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeout, shouldRun]);\n  return isIdle;\n};\n\nexport default useIdle;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/hooks/useIdle.js"],"names":["throttle","useEffect","useState","defaultEvents","TEN_MIN","useIdle","timeout","shouldRun","onIdle","events","isIdle","setIsIdle","timeoutId","handleEvent","clearTimeout","setTimeout","forEach","event","window","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,IAAMC,aAAa,GAAG,CAClB,MADkB,EAElB,WAFkB,EAGlB,WAHkB,EAIlB,QAJkB,EAKlB,SALkB,EAMlB,YANkB,EAOlB,OAPkB,CAAtB;AAUA,IAAMC,OAAO,GAAG,OAAO,EAAP,GAAY,EAA5B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA6E;AAAA,MAA5EC,OAA4E,uEAAlEF,OAAkE;AAAA,MAAzDG,SAAyD;AAAA,MAA9CC,MAA8C,uEAArC,YAAM,CAAE,CAA6B;AAAA,MAA3BC,MAA2B,uEAAlBN,aAAkB;;AAAA,kBAC7DD,QAAQ,CAAC,KAAD,CADqD;AAAA;AAAA,MAClFQ,MADkF;AAAA,MAC1EC,SAD0E;;AAGzFV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIW,SAAS,GAAG,IAAhB;AAEA,QAAMC,WAAW,GAAGb,QAAQ,CAAC,YAAM;AAC/BW,MAAAA,SAAS,CAAC,KAAD,CAAT;;AACA,UAAIC,SAAJ,EAAe;AACXE,QAAAA,YAAY,CAACF,SAAD,CAAZ;AACH;;AAEDA,MAAAA,SAAS,GAAGG,UAAU,CAAC,YAAM;AACzBJ,QAAAA,SAAS,CAAC,YAAM;AACZH,UAAAA,MAAM,CAAC,IAAD,CAAN;AACA,iBAAO,IAAP;AACH,SAHQ,CAAT;AAIH,OALqB,EAKnBF,OALmB,CAAtB;AAMH,KAZ2B,EAYzB,KAZyB,CAA5B;;AAcA,QAAIC,SAAJ,EAAe;AACXE,MAAAA,MAAM,CAACO,OAAP,CAAe,UAACC,KAAD,EAAW;AACtBC,QAAAA,MAAM,CAACC,gBAAP,CAAwBF,KAAxB,EAA+BJ,WAA/B,EAA4C,KAA5C;AACH,OAFD;AAGH,KAJD,MAIO;AACHJ,MAAAA,MAAM,CAACO,OAAP,CAAe,UAACC,KAAD,EAAW;AACtBC,QAAAA,MAAM,CAACE,mBAAP,CAA2BH,KAA3B,EAAkCJ,WAAlC;AACH,OAFD;AAGH;;AAED,WAAO,YAAM;AACTJ,MAAAA,MAAM,CAACO,OAAP,CAAe,UAACC,KAAD,EAAW;AACtBC,QAAAA,MAAM,CAACE,mBAAP,CAA2BH,KAA3B,EAAkCJ,WAAlC;AACH,OAFD;AAGH,KAJD,CA3BY,CAgCZ;AACH,GAjCQ,EAiCN,CAACP,OAAD,EAAUC,SAAV,CAjCM,CAAT;AAmCA,SAAOG,MAAP;AACH,CAvCD;;AAyCA,eAAeL,OAAf","sourcesContent":["import throttle from 'lodash/throttle';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst defaultEvents = [\r\n    'load',\r\n    'mousemove',\r\n    'mousedown',\r\n    'resize',\r\n    'keydown',\r\n    'touchstart',\r\n    'wheel',\r\n];\r\n\r\nconst TEN_MIN = 1000 * 60 * 10;\r\n\r\nconst useIdle = (timeout = TEN_MIN, shouldRun, onIdle = () => {}, events = defaultEvents) => {\r\n    const [isIdle, setIsIdle] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let timeoutId = null;\r\n\r\n        const handleEvent = throttle(() => {\r\n            setIsIdle(false);\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n\r\n            timeoutId = setTimeout(() => {\r\n                setIsIdle(() => {\r\n                    onIdle(true);\r\n                    return true;\r\n                });\r\n            }, timeout);\r\n        }, 10000);\r\n\r\n        if (shouldRun) {\r\n            events.forEach((event) => {\r\n                window.addEventListener(event, handleEvent, false);\r\n            });\r\n        } else {\r\n            events.forEach((event) => {\r\n                window.removeEventListener(event, handleEvent);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            events.forEach((event) => {\r\n                window.removeEventListener(event, handleEvent);\r\n            });\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [timeout, shouldRun]);\r\n\r\n    return isIdle;\r\n};\r\n\r\nexport default useIdle;\r\n"]},"metadata":{},"sourceType":"module"}