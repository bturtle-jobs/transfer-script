{"ast":null,"code":"\"use strict\";\n\nvar Browsers = require('./browsers');\n\nvar utils = require('./utils');\n\nvar vendor = require('postcss').vendor;\n/**\n * Recursively clone objects\n */\n\n\nfunction _clone(obj, parent) {\n  var cloned = new obj.constructor();\n\n  var _arr = Object.keys(obj || {});\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    var i = _arr[_i];\n    var value = obj[i];\n\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value;\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (x) {\n        return _clone(x, cloned);\n      });\n    } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues') {\n      if (typeof value === 'object' && value !== null) {\n        value = _clone(value, cloned);\n      }\n\n      cloned[i] = value;\n    }\n  }\n\n  return cloned;\n}\n\nvar Prefixer = /*#__PURE__*/function () {\n  /**\n     * Add hack to selected names\n     */\n  Prefixer.hack = function hack(klass) {\n    var _this = this;\n\n    if (!this.hacks) {\n      this.hacks = {};\n    }\n\n    return klass.names.map(function (name) {\n      _this.hacks[name] = klass;\n      return _this.hacks[name];\n    });\n  }\n  /**\n     * Load hacks for some names\n     */\n  ;\n\n  Prefixer.load = function load(name, prefixes, all) {\n    var Klass = this.hacks && this.hacks[name];\n\n    if (Klass) {\n      return new Klass(name, prefixes, all);\n    } else {\n      return new this(name, prefixes, all);\n    }\n  }\n  /**\n     * Clone node and clean autprefixer custom caches\n     */\n  ;\n\n  Prefixer.clone = function clone(node, overrides) {\n    var cloned = _clone(node);\n\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n\n    return cloned;\n  };\n\n  function Prefixer(name, prefixes, all) {\n    this.prefixes = prefixes;\n    this.name = name;\n    this.all = all;\n  }\n  /**\n     * Find prefix in node parents\n     */\n\n\n  var _proto = Prefixer.prototype;\n\n  _proto.parentPrefix = function parentPrefix(node) {\n    var prefix;\n\n    if (typeof node._autoprefixerPrefix !== 'undefined') {\n      prefix = node._autoprefixerPrefix;\n    } else if (node.type === 'decl' && node.prop[0] === '-') {\n      prefix = vendor.prefix(node.prop);\n    } else if (node.type === 'root') {\n      prefix = false;\n    } else if (node.type === 'rule' && node.selector.indexOf(':-') !== -1 && /:(-\\w+-)/.test(node.selector)) {\n      prefix = node.selector.match(/:(-\\w+-)/)[1];\n    } else if (node.type === 'atrule' && node.name[0] === '-') {\n      prefix = vendor.prefix(node.name);\n    } else {\n      prefix = this.parentPrefix(node.parent);\n    }\n\n    if (Browsers.prefixes().indexOf(prefix) === -1) {\n      prefix = false;\n    }\n\n    node._autoprefixerPrefix = prefix;\n    return node._autoprefixerPrefix;\n  }\n  /**\n     * Clone node with prefixes\n     */\n  ;\n\n  _proto.process = function process(node, result) {\n    if (!this.check(node)) {\n      return undefined;\n    }\n\n    var parent = this.parentPrefix(node);\n    var prefixes = this.prefixes.filter(function (prefix) {\n      return !parent || parent === utils.removeNote(prefix);\n    });\n    var added = [];\n\n    for (var _iterator = prefixes, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i2 >= _iterator.length) break;\n        _ref = _iterator[_i2++];\n      } else {\n        _i2 = _iterator.next();\n        if (_i2.done) break;\n        _ref = _i2.value;\n      }\n\n      var prefix = _ref;\n\n      if (this.add(node, prefix, added.concat([prefix]), result)) {\n        added.push(prefix);\n      }\n    }\n\n    return added;\n  }\n  /**\n     * Shortcut for Prefixer.clone\n     */\n  ;\n\n  _proto.clone = function clone(node, overrides) {\n    return Prefixer.clone(node, overrides);\n  };\n\n  return Prefixer;\n}();\n\nmodule.exports = Prefixer;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/autoprefixer/lib/prefixer.js"],"names":["Browsers","require","utils","vendor","_clone","obj","parent","cloned","constructor","_arr","Object","keys","_i","length","i","value","Array","map","x","Prefixer","hack","klass","_this","hacks","names","name","load","prefixes","all","Klass","clone","node","overrides","_proto","prototype","parentPrefix","prefix","_autoprefixerPrefix","type","prop","selector","indexOf","test","match","process","result","check","undefined","filter","removeNote","added","_iterator","_isArray","isArray","_i2","Symbol","iterator","_ref","next","done","add","concat","push","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,SAAD,CAAP,CAAmBE,MAAhC;AACA;AACA;AACA;;;AAGA,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,MAArB,EAA6B;AAC3B,MAAIC,MAAM,GAAG,IAAIF,GAAG,CAACG,WAAR,EAAb;;AAEA,MAAIC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYN,GAAG,IAAI,EAAnB,CAAX;;AAEA,OAAK,IAAIO,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGH,IAAI,CAACI,MAA3B,EAAmCD,EAAE,EAArC,EAAyC;AACvC,QAAIE,CAAC,GAAGL,IAAI,CAACG,EAAD,CAAZ;AACA,QAAIG,KAAK,GAAGV,GAAG,CAACS,CAAD,CAAf;;AAEA,QAAIA,CAAC,KAAK,QAAN,IAAkB,OAAOC,KAAP,KAAiB,QAAvC,EAAiD;AAC/C,UAAIT,MAAJ,EAAY;AACVC,QAAAA,MAAM,CAACO,CAAD,CAAN,GAAYR,MAAZ;AACD;AACF,KAJD,MAIO,IAAIQ,CAAC,KAAK,QAAN,IAAkBA,CAAC,KAAK,IAA5B,EAAkC;AACvCP,MAAAA,MAAM,CAACO,CAAD,CAAN,GAAYC,KAAZ;AACD,KAFM,MAEA,IAAIA,KAAK,YAAYC,KAArB,EAA4B;AACjCT,MAAAA,MAAM,CAACO,CAAD,CAAN,GAAYC,KAAK,CAACE,GAAN,CAAU,UAAUC,CAAV,EAAa;AACjC,eAAOd,MAAM,CAACc,CAAD,EAAIX,MAAJ,CAAb;AACD,OAFW,CAAZ;AAGD,KAJM,MAIA,IAAIO,CAAC,KAAK,qBAAN,IAA+BA,CAAC,KAAK,qBAAzC,EAAgE;AACrE,UAAI,OAAOC,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;AAC/CA,QAAAA,KAAK,GAAGX,MAAM,CAACW,KAAD,EAAQR,MAAR,CAAd;AACD;;AAEDA,MAAAA,MAAM,CAACO,CAAD,CAAN,GAAYC,KAAZ;AACD;AACF;;AAED,SAAOR,MAAP;AACD;;AAED,IAAIY,QAAQ,GACZ,aACA,YAAY;AACV;AACF;AACA;AACEA,EAAAA,QAAQ,CAACC,IAAT,GAAgB,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACnC,QAAIC,KAAK,GAAG,IAAZ;;AAEA,QAAI,CAAC,KAAKC,KAAV,EAAiB;AACf,WAAKA,KAAL,GAAa,EAAb;AACD;;AAED,WAAOF,KAAK,CAACG,KAAN,CAAYP,GAAZ,CAAgB,UAAUQ,IAAV,EAAgB;AACrCH,MAAAA,KAAK,CAACC,KAAN,CAAYE,IAAZ,IAAoBJ,KAApB;AACA,aAAOC,KAAK,CAACC,KAAN,CAAYE,IAAZ,CAAP;AACD,KAHM,CAAP;AAID;AACD;AACF;AACA;AAdE;;AAiBAN,EAAAA,QAAQ,CAACO,IAAT,GAAgB,SAASA,IAAT,CAAcD,IAAd,EAAoBE,QAApB,EAA8BC,GAA9B,EAAmC;AACjD,QAAIC,KAAK,GAAG,KAAKN,KAAL,IAAc,KAAKA,KAAL,CAAWE,IAAX,CAA1B;;AAEA,QAAII,KAAJ,EAAW;AACT,aAAO,IAAIA,KAAJ,CAAUJ,IAAV,EAAgBE,QAAhB,EAA0BC,GAA1B,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAI,IAAJ,CAASH,IAAT,EAAeE,QAAf,EAAyBC,GAAzB,CAAP;AACD;AACF;AACD;AACF;AACA;AAXE;;AAcAT,EAAAA,QAAQ,CAACW,KAAT,GAAiB,SAASA,KAAT,CAAeC,IAAf,EAAqBC,SAArB,EAAgC;AAC/C,QAAIzB,MAAM,GAAGH,MAAM,CAAC2B,IAAD,CAAnB;;AAEA,SAAK,IAAIN,IAAT,IAAiBO,SAAjB,EAA4B;AAC1BzB,MAAAA,MAAM,CAACkB,IAAD,CAAN,GAAeO,SAAS,CAACP,IAAD,CAAxB;AACD;;AAED,WAAOlB,MAAP;AACD,GARD;;AAUA,WAASY,QAAT,CAAkBM,IAAlB,EAAwBE,QAAxB,EAAkCC,GAAlC,EAAuC;AACrC,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKG,GAAL,GAAWA,GAAX;AACD;AACD;AACF;AACA;;;AAGE,MAAIK,MAAM,GAAGd,QAAQ,CAACe,SAAtB;;AAEAD,EAAAA,MAAM,CAACE,YAAP,GAAsB,SAASA,YAAT,CAAsBJ,IAAtB,EAA4B;AAChD,QAAIK,MAAJ;;AAEA,QAAI,OAAOL,IAAI,CAACM,mBAAZ,KAAoC,WAAxC,EAAqD;AACnDD,MAAAA,MAAM,GAAGL,IAAI,CAACM,mBAAd;AACD,KAFD,MAEO,IAAIN,IAAI,CAACO,IAAL,KAAc,MAAd,IAAwBP,IAAI,CAACQ,IAAL,CAAU,CAAV,MAAiB,GAA7C,EAAkD;AACvDH,MAAAA,MAAM,GAAGjC,MAAM,CAACiC,MAAP,CAAcL,IAAI,CAACQ,IAAnB,CAAT;AACD,KAFM,MAEA,IAAIR,IAAI,CAACO,IAAL,KAAc,MAAlB,EAA0B;AAC/BF,MAAAA,MAAM,GAAG,KAAT;AACD,KAFM,MAEA,IAAIL,IAAI,CAACO,IAAL,KAAc,MAAd,IAAwBP,IAAI,CAACS,QAAL,CAAcC,OAAd,CAAsB,IAAtB,MAAgC,CAAC,CAAzD,IAA8D,WAAWC,IAAX,CAAgBX,IAAI,CAACS,QAArB,CAAlE,EAAkG;AACvGJ,MAAAA,MAAM,GAAGL,IAAI,CAACS,QAAL,CAAcG,KAAd,CAAoB,UAApB,EAAgC,CAAhC,CAAT;AACD,KAFM,MAEA,IAAIZ,IAAI,CAACO,IAAL,KAAc,QAAd,IAA0BP,IAAI,CAACN,IAAL,CAAU,CAAV,MAAiB,GAA/C,EAAoD;AACzDW,MAAAA,MAAM,GAAGjC,MAAM,CAACiC,MAAP,CAAcL,IAAI,CAACN,IAAnB,CAAT;AACD,KAFM,MAEA;AACLW,MAAAA,MAAM,GAAG,KAAKD,YAAL,CAAkBJ,IAAI,CAACzB,MAAvB,CAAT;AACD;;AAED,QAAIN,QAAQ,CAAC2B,QAAT,GAAoBc,OAApB,CAA4BL,MAA5B,MAAwC,CAAC,CAA7C,EAAgD;AAC9CA,MAAAA,MAAM,GAAG,KAAT;AACD;;AAEDL,IAAAA,IAAI,CAACM,mBAAL,GAA2BD,MAA3B;AACA,WAAOL,IAAI,CAACM,mBAAZ;AACD;AACD;AACF;AACA;AA1BE;;AA6BAJ,EAAAA,MAAM,CAACW,OAAP,GAAiB,SAASA,OAAT,CAAiBb,IAAjB,EAAuBc,MAAvB,EAA+B;AAC9C,QAAI,CAAC,KAAKC,KAAL,CAAWf,IAAX,CAAL,EAAuB;AACrB,aAAOgB,SAAP;AACD;;AAED,QAAIzC,MAAM,GAAG,KAAK6B,YAAL,CAAkBJ,IAAlB,CAAb;AACA,QAAIJ,QAAQ,GAAG,KAAKA,QAAL,CAAcqB,MAAd,CAAqB,UAAUZ,MAAV,EAAkB;AACpD,aAAO,CAAC9B,MAAD,IAAWA,MAAM,KAAKJ,KAAK,CAAC+C,UAAN,CAAiBb,MAAjB,CAA7B;AACD,KAFc,CAAf;AAGA,QAAIc,KAAK,GAAG,EAAZ;;AAEA,SAAK,IAAIC,SAAS,GAAGxB,QAAhB,EAA0ByB,QAAQ,GAAGpC,KAAK,CAACqC,OAAN,CAAcF,SAAd,CAArC,EAA+DG,GAAG,GAAG,CAArE,EAAwEH,SAAS,GAAGC,QAAQ,GAAGD,SAAH,GAAeA,SAAS,CAACI,MAAM,CAACC,QAAR,CAAT,EAAhH,IAAgJ;AAC9I,UAAIC,IAAJ;;AAEA,UAAIL,QAAJ,EAAc;AACZ,YAAIE,GAAG,IAAIH,SAAS,CAACtC,MAArB,EAA6B;AAC7B4C,QAAAA,IAAI,GAAGN,SAAS,CAACG,GAAG,EAAJ,CAAhB;AACD,OAHD,MAGO;AACLA,QAAAA,GAAG,GAAGH,SAAS,CAACO,IAAV,EAAN;AACA,YAAIJ,GAAG,CAACK,IAAR,EAAc;AACdF,QAAAA,IAAI,GAAGH,GAAG,CAACvC,KAAX;AACD;;AAED,UAAIqB,MAAM,GAAGqB,IAAb;;AAEA,UAAI,KAAKG,GAAL,CAAS7B,IAAT,EAAeK,MAAf,EAAuBc,KAAK,CAACW,MAAN,CAAa,CAACzB,MAAD,CAAb,CAAvB,EAA+CS,MAA/C,CAAJ,EAA4D;AAC1DK,QAAAA,KAAK,CAACY,IAAN,CAAW1B,MAAX;AACD;AACF;;AAED,WAAOc,KAAP;AACD;AACD;AACF;AACA;AAlCE;;AAqCAjB,EAAAA,MAAM,CAACH,KAAP,GAAe,SAASA,KAAT,CAAeC,IAAf,EAAqBC,SAArB,EAAgC;AAC7C,WAAOb,QAAQ,CAACW,KAAT,CAAeC,IAAf,EAAqBC,SAArB,CAAP;AACD,GAFD;;AAIA,SAAOb,QAAP;AACD,CAhID,EAFA;;AAoIA4C,MAAM,CAACC,OAAP,GAAiB7C,QAAjB","sourcesContent":["\"use strict\";\n\nvar Browsers = require('./browsers');\n\nvar utils = require('./utils');\n\nvar vendor = require('postcss').vendor;\n/**\n * Recursively clone objects\n */\n\n\nfunction _clone(obj, parent) {\n  var cloned = new obj.constructor();\n\n  var _arr = Object.keys(obj || {});\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    var i = _arr[_i];\n    var value = obj[i];\n\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value;\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (x) {\n        return _clone(x, cloned);\n      });\n    } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues') {\n      if (typeof value === 'object' && value !== null) {\n        value = _clone(value, cloned);\n      }\n\n      cloned[i] = value;\n    }\n  }\n\n  return cloned;\n}\n\nvar Prefixer =\n/*#__PURE__*/\nfunction () {\n  /**\n     * Add hack to selected names\n     */\n  Prefixer.hack = function hack(klass) {\n    var _this = this;\n\n    if (!this.hacks) {\n      this.hacks = {};\n    }\n\n    return klass.names.map(function (name) {\n      _this.hacks[name] = klass;\n      return _this.hacks[name];\n    });\n  }\n  /**\n     * Load hacks for some names\n     */\n  ;\n\n  Prefixer.load = function load(name, prefixes, all) {\n    var Klass = this.hacks && this.hacks[name];\n\n    if (Klass) {\n      return new Klass(name, prefixes, all);\n    } else {\n      return new this(name, prefixes, all);\n    }\n  }\n  /**\n     * Clone node and clean autprefixer custom caches\n     */\n  ;\n\n  Prefixer.clone = function clone(node, overrides) {\n    var cloned = _clone(node);\n\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n\n    return cloned;\n  };\n\n  function Prefixer(name, prefixes, all) {\n    this.prefixes = prefixes;\n    this.name = name;\n    this.all = all;\n  }\n  /**\n     * Find prefix in node parents\n     */\n\n\n  var _proto = Prefixer.prototype;\n\n  _proto.parentPrefix = function parentPrefix(node) {\n    var prefix;\n\n    if (typeof node._autoprefixerPrefix !== 'undefined') {\n      prefix = node._autoprefixerPrefix;\n    } else if (node.type === 'decl' && node.prop[0] === '-') {\n      prefix = vendor.prefix(node.prop);\n    } else if (node.type === 'root') {\n      prefix = false;\n    } else if (node.type === 'rule' && node.selector.indexOf(':-') !== -1 && /:(-\\w+-)/.test(node.selector)) {\n      prefix = node.selector.match(/:(-\\w+-)/)[1];\n    } else if (node.type === 'atrule' && node.name[0] === '-') {\n      prefix = vendor.prefix(node.name);\n    } else {\n      prefix = this.parentPrefix(node.parent);\n    }\n\n    if (Browsers.prefixes().indexOf(prefix) === -1) {\n      prefix = false;\n    }\n\n    node._autoprefixerPrefix = prefix;\n    return node._autoprefixerPrefix;\n  }\n  /**\n     * Clone node with prefixes\n     */\n  ;\n\n  _proto.process = function process(node, result) {\n    if (!this.check(node)) {\n      return undefined;\n    }\n\n    var parent = this.parentPrefix(node);\n    var prefixes = this.prefixes.filter(function (prefix) {\n      return !parent || parent === utils.removeNote(prefix);\n    });\n    var added = [];\n\n    for (var _iterator = prefixes, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i2 >= _iterator.length) break;\n        _ref = _iterator[_i2++];\n      } else {\n        _i2 = _iterator.next();\n        if (_i2.done) break;\n        _ref = _i2.value;\n      }\n\n      var prefix = _ref;\n\n      if (this.add(node, prefix, added.concat([prefix]), result)) {\n        added.push(prefix);\n      }\n    }\n\n    return added;\n  }\n  /**\n     * Shortcut for Prefixer.clone\n     */\n  ;\n\n  _proto.clone = function clone(node, overrides) {\n    return Prefixer.clone(node, overrides);\n  };\n\n  return Prefixer;\n}();\n\nmodule.exports = Prefixer;"]},"metadata":{},"sourceType":"script"}