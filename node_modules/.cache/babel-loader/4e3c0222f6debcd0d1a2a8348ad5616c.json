{"ast":null,"code":"import axios from 'axios';\nimport throttle from 'lodash/throttle';\nimport store from 'owp/store';\nimport { setNetworkStatus } from 'owp/store/actions';\nimport { showMessage } from '../common/util';\nvar statusMap = {\n  404: '허가되지 않은 페이지 요청입니다.',\n  undefined: '잘못된 네트워크 요청 입니다.'\n};\n\nvar _dispatch = throttle(function (action) {\n  store.dispatch(action);\n}, 1000);\n\nvar _handleError = function _handleError(error) {\n  if (error.response) {\n    var status = error.response.status;\n    showMessage({\n      message: statusMap[status],\n      variant: 'warning'\n    });\n  }\n\n  _dispatch(setNetworkStatus('DONE'));\n\n  return Promise.reject(error);\n};\n\nvar _setInterceptors = function _setInterceptors(instance) {\n  instance.interceptors.request.use(function (config) {\n    _dispatch(setNetworkStatus('START'));\n\n    return config;\n  }, _handleError);\n  instance.interceptors.response.use(function (response) {\n    _dispatch(setNetworkStatus('DONE'));\n\n    return response;\n  }, _handleError);\n};\n\nexport var setDefaultAxiosConfig = function setDefaultAxiosConfig() {\n  axios.defaults.baseURL = process.env.REACT_APP_REST_API_URL;\n  console.log('axios.defaults.baseURL', axios.defaults.baseURL);\n  axios.defaults.transformResponse = [function (response) {\n    // console.log('response', response);\n    if (typeof response === 'string') {\n      try {\n        var json = JSON.parse(response); // console.log('json', json);\n\n        return json;\n      } catch (error) {\n        return error;\n      }\n    }\n\n    return response;\n  }];\n\n  axios.defaults.onUploadProgress = function (progressEvent) {\n    var value = Math.floor(progressEvent.loaded * 100 / progressEvent.total);\n\n    _dispatch(setNetworkStatus('LOADING', value));\n  };\n\n  _setInterceptors(axios);\n};\nexport var createAxios = function createAxios(config) {\n  var instance = axios.create(config);\n  instance.defaults.timeout = 10000;\n  console.debug('axios.defaults.timeout', instance.defaults.timeout); // = 5000 ;\n\n  _setInterceptors(instance);\n\n  return instance;\n};","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/node_modules/owp/src/api/axios.js"],"names":["axios","throttle","store","setNetworkStatus","showMessage","statusMap","undefined","_dispatch","action","dispatch","_handleError","error","response","status","message","variant","Promise","reject","_setInterceptors","instance","interceptors","request","use","config","setDefaultAxiosConfig","defaults","baseURL","process","env","REACT_APP_REST_API_URL","console","log","transformResponse","json","JSON","parse","onUploadProgress","progressEvent","value","Math","floor","loaded","total","createAxios","create","timeout","debug"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport throttle from 'lodash/throttle';\r\nimport store from 'owp/store';\r\nimport { setNetworkStatus } from 'owp/store/actions';\r\nimport { showMessage } from '../common/util';\r\n\r\nconst statusMap = {\r\n    404: '허가되지 않은 페이지 요청입니다.',\r\n    undefined: '잘못된 네트워크 요청 입니다.',\r\n};\r\n\r\nconst _dispatch = throttle((action) => {\r\n    store.dispatch(action);\r\n}, 1000);\r\n\r\nconst _handleError = (error) => {\r\n    if (error.response) {\r\n        const { status } = error.response;\r\n\r\n        showMessage({\r\n            message: statusMap[status],\r\n            variant: 'warning',\r\n        });\r\n    }\r\n\r\n    _dispatch(setNetworkStatus('DONE'));\r\n\r\n    return Promise.reject(error);\r\n};\r\n\r\nconst _setInterceptors = (instance) => {\r\n    instance.interceptors.request.use((config) => {\r\n        _dispatch(setNetworkStatus('START'));\r\n\r\n        return config;\r\n    }, _handleError);\r\n\r\n    instance.interceptors.response.use((response) => {\r\n        _dispatch(setNetworkStatus('DONE'));\r\n\r\n        return response;\r\n    }, _handleError);\r\n};\r\n\r\nexport const setDefaultAxiosConfig = () => {\r\n    axios.defaults.baseURL = process.env.REACT_APP_REST_API_URL;\r\n\r\n    console.log('axios.defaults.baseURL', axios.defaults.baseURL);\r\n\r\n    axios.defaults.transformResponse = [\r\n        (response) => {\r\n            // console.log('response', response);\r\n            if (typeof response === 'string') {\r\n                try {\r\n                    const json = JSON.parse(response);\r\n                    // console.log('json', json);\r\n                    return json;\r\n                } catch (error) {\r\n                    return error;\r\n                }\r\n            }\r\n            return response;\r\n        },\r\n    ];\r\n    axios.defaults.onUploadProgress = (progressEvent) => {\r\n        const value = Math.floor((progressEvent.loaded * 100) / progressEvent.total);\r\n\r\n        _dispatch(setNetworkStatus('LOADING', value));\r\n    };\r\n\r\n    _setInterceptors(axios);\r\n};\r\n\r\nexport const createAxios = (config) => {\r\n    const instance = axios.create(config);\r\n\r\n    instance.defaults.timeout = 10000;\r\n    console.debug('axios.defaults.timeout', instance.defaults.timeout); // = 5000 ;\r\n\r\n    _setInterceptors(instance);\r\n\r\n    return instance;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}