{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Trunks\\\\OWP-GIT\\\\owp-fe\\\\src\\\\main\\\\content\\\\include\\\\C0202002_tab07_tab01_tab02.js\";\nimport React, { Component } from 'react';\nimport { OwpButton, OwpSearchDateField, OwpSearchSelectField, OwpSearchTextField, OwpTextField, OwpTreeGrid, OwpMessage, OwpDialog } from 'owp/wrapper';\nimport Formsy from 'formsy-react';\nimport * as TGEvent from 'owp/TGEvent';\nimport moment from 'moment';\nimport { query, mutate } from 'owp/api';\nimport { setGridData, setRowAttribute, restoreGridSelect, setRowAttributes } from 'main/GridUtill';\nimport Pop_C0202002_03 from './Pop_C0202002_03';\nvar MAX_ROW = 6;\nvar FACILITY = 'FACILITY';\nvar MATERIAL = 'MATERIAL';\nvar GRID_ID = 'C0202011';\nvar MEASURING_EQUIPMENT = 'MEASURING_EQUIPMENT';\nvar facilityDummy = [{\n  'OWP_FACILITIES.FACILITY_NAME': 'R-1117',\n  'OWP_FACILITIES.FACILITY_SEQ': '28'\n}, {\n  'OWP_FACILITIES.FACILITY_NAME': 'AC-1105',\n  'OWP_FACILITIES.FACILITY_SEQ': '29'\n}, {\n  'OWP_FACILITIES.FACILITY_NAME': 'AC-1110',\n  'OWP_FACILITIES.FACILITY_SEQ': '27'\n}];\nvar measuringDummy = [{\n  'MEASURING_EQUIPMENT.EQUIPMENT_NAME': 'B-1102-2020.12.15',\n  'MEASURING_EQUIPMENT.EQUIPMENT_SEQ': '30'\n}, {\n  'MEASURING_EQUIPMENT.EQUIPMENT_NAME': 'A-1102-2020.12.15',\n  'MEASURING_EQUIPMENT.EQUIPMENT_SEQ': '31'\n}];\nvar inputSeedDummy = [{\n  'INPUT_SPEED.NAME': '00.00 kg/hr or kg/min',\n  'INPUT_SPEED.SEQ': '11'\n}, {\n  'INPUT_SPEED.NAME': '00.30 kg/hr or 00.30 kg/min',\n  'INPUT_SPEED.SEQ': '12'\n}];\nvar mock = \"[{\\\"FACILITY\\\":\\\"28\\\",\\\"MATERIAL\\\":\\\"mock\\\",\\\"CONFIG_TYPE\\\":\\\"mock\\\",\\\"TOTAL_INPUT\\\":\\\"mock\\\",\\\"INPUT_SPEED\\\":\\\"11\\\",\\\"MEASURING_EQUIPMENT\\\":\\\"31\\\"},{\\\"FACILITY\\\":\\\"29\\\",\\\"MATERIAL\\\":\\\"mock\\\",\\\"CONFIG_TYPE\\\":\\\"mock\\\",\\\"TOTAL_INPUT\\\":\\\"mock\\\",\\\"INPUT_SPEED\\\":\\\"12\\\",\\\"MEASURING_EQUIPMENT\\\":\\\"30\\\"}]\";\n\nvar Page = /*#__PURE__*/function (_Component) {\n  _inherits(Page, _Component);\n\n  var _super = _createSuper(Page);\n\n  function Page(props) {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _super.call(this, props);\n\n    _this.loadStdMainGrid = function () {\n      query({\n        url: 'listOwpMbrProcessStdByUnitProcess',\n        params: {\n          jsondata: JSON.stringify({\n            'OWP_MBR_PROCESS_STD.UNITPROCESSSEQ': _this.props.PROCESSSEQ + ''\n          })\n        }\n      }).then(function (res) {\n        console.log(res);\n        setGridData(GRID_ID, res);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    _this.loadStdMainConfig = function () {\n      //TODO:change this load to another UI\n      query({\n        url: 'loadOwpMbrUnitProcessMainConfig/' + 139\n      }).then(function (res) {\n        if (res['OWP_MBR_UNIT_PROCESS.MAIN_CONFIG']) {\n          var gridData = JSON.parse(mock);\n\n          var facilityEnum = _this.loadFacilityEnum();\n\n          var measuringEnum = _this.loadMeasuringEnum();\n\n          var inputSpeedEnum = _this.loadInputSpeedEnum(); //let functionEnum = this.loadFunctionEnum();\n\n\n          _this.setState(function (state) {\n            return _objectSpread(_objectSpread({}, state), {}, {\n              gridLength: gridData.length,\n              facilityEnum: facilityEnum,\n              measuringEnum: measuringEnum,\n              inputSpeedEnum: inputSpeedEnum //functionEnum: functionEnum,\n\n            });\n          });\n\n          setGridData('C0202011', gridData);\n          window.setTimeout(function () {\n            _this.setGridDynamicColumnType();\n          }, 100);\n        }\n      });\n    };\n\n    _this.handleAddRow = function () {\n      if (_this.state.gridLength >= MAX_ROW) {\n        OwpMessage({\n          message: '6 미만',\n          variant: 'error'\n        });\n      } else {\n        var G = TGEvent.getGridByID(GRID_ID);\n        G.ActionAcceptEdit();\n        TGEvent.OWPTGAddRow(GRID_ID, function (row) {\n          _this.setDynamicRowAttributes(row);\n\n          _this.setState(function (state) {\n            return _objectSpread(_objectSpread({}, state), {}, {\n              gridLength: state.gridLength + 1\n            });\n          });\n        });\n      }\n    };\n\n    _this.handleUpdate = function () {\n      _this.fillGridData();\n\n      _this.setGridDynamicColumnType();\n    };\n\n    _this.handleDeleteRow = function () {\n      _this.fillGridData(true);\n\n      _this.setGridDynamicColumnType();\n    };\n\n    _this.setGridDynamicColumnType = function () {\n      var G = TGEvent.getGridByID(GRID_ID);\n\n      if (G) {\n        var _rows = Object.values(G['Rows']).filter(function (item) {\n          return item.Kind == 'Data';\n        });\n\n        _rows.forEach(function (row) {\n          _this.setDynamicRowAttributes(row);\n        });\n      }\n    };\n\n    _this.setDynamicRowAttributes = function (row) {\n      setRowAttributes(GRID_ID, row, FACILITY, _this.state.facilityEnum);\n      setRowAttributes(GRID_ID, row, MEASURING_EQUIPMENT, _this.state.measuringEnum);\n      setRowAttributes(GRID_ID, row, 'INPUT_SPEED', _this.state.inputSpeedEnum);\n    };\n\n    _this.fillGridData = function (isDelete) {\n      var G = TGEvent.getGridByID(GRID_ID);\n\n      if (G) {\n        var _rows = Object.values(G['Rows']).filter(function (item) {\n          return item.Kind == 'Data';\n        });\n\n        var arrData = [];\n\n        _rows.some(function (row) {\n          if (isDelete && row['Selected'] === 1) {\n            return false;\n          } else {\n            arrData.push({\n              FACILITY: row['FACILITY'],\n              MATERIAL: row['MATERIAL'],\n              CONFIG_TYPE: row['CONFIG_TYPE'],\n              TOTAL_INPUT: row['TOTAL_INPUT'],\n              INPUT_SPEED: row['INPUT_SPEED'],\n              MEASURING_EQUIPMENT: row['MEASURING_EQUIPMENT']\n            });\n          }\n        });\n\n        setGridData(GRID_ID, arrData);\n\n        _this.setState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            gridLength: arrData.length\n          });\n        });\n      }\n    };\n\n    _this.loadFacilityEnum = function () {\n      //TODO:load from server\n      //TODO: write new service to get facility from parent of unit process id=\n      var res = facilityDummy;\n\n      if (res) {\n        var enums = '';\n        var enumKeys = '';\n        res.forEach(function (item) {\n          enums = enums + '|' + item['OWP_FACILITIES.FACILITY_NAME'];\n          enumKeys = enumKeys + '|' + item['OWP_FACILITIES.FACILITY_SEQ'];\n        });\n        return {\n          Type: 'Enum',\n          Enum: enums,\n          EnumKeys: enumKeys\n        };\n      }\n\n      return null;\n    };\n\n    _this.loadFunctionEnum = function () {\n      query({\n        url: 'listIPX_CommonCodeLowAC',\n        params: {\n          jsondata: JSON.stringify({\n            'IPX_COMMONCODE.GROUPID': 'D023000'\n          })\n        }\n      }).then(function (res) {\n        console.log(res);\n      });\n    };\n\n    _this.loadMeasuringEnum = function () {\n      //TODO:load from server\n      //TODO: write new service to get facility from parent of unit process id=\n      var res = measuringDummy;\n\n      if (res) {\n        var enums = '';\n        var enumKeys = '';\n        res.forEach(function (item) {\n          enums = enums + '|' + item['MEASURING_EQUIPMENT.EQUIPMENT_NAME'];\n          enumKeys = enumKeys + '|' + item['MEASURING_EQUIPMENT.EQUIPMENT_SEQ'];\n        });\n        return {\n          Type: 'Enum',\n          Enum: enums,\n          EnumKeys: enumKeys\n        };\n      }\n\n      return null;\n    };\n\n    _this.loadInputSpeedEnum = function () {\n      //TODO:load from server\n      //TODO: write new service to get facility from parent of unit process id=\n      var res = inputSeedDummy;\n\n      if (res) {\n        var enums = '';\n        var enumKeys = '';\n        res.forEach(function (item) {\n          enums = enums + '|' + item['INPUT_SPEED.NAME'];\n          enumKeys = enumKeys + '|' + item['INPUT_SPEED.SEQ'];\n        });\n        return {\n          Type: 'Enum',\n          Enum: enums,\n          EnumKeys: enumKeys\n        };\n      }\n\n      return null;\n    };\n\n    _this.loadInputSpeedEnum = function () {\n      //TODO:load from server\n      //TODO: write new service to get facility from parent of unit process id=\n      var res = inputSeedDummy;\n\n      if (res) {\n        var enums = '';\n        var enumKeys = '';\n        res.forEach(function (item) {\n          enums = enums + '|' + item['INPUT_SPEED.NAME'];\n          enumKeys = enumKeys + '|' + item['INPUT_SPEED.SEQ'];\n        });\n        return {\n          Type: 'Enum',\n          Enum: enums,\n          EnumKeys: enumKeys\n        };\n      }\n\n      return null;\n    };\n\n    _this.loadMesasuringEquipmentEnum = function () {};\n\n    _this.openDialogCheck = function () {\n      _this.setState({\n        isDialogCheckOpen: true\n      });\n\n      _this.setState({\n        popMessage: '저장하시겠습니까?'\n      });\n    };\n\n    _this.closeDialogCheck = function () {\n      _this.setState({\n        isDialogCheckOpen: false\n      });\n    };\n\n    _this.clickDelete = function () {\n      _this.onDelete('START');\n    };\n\n    _this.onDelete = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var G, _rows;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              G = TGEvent.getGridByID(GRID_ID);\n\n              if (G) {\n                _rows = G.GetSelRows();\n\n                if (_rows.length > 0) {\n                  _rows.filter(function (item) {\n                    return item.Kind === 'Data';\n                  }).map(function (row) {\n                    var PROCESSSTDSEQ = row['OWP_MBR_PROCESS_STD.PROCESSSTDSEQ'];\n                    var data = {\n                      cudtype: 'delete',\n                      'OWP_MBR_PROCESS_STD.PROCESSSTDSEQ': PROCESSSTDSEQ\n                    };\n                    mutate({\n                      url: '/deleteOwpMbrProcessStd/' + PROCESSSTDSEQ + '',\n                      data: data\n                    }).then(function (res) {\n                      _this.loadStdMainGrid();\n\n                      G.ReloadBody();\n\n                      _this.closeDialogCheck();\n                    }).catch(function (error) {\n                      console.error(error);\n                    });\n                  });\n                }\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      gridLength: 0,\n      facilityEnum: null,\n      measuringEnum: null,\n      inputSpeedEnum: null,\n      isDialogCheckOpen: false,\n      //TODO:change this\n      popMessage: '저장하시겠습니까'\n    };\n    return _this;\n  }\n  /**\r\n   * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n   * @param {Event} event 발생한 이벤트 객체\r\n   * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n   */\n\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _showApprovalDialog = this.showApprovalDialog;\n      this.loadStdMainGrid();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(OwpDialog, {\n        onOpen: this.state.isDialogCheckOpen,\n        dialogActions: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"w-full center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(OwpButton, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: this.clickDelete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 33\n          }\n        }, \"\\uC800\\uC7A5\"), /*#__PURE__*/React.createElement(OwpButton, {\n          color: \"secondary\",\n          variant: \"outlined\",\n          onClick: this.closeDialogCheck,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 33\n          }\n        }, \"\\uCDE8\\uC18C\"))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }\n      }, this.state.popMessage)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 b\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }\n      }, \"Std \\uB300\\uC2DC\\uBCF4\\uB4DC \\uC124\\uC815\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          textAlign: 'right',\n          paddingRight: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          right: '0',\n          margin: '1px 155px 0 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Pop_C0202002_03, {\n        PROCESSSEQ: this.props.PROCESSSEQ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'contained',\n        onClick: function onClick() {\n          return _this2.handleUpdate();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 29\n        }\n      }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(OwpButton, {\n        color: 'secondary',\n        variant: 'outlined',\n        onClick: this.openDialogCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 29\n        }\n      }, \"\\uC0AD\\uC81C\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(OwpTreeGrid, {\n        id: \"C0202011\",\n        LayoutUrl: \"assets/data/C0202011Def.xml\" // DataUrl={'/assets/data/C0202000Data.xml'}\n        ,\n        width: \"100%\",\n        height: \"40vh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport default Page;","map":{"version":3,"sources":["C:/Projects/Trunks/OWP-GIT/owp-fe/src/main/content/include/C0202002_tab07_tab01_tab02.js"],"names":["React","Component","OwpButton","OwpSearchDateField","OwpSearchSelectField","OwpSearchTextField","OwpTextField","OwpTreeGrid","OwpMessage","OwpDialog","Formsy","TGEvent","moment","query","mutate","setGridData","setRowAttribute","restoreGridSelect","setRowAttributes","Pop_C0202002_03","MAX_ROW","FACILITY","MATERIAL","GRID_ID","MEASURING_EQUIPMENT","facilityDummy","measuringDummy","inputSeedDummy","mock","Page","props","loadStdMainGrid","url","params","jsondata","JSON","stringify","PROCESSSEQ","then","res","console","log","catch","error","loadStdMainConfig","gridData","parse","facilityEnum","loadFacilityEnum","measuringEnum","loadMeasuringEnum","inputSpeedEnum","loadInputSpeedEnum","setState","state","gridLength","length","window","setTimeout","setGridDynamicColumnType","handleAddRow","message","variant","G","getGridByID","ActionAcceptEdit","OWPTGAddRow","row","setDynamicRowAttributes","handleUpdate","fillGridData","handleDeleteRow","_rows","Object","values","filter","item","Kind","forEach","isDelete","arrData","some","push","CONFIG_TYPE","TOTAL_INPUT","INPUT_SPEED","enums","enumKeys","Type","Enum","EnumKeys","loadFunctionEnum","loadMesasuringEquipmentEnum","openDialogCheck","isDialogCheckOpen","popMessage","closeDialogCheck","clickDelete","onDelete","GetSelRows","map","PROCESSSTDSEQ","data","cudtype","ReloadBody","_showApprovalDialog","showApprovalDialog","width","textAlign","paddingRight","position","right","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    OwpButton,\r\n    OwpSearchDateField,\r\n    OwpSearchSelectField,\r\n    OwpSearchTextField,\r\n    OwpTextField,\r\n    OwpTreeGrid,\r\n    OwpMessage,\r\n    OwpDialog,\r\n} from 'owp/wrapper';\r\nimport Formsy from 'formsy-react';\r\nimport * as TGEvent from 'owp/TGEvent';\r\nimport moment from 'moment';\r\nimport { query, mutate } from 'owp/api';\r\nimport { setGridData, setRowAttribute, restoreGridSelect, setRowAttributes } from 'main/GridUtill';\r\nimport Pop_C0202002_03 from './Pop_C0202002_03';\r\n\r\nconst MAX_ROW = 6;\r\nconst FACILITY = 'FACILITY';\r\nconst MATERIAL = 'MATERIAL';\r\nconst GRID_ID = 'C0202011';\r\nconst MEASURING_EQUIPMENT = 'MEASURING_EQUIPMENT';\r\n\r\nconst facilityDummy = [\r\n    { 'OWP_FACILITIES.FACILITY_NAME': 'R-1117', 'OWP_FACILITIES.FACILITY_SEQ': '28' },\r\n    { 'OWP_FACILITIES.FACILITY_NAME': 'AC-1105', 'OWP_FACILITIES.FACILITY_SEQ': '29' },\r\n    { 'OWP_FACILITIES.FACILITY_NAME': 'AC-1110', 'OWP_FACILITIES.FACILITY_SEQ': '27' },\r\n];\r\n\r\nconst measuringDummy = [\r\n    {\r\n        'MEASURING_EQUIPMENT.EQUIPMENT_NAME': 'B-1102-2020.12.15',\r\n        'MEASURING_EQUIPMENT.EQUIPMENT_SEQ': '30',\r\n    },\r\n    {\r\n        'MEASURING_EQUIPMENT.EQUIPMENT_NAME': 'A-1102-2020.12.15',\r\n        'MEASURING_EQUIPMENT.EQUIPMENT_SEQ': '31',\r\n    },\r\n];\r\n\r\nconst inputSeedDummy = [\r\n    {\r\n        'INPUT_SPEED.NAME': '00.00 kg/hr or kg/min',\r\n        'INPUT_SPEED.SEQ': '11',\r\n    },\r\n    {\r\n        'INPUT_SPEED.NAME': '00.30 kg/hr or 00.30 kg/min',\r\n        'INPUT_SPEED.SEQ': '12',\r\n    },\r\n];\r\n\r\nconst mock = `[{\"FACILITY\":\"28\",\"MATERIAL\":\"mock\",\"CONFIG_TYPE\":\"mock\",\"TOTAL_INPUT\":\"mock\",\"INPUT_SPEED\":\"11\",\"MEASURING_EQUIPMENT\":\"31\"},{\"FACILITY\":\"29\",\"MATERIAL\":\"mock\",\"CONFIG_TYPE\":\"mock\",\"TOTAL_INPUT\":\"mock\",\"INPUT_SPEED\":\"12\",\"MEASURING_EQUIPMENT\":\"30\"}]`;\r\n\r\nclass Page extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gridLength: 0,\r\n            facilityEnum: null,\r\n            measuringEnum: null,\r\n            inputSpeedEnum: null,\r\n            isDialogCheckOpen: false,\r\n            //TODO:change this\r\n            popMessage: '저장하시겠습니까',\r\n        };\r\n    }\r\n    /**\r\n     * Owp에서 사용하는 인풋에 대해 모두 사용할 수 있는 change 이벤트 리시버\r\n     * @param {Event} event 발생한 이벤트 객체\r\n     * @param {Function} callback 콜백 함수. 인풋의 name, value를 인수로 전달함.\r\n     */\r\n    componentDidMount() {\r\n        const _showApprovalDialog = this.showApprovalDialog;\r\n        this.loadStdMainGrid();\r\n    }\r\n\r\n    loadStdMainGrid = () => {\r\n        query({\r\n            url: 'listOwpMbrProcessStdByUnitProcess',\r\n            params: {\r\n                jsondata: JSON.stringify({\r\n                    'OWP_MBR_PROCESS_STD.UNITPROCESSSEQ': this.props.PROCESSSEQ + '',\r\n                }),\r\n            },\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                setGridData(GRID_ID, res);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    loadStdMainConfig = () => {\r\n        //TODO:change this load to another UI\r\n        query({\r\n            url: 'loadOwpMbrUnitProcessMainConfig/' + 139,\r\n        }).then((res) => {\r\n            if (res['OWP_MBR_UNIT_PROCESS.MAIN_CONFIG']) {\r\n                let gridData = JSON.parse(mock);\r\n                let facilityEnum = this.loadFacilityEnum();\r\n                let measuringEnum = this.loadMeasuringEnum();\r\n                let inputSpeedEnum = this.loadInputSpeedEnum();\r\n                //let functionEnum = this.loadFunctionEnum();\r\n                this.setState((state) => {\r\n                    return {\r\n                        ...state,\r\n                        gridLength: gridData.length,\r\n                        facilityEnum: facilityEnum,\r\n                        measuringEnum: measuringEnum,\r\n                        inputSpeedEnum: inputSpeedEnum,\r\n                        //functionEnum: functionEnum,\r\n                    };\r\n                });\r\n\r\n                setGridData('C0202011', gridData);\r\n                window.setTimeout(() => {\r\n                    this.setGridDynamicColumnType();\r\n                }, 100);\r\n            }\r\n        });\r\n    };\r\n\r\n    handleAddRow = () => {\r\n        if (this.state.gridLength >= MAX_ROW) {\r\n            OwpMessage({\r\n                message: '6 미만',\r\n                variant: 'error',\r\n            });\r\n        } else {\r\n            const G = TGEvent.getGridByID(GRID_ID);\r\n            G.ActionAcceptEdit();\r\n            TGEvent.OWPTGAddRow(GRID_ID, (row) => {\r\n                this.setDynamicRowAttributes(row);\r\n                this.setState((state) => {\r\n                    return {\r\n                        ...state,\r\n                        gridLength: state.gridLength + 1,\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        this.fillGridData();\r\n        this.setGridDynamicColumnType();\r\n    };\r\n\r\n    handleDeleteRow = () => {\r\n        this.fillGridData(true);\r\n        this.setGridDynamicColumnType();\r\n    };\r\n\r\n    setGridDynamicColumnType = () => {\r\n        const G = TGEvent.getGridByID(GRID_ID);\r\n        if (G) {\r\n            const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n            _rows.forEach((row) => {\r\n                this.setDynamicRowAttributes(row);\r\n            });\r\n        }\r\n    };\r\n\r\n    setDynamicRowAttributes = (row) => {\r\n        setRowAttributes(GRID_ID, row, FACILITY, this.state.facilityEnum);\r\n        setRowAttributes(GRID_ID, row, MEASURING_EQUIPMENT, this.state.measuringEnum);\r\n        setRowAttributes(GRID_ID, row, 'INPUT_SPEED', this.state.inputSpeedEnum);\r\n    };\r\n\r\n    fillGridData = (isDelete) => {\r\n        const G = TGEvent.getGridByID(GRID_ID);\r\n        if (G) {\r\n            const _rows = Object.values(G['Rows']).filter((item) => item.Kind == 'Data');\r\n            let arrData = [];\r\n            _rows.some((row) => {\r\n                if (isDelete && row['Selected'] === 1) {\r\n                    return false;\r\n                } else {\r\n                    arrData.push({\r\n                        FACILITY: row['FACILITY'],\r\n                        MATERIAL: row['MATERIAL'],\r\n                        CONFIG_TYPE: row['CONFIG_TYPE'],\r\n                        TOTAL_INPUT: row['TOTAL_INPUT'],\r\n                        INPUT_SPEED: row['INPUT_SPEED'],\r\n                        MEASURING_EQUIPMENT: row['MEASURING_EQUIPMENT'],\r\n                    });\r\n                }\r\n            });\r\n            setGridData(GRID_ID, arrData);\r\n            this.setState((state) => {\r\n                return { ...state, gridLength: arrData.length };\r\n            });\r\n        }\r\n    };\r\n\r\n    loadFacilityEnum = () => {\r\n        //TODO:load from server\r\n        //TODO: write new service to get facility from parent of unit process id=\r\n\r\n        let res = facilityDummy;\r\n        if (res) {\r\n            let enums = '';\r\n            let enumKeys = '';\r\n            res.forEach((item) => {\r\n                enums = enums + '|' + item['OWP_FACILITIES.FACILITY_NAME'];\r\n                enumKeys = enumKeys + '|' + item['OWP_FACILITIES.FACILITY_SEQ'];\r\n            });\r\n\r\n            return {\r\n                Type: 'Enum',\r\n                Enum: enums,\r\n                EnumKeys: enumKeys,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    loadFunctionEnum = () => {\r\n        query({\r\n            url: 'listIPX_CommonCodeLowAC',\r\n            params: {\r\n                jsondata: JSON.stringify({\r\n                    'IPX_COMMONCODE.GROUPID': 'D023000',\r\n                }),\r\n            },\r\n        }).then((res) => {\r\n            console.log(res);\r\n        });\r\n    };\r\n\r\n    loadMeasuringEnum = () => {\r\n        //TODO:load from server\r\n        //TODO: write new service to get facility from parent of unit process id=\r\n\r\n        let res = measuringDummy;\r\n        if (res) {\r\n            let enums = '';\r\n            let enumKeys = '';\r\n            res.forEach((item) => {\r\n                enums = enums + '|' + item['MEASURING_EQUIPMENT.EQUIPMENT_NAME'];\r\n                enumKeys = enumKeys + '|' + item['MEASURING_EQUIPMENT.EQUIPMENT_SEQ'];\r\n            });\r\n\r\n            return {\r\n                Type: 'Enum',\r\n                Enum: enums,\r\n                EnumKeys: enumKeys,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    loadInputSpeedEnum = () => {\r\n        //TODO:load from server\r\n        //TODO: write new service to get facility from parent of unit process id=\r\n\r\n        let res = inputSeedDummy;\r\n        if (res) {\r\n            let enums = '';\r\n            let enumKeys = '';\r\n            res.forEach((item) => {\r\n                enums = enums + '|' + item['INPUT_SPEED.NAME'];\r\n                enumKeys = enumKeys + '|' + item['INPUT_SPEED.SEQ'];\r\n            });\r\n\r\n            return {\r\n                Type: 'Enum',\r\n                Enum: enums,\r\n                EnumKeys: enumKeys,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    loadInputSpeedEnum = () => {\r\n        //TODO:load from server\r\n        //TODO: write new service to get facility from parent of unit process id=\r\n\r\n        let res = inputSeedDummy;\r\n        if (res) {\r\n            let enums = '';\r\n            let enumKeys = '';\r\n            res.forEach((item) => {\r\n                enums = enums + '|' + item['INPUT_SPEED.NAME'];\r\n                enumKeys = enumKeys + '|' + item['INPUT_SPEED.SEQ'];\r\n            });\r\n\r\n            return {\r\n                Type: 'Enum',\r\n                Enum: enums,\r\n                EnumKeys: enumKeys,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    loadMesasuringEquipmentEnum = () => {};\r\n\r\n    openDialogCheck = () => {\r\n        this.setState({ isDialogCheckOpen: true });\r\n        this.setState({ popMessage: '저장하시겠습니까?' });\r\n    };\r\n\r\n    closeDialogCheck = () => {\r\n        this.setState({ isDialogCheckOpen: false });\r\n    };\r\n\r\n    clickDelete = () => {\r\n        this.onDelete('START');\r\n    };\r\n\r\n    onDelete = async () => {\r\n        const G = TGEvent.getGridByID(GRID_ID);\r\n        if (G) {\r\n            const _rows = G.GetSelRows();\r\n            if (_rows.length > 0) {\r\n                _rows\r\n                    .filter((item) => item.Kind === 'Data')\r\n                    .map((row) => {\r\n                        let PROCESSSTDSEQ = row['OWP_MBR_PROCESS_STD.PROCESSSTDSEQ'];\r\n                        const data = {\r\n                            cudtype: 'delete',\r\n                            'OWP_MBR_PROCESS_STD.PROCESSSTDSEQ': PROCESSSTDSEQ,\r\n                        };\r\n\r\n                        mutate({\r\n                            url: '/deleteOwpMbrProcessStd/' + PROCESSSTDSEQ + '',\r\n                            data,\r\n                        })\r\n                            .then((res) => {\r\n                                this.loadStdMainGrid();\r\n                                G.ReloadBody();\r\n                                this.closeDialogCheck();\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <OwpDialog\r\n                    onOpen={this.state.isDialogCheckOpen}\r\n                    dialogActions={\r\n                        <React.Fragment>\r\n                            <div className=\"w-full center\">\r\n                                <OwpButton\r\n                                    color=\"secondary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={this.clickDelete}\r\n                                >\r\n                                    저장\r\n                                </OwpButton>\r\n                                <OwpButton\r\n                                    color=\"secondary\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={this.closeDialogCheck}\r\n                                >\r\n                                    취소\r\n                                </OwpButton>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    <React.Fragment>{this.state.popMessage}</React.Fragment>\r\n                </OwpDialog>\r\n                <div style={{ width: '100%' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 b\">Std 대시보드 설정</div>\r\n                        <div className=\"col-md-6\" style={{ textAlign: 'right', paddingRight: '0' }}>\r\n                            {/* <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'contained'}\r\n                                onClick={() => this.handleAddRow()}\r\n                            >\r\n                                추가\r\n                            </OwpButton> */}\r\n                            <div\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: '0',\r\n                                    margin: '1px 155px 0 0',\r\n                                }}\r\n                            >\r\n                                <Pop_C0202002_03\r\n                                    PROCESSSEQ={this.props.PROCESSSEQ}\r\n                                ></Pop_C0202002_03>\r\n                            </div>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'contained'}\r\n                                onClick={() => this.handleUpdate()}\r\n                            >\r\n                                수정\r\n                            </OwpButton>\r\n                            <OwpButton\r\n                                color={'secondary'}\r\n                                variant={'outlined'}\r\n                                onClick={this.openDialogCheck}\r\n                            >\r\n                                삭제\r\n                            </OwpButton>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <OwpTreeGrid\r\n                                id=\"C0202011\"\r\n                                LayoutUrl=\"assets/data/C0202011Def.xml\"\r\n                                // DataUrl={'/assets/data/C0202000Data.xml'}\r\n                                width=\"100%\"\r\n                                height=\"40vh\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}